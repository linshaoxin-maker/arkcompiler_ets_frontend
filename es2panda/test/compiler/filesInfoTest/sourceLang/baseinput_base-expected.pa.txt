

slotNum = 0x2
.language ECMAScript
.function any default.#~ES=#ES(any a0, any a1, any a2) {
	lda.str base
	stobjbyname 0x0, a, a2
	lda a2
	return
}

slotNum = 0x3
.language ECMAScript
.function any default.func_main_0(any a0, any a1, any a2) {
	ldhole
	sta v0
	defineclasswithbuffer 0x0, default.#~ES=#ES, default_1399, 0x0, v0
	ldobjbyname 0x1, prototype
	ldundefined
	returnundefined
}


slotNum = 0x2
.language ArkTs
.function any ets.#~AT=#AT(any a0, any a1, any a2) {
	lda.str base
	stobjbyname 0x0, b, a2
	lda a2
	return
}

slotNum = 0x3
.language ArkTs
.function any ets.func_main_0(any a0, any a1, any a2) {
	ldhole
	sta v0
	defineclasswithbuffer 0x0, ets.#~AT=#AT, ets_1440, 0x0, v0
	ldobjbyname 0x1, prototype
	ldundefined
	returnundefined
}


slotNum = 0x2
.language JavaScript
.function any js.#~JS=#JS(any a0, any a1, any a2) {
	ldlexvar 0x0, 0x0
	callruntime.callinit 0x0, a2
	lda a2
	return
}

slotNum = 0x2
.language JavaScript
.function any js.#~JS>#instance_initializer(any a0, any a1, any a2) {
	lda.str base
	definepropertybyname 0x0, c, a2
	ldundefined
	returnundefined
}

slotNum = 0x4
.language JavaScript
.function any js.func_main_0(any a0, any a1, any a2) {
	nop
	newlexenv 0x1
label@2: ldhole
	sta v1
	defineclasswithbuffer 0x0, js.#~JS=#JS, js_1481, 0x0, v1
	ldobjbyname 0x1, prototype
	definemethod 0x3, js.#~JS>#instance_initializer, 0x0
	stlexvar 0x0, 0x0
label@8: jmp label@13
label@9: sta v0
	poplexenv
	lda v0
	throw
label@13: poplexenv
	ldundefined
	returnundefined
}

.catchall label@2, label@8, label@9


slotNum = 0x3
.language TypeScript
.function any ts.#*#TS(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str base
	sta v1
	lda v0
	callarg1 0x1, v1
	ldundefined
	returnundefined
}

slotNum = 0x3
.language TypeScript
.function any ts.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, ts.#*#TS, 0x0
	callarg0 0x1
	ldundefined
	returnundefined
}


