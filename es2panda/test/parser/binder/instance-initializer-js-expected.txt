.language ECMAScript

.function any .#~A=#A(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldlexvar 0x0, 0x0
	callruntime.callinit 0x0, a2
	lda a2
	return
label_2: 
}

.function any .#~A>#instance_initializer(any a0, any a1, any a2) {
label_1: 
label_0: 
	newlexenv 0x2
	lda a1
	stlexvar 0x0, 0x0
	lda a2
	stlexvar 0x0, 0x1
	ldlexvar 0x0, 0x1
	sta v0
	ldai 0x5
	definepropertybyname 0x0, a, v0
	definefunc 0x2, .#~A>@0*#b, 0x0
	definepropertybyname 0x3, b, v0
	ldundefined
	returnundefined
label_2: 
}

.function any .#~A>#instance_initializer^1(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldundefined
	returnundefined
label_2: 
}

.function any .#~A>@0*#b(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldundefined
	returnundefined
label_2: 
}

.function any .func_main_0(any a0, any a1, any a2) {
	mov v0, a0
	mov v1, a1
	mov v2, a2
	newlexenv 0x1
LABEL_2: 
	ldhole
	sta v7
	defineclasswithbuffer 0x0, .#~A=#A, _2, 0x0, v7
	sta v5
	sta v6
	lda v5
	ldobjbyname 0x1, prototype
	sta v8
	sta v8
	definemethod 0x3, .#~A>#instance_initializer, 0x0
	stlexvar 0x0, 0x0
	lda v5
LABEL_3: 
	jmp LABEL_5
LABEL_4: 
	poplexenv
	throw
LABEL_5: 
	poplexenv
	sta v3
	ldundefined
	returnundefined
}

.catchall LABEL_2, LABEL_3, LABEL_4


======> literal array buffer <======
------------------------------------
slot _0
{
  index: 0
    tag: 0
    val: 5
},
{
  index: 1
    tag: 5
    val: instance_initializer
},
------------------------------------
slot _1
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 0
},
{
  index: 4
    tag: 2
    val: 0
},
{
  index: 5
    tag: 2
    val: 0
},
------------------------------------
slot _2
{
  index: 0
    tag: 0
    val: 5
},
{
  index: 1
    tag: 5
    val: instance_initializer
},
{
  index: 2
    tag: 0
    val: 6
},
{
  index: 3
    tag: 6
    val: .#~A>#instance_initializer^1
},
{
  index: 4
    tag: 0
    val: 9
},
{
  index: 5
    tag: 9
    val: 0
},
{
  index: 6
    tag: 0
    val: 2
},
{
  index: 7
    tag: 2
    val: 1
},
