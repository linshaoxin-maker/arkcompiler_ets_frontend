/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

common/class_test_7195 { 8 [ tag_value:5, string:"class1", tag_value:5, string:"class2", tag_value:5, string:"class3", tag_value:5, string:"test_class_in_func", ]}

common/class_test_7219 { 10 [ i32:0, i32:0, i32:0, i32:2, string:"d", string:"d", string:"a", string:"a", i32:0, i32:0, ]}

common/class_test_7263 { 8 [ tag_value:5, string:"c", tag_value:6, method:common/class_test.#*@3~@2>#c, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/class_test_7285 { 8 [ tag_value:5, string:"c", tag_value:6, method:common/class_test.#~@0>#c, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/class_test_7307 { 8 [ tag_value:5, string:"c", tag_value:6, method:common/class_test.#~@1>#c, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/function_test_7329 { 4 [ tag_value:5, string:"test_function_in_func", tag_value:5, string:"function_test3", ]}

common/function_test_7343 { 10 [ i32:0, i32:0, i32:0, i32:2, string:"i", string:"i", string:"f", string:"f", i32:0, i32:0, ]}

common/method_test_7387 { 10 [ tag_value:5, string:"methodClass1", tag_value:5, string:"methodClass2", tag_value:5, string:"methodClass4", tag_value:5, string:"methodClass3", tag_value:5, string:"test_method_in_func", ]}

common/method_test_7416 { 10 [ i32:0, i32:0, i32:0, i32:2, string:"r", string:"r", string:"k", string:"k", i32:0, i32:0, ]}

common/method_test_7460 { 8 [ tag_value:5, string:"u", tag_value:6, method:common/method_test.#*@4~@3>#u, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/method_test_7482 { 8 [ tag_value:5, string:"s", tag_value:6, method:common/method_test.#~@0>#s, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/method_test_7504 { 8 [ tag_value:5, string:"q", tag_value:6, method:common/method_test.#~@1>#q, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/method_test_7526 { 14 [ tag_value:5, string:"m", tag_value:6, method:common/method_test.#~@2>#m, tag_value:9, method_affiliate:0, tag_value:5, string:"n", tag_value:6, method:common/method_test.#~@2<#n, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

common/name_space_test1_7561 

common/name_space_test1_7565 { 14 [ i32:0, i32:0, i32:0, i32:4, string:"y", string:"z", string:"v", string:"v", string:"w", string:"w", string:"x", string:"x", i32:0, i32:0, ]}

common/name_space_test2_7625 

common/name_space_test2_7629 { 13 [ i32:1, string:"./name_space_test1", i32:0, i32:0, i32:0, i32:2, string:"w", string:"w", method_affiliate:0, string:"a1", string:"v", method_affiliate:0, i32:0, ]}

common/name_space_test3_7681 

common/name_space_test3_7685 { 10 [ i32:0, i32:0, i32:0, i32:2, string:"b1", string:"b1", string:"c1", string:"c1", i32:0, i32:0, ]}

common/property_test_7729 { 8 [ tag_value:5, string:"propertyClass1", tag_value:5, string:"propertyClass2", tag_value:5, string:"propertyClass3", tag_value:5, string:"test_property_in_func", ]}

common/property_test_7753 { 10 [ i32:0, i32:0, i32:0, i32:2, string:"h1", string:"h1", string:"d1", string:"d1", i32:0, i32:0, ]}

common/property_test_7797 { 2 [ tag_value:2, i32:0, ]}

common/property_test_7806 { 2 [ tag_value:2, i32:0, ]}

common/property_test_7815 { 2 [ tag_value:2, i32:0, ]}

common/record_test_7824 

common/record_test_7828 { 10 [ i32:0, i32:0, i32:0, i32:2, string:"o1", string:"o1", string:"n1", string:"n1", i32:0, i32:0, ]}

common/record_test_7872 { 8 [ tag_value:5, string:"t1", tag_value:5, string:"c", tag_value:5, string:"u1", tag_value:2, i32:3, ]}

common/record_test_7896 { 8 [ tag_value:5, string:"p1", tag_value:5, string:"a", tag_value:5, string:"q1", tag_value:2, i32:1, ]}

common/record_test_7920 { 8 [ tag_value:5, string:"r1", tag_value:5, string:"b", tag_value:5, string:"s1", tag_value:2, i32:2, ]}

main_7944 

main_7948 { 58 [ i32:8, string:"./common/class_test", string:"./common/method_test", string:"./common/property_test", string:"./common/function_test", string:"./common/record_test", string:"./common/name_space_test1", string:"./common/name_space_test2", string:"./common/name_space_test3", i32:14, string:"d", string:"d", method_affiliate:0, string:"i", string:"i", method_affiliate:3, string:"r", string:"r", method_affiliate:1, string:"w", string:"w", method_affiliate:6, string:"a1", string:"a1", method_affiliate:6, string:"x", string:"x", method_affiliate:5, string:"z", string:"z", method_affiliate:5, string:"h1", string:"h1", method_affiliate:2, string:"o1", string:"o1", method_affiliate:4, string:"a", string:"a", method_affiliate:0, string:"f", string:"f", method_affiliate:3, string:"k", string:"k", method_affiliate:1, string:"d1", string:"d1", method_affiliate:2, string:"n1", string:"n1", method_affiliate:4, i32:1, string:"v1", method_affiliate:7, i32:0, i32:0, i32:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record common/class_test {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/class_test_7195
	u32 moduleRecordIdx common/class_test_7219
}
.record.source_file 

.record common/function_test {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/function_test_7329
	u32 moduleRecordIdx common/function_test_7343
}
.record.source_file 

.record common/method_test {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/method_test_7387
	u32 moduleRecordIdx common/method_test_7416
}
.record.source_file 

.record common/name_space_test1 {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/name_space_test1_7561
	u32 moduleRecordIdx common/name_space_test1_7565
}
.record.source_file 

.record common/name_space_test2 {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/name_space_test2_7625
	u32 moduleRecordIdx common/name_space_test2_7629
}
.record.source_file 

.record common/name_space_test3 {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/name_space_test3_7681
	u32 moduleRecordIdx common/name_space_test3_7685
}
.record.source_file 

.record common/property_test {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/property_test_7729
	u32 moduleRecordIdx common/property_test_7753
}
.record.source_file 

.record common/record_test {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames common/record_test_7824
	u32 moduleRecordIdx common/record_test_7828
}
.record.source_file 

.record main {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames main_7944
	u32 moduleRecordIdx main_7948
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 16
.function any common/class_test.#*#a(any a0, any a1, any a2) {
	ldhole                                   # line: 13           # column: 0
	sta v0                                   # line: 13           # column: 0
	defineclasswithbuffer 0x0, common/class_test.#*@3~@2=#e, common/class_test_7263, 0x0, v0 # line: 13           # column: 0
	sta v0                                   # line: 13           # column: 0
	ldobjbyname 0x1, prototype               # line: 13           # column: 0
	ldlexvar 0x0, 0x0                        # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	throw.undefinedifholewithname b          # line: 19           # column: 0
	mov v2, v1                               # line: 19           # column: 0
	newobjrange 0x3, 0x1, v2                 # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	mov v2, v0                               # line: 19           # column: 0
	newobjrange 0x5, 0x1, v2                 # line: 20           # column: 0
	sta v0                                   # line: 20           # column: 0
	lda v1                                   # line: 21           # column: 0
	ldobjbyname 0x7, c                       # line: 21           # column: 0
	callthis0 0x9, v1                        # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	lda v0                                   # line: 21           # column: 0
	ldobjbyname 0xb, c                       # line: 21           # column: 0
	callthis0 0xd, v0                        # line: 21           # column: 0
	add2 0xf, v1                             # line: 21           # column: 0
	return                                   # line: 22           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/class_test.#*@3~@2=#e(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/class_test.#*@3~@2>#c(any a0, any a1, any a2) {
	ldai 0x3                                 # line: 16           # column: 0
	return                                   # line: 16           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/class_test.#~@0=#d(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/class_test.#~@0>#c(any a0, any a1, any a2) {
	ldai 0x1                                 # line: 3           # column: 0
	return                                   # line: 3           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/class_test.#~@1=#b(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/class_test.#~@1>#c(any a0, any a1, any a2) {
	ldai 0x2                                 # line: 9           # column: 0
	return                                   # line: 9           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 7
.function any common/class_test.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x1                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, common/class_test.#*#a, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	defineclasswithbuffer 0x1, common/class_test.#~@0=#d, common/class_test_7285, 0x0, v0 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x2, prototype               # line: 18446744073709551615           # column: 0
	lda v0                                   # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 6           # column: 0
	sta v0                                   # line: 6           # column: 0
	defineclasswithbuffer 0x4, common/class_test.#~@1=#b, common/class_test_7307, 0x0, v0 # line: 6           # column: 0
	sta v0                                   # line: 6           # column: 0
	ldobjbyname 0x5, prototype               # line: 6           # column: 0
	lda v0                                   # line: 6           # column: 0
	stlexvar 0x0, 0x0                        # line: 6           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 6
.function any common/function_test.#*#f(any a0, any a1, any a2) {
	definefunc 0x0, common/function_test.#*@0*#g, 0x0 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldlexvar 0x0, 0x0                        # line: 17           # column: 0
	callarg0 0x1                             # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	lda v0                                   # line: 17           # column: 0
	callarg0 0x3                             # line: 17           # column: 0
	add2 0x5, v1                             # line: 17           # column: 0
	return                                   # line: 18           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/function_test.#*#i(any a0, any a1, any a2) {
	ldai 0x1                                 # line: 2           # column: 0
	return                                   # line: 2           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/function_test.#*#j(any a0, any a1, any a2) {
	ldai 0x2                                 # line: 6           # column: 0
	return                                   # line: 6           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any common/function_test.#*@0*#g(any a0, any a1, any a2) {
	definefunc 0x0, common/function_test.#*@0*@1*#h, 0x0 # line: 18446744073709551615           # column: 0
	callarg0 0x1                             # line: 14           # column: 0
	return                                   # line: 15           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/function_test.#*@0*@1*#h(any a0, any a1, any a2) {
	ldai 0x3                                 # line: 12           # column: 0
	return                                   # line: 12           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any common/function_test.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x1                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, common/function_test.#*#j, 0x0 # line: 18446744073709551615           # column: 0
	stlexvar 0x0, 0x0                        # line: 18446744073709551615           # column: 0
	definefunc 0x1, common/function_test.#*#i, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	definefunc 0x2, common/function_test.#*#f, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 31
.function any common/method_test.#*#k(any a0, any a1, any a2) {
	ldhole                                   # line: 27           # column: 0
	sta v0                                   # line: 27           # column: 0
	defineclasswithbuffer 0x0, common/method_test.#*@4~@3=#t, common/method_test_7460, 0x0, v0 # line: 27           # column: 0
	sta v0                                   # line: 27           # column: 0
	ldobjbyname 0x1, prototype               # line: 27           # column: 0
	ldlexvar 0x0, 0x0                        # line: 33           # column: 0
	sta v1                                   # line: 33           # column: 0
	throw.undefinedifholewithname p          # line: 33           # column: 0
	mov v3, v1                               # line: 33           # column: 0
	newobjrange 0x3, 0x1, v3                 # line: 33           # column: 0
	sta v1                                   # line: 33           # column: 0
	mov v3, v0                               # line: 33           # column: 0
	newobjrange 0x5, 0x1, v3                 # line: 34           # column: 0
	sta v0                                   # line: 34           # column: 0
	ldlexvar 0x0, 0x1                        # line: 35           # column: 0
	sta v2                                   # line: 35           # column: 0
	throw.undefinedifholewithname l          # line: 35           # column: 0
	mov v3, v2                               # line: 35           # column: 0
	newobjrange 0x7, 0x1, v3                 # line: 35           # column: 0
	sta v2                                   # line: 35           # column: 0
	lda v1                                   # line: 36           # column: 0
	ldobjbyname 0x9, q                       # line: 36           # column: 0
	callthis0 0xb, v1                        # line: 36           # column: 0
	sta v1                                   # line: 36           # column: 0
	lda v0                                   # line: 36           # column: 0
	ldobjbyname 0xd, u                       # line: 36           # column: 0
	callthis0 0xf, v0                        # line: 36           # column: 0
	add2 0x11, v1                            # line: 36           # column: 0
	sta v0                                   # line: 36           # column: 0
	lda v2                                   # line: 36           # column: 0
	ldobjbyname 0x12, m                      # line: 36           # column: 0
	callthis0 0x14, v2                       # line: 36           # column: 0
	add2 0x16, v0                            # line: 36           # column: 0
	sta v0                                   # line: 36           # column: 0
	ldlexvar 0x0, 0x1                        # line: 36           # column: 0
	sta v1                                   # line: 36           # column: 0
	throw.undefinedifholewithname l          # line: 36           # column: 0
	lda v1                                   # line: 36           # column: 0
	ldobjbyname 0x17, n                      # line: 36           # column: 0
	callthis0 0x19, v1                       # line: 36           # column: 0
	add2 0x1b, v0                            # line: 36           # column: 0
	sta v0                                   # line: 36           # column: 0
	lda v2                                   # line: 36           # column: 0
	ldobjbyname 0x1c, o                      # line: 36           # column: 0
	add2 0x1e, v0                            # line: 36           # column: 0
	return                                   # line: 37           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#*@4~@3=#t(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#*@4~@3>#u(any a0, any a1, any a2) {
	ldai 0x3                                 # line: 30           # column: 0
	return                                   # line: 30           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@0=#r(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@0>#s(any a0, any a1, any a2) {
	ldai 0x1                                 # line: 3           # column: 0
	return                                   # line: 3           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@1=#p(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@1>#q(any a0, any a1, any a2) {
	ldai 0x2                                 # line: 9           # column: 0
	return                                   # line: 9           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@2<#n(any a0, any a1, any a2) {
	ldai 0x2                                 # line: 19           # column: 0
	return                                   # line: 19           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@2=#l(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@2>#m(any a0, any a1, any a2) {
	ldai 0x1                                 # line: 15           # column: 0
	return                                   # line: 15           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/method_test.#~@2>#o(any a0, any a1, any a2) {
	ldai 0x3                                 # line: 23           # column: 0
	return                                   # line: 23           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 11
.function any common/method_test.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x2                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, common/method_test.#*#k, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	defineclasswithbuffer 0x1, common/method_test.#~@0=#r, common/method_test_7482, 0x0, v0 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x2, prototype               # line: 18446744073709551615           # column: 0
	lda v0                                   # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 6           # column: 0
	sta v0                                   # line: 6           # column: 0
	defineclasswithbuffer 0x4, common/method_test.#~@1=#p, common/method_test_7504, 0x0, v0 # line: 6           # column: 0
	sta v0                                   # line: 6           # column: 0
	ldobjbyname 0x5, prototype               # line: 6           # column: 0
	lda v0                                   # line: 6           # column: 0
	stlexvar 0x0, 0x0                        # line: 6           # column: 0
	ldhole                                   # line: 12           # column: 0
	sta v0                                   # line: 12           # column: 0
	defineclasswithbuffer 0x7, common/method_test.#~@2=#l, common/method_test_7526, 0x0, v0 # line: 12           # column: 0
	sta v0                                   # line: 12           # column: 0
	ldobjbyname 0x8, prototype               # line: 12           # column: 0
	sta v1                                   # line: 12           # column: 0
	lda.str o                                # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	ldundefined                              # line: 12           # column: 0
	sta v3                                   # line: 12           # column: 0
	lda v1                                   # line: 21           # column: 0
	definemethod 0xa, common/method_test.#~@2>#o, 0x0 # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	ldfalse                                  # line: 12           # column: 0
	definegettersetterbyvalue v1, v2, v4, v3 # line: 12           # column: 0
	lda v0                                   # line: 12           # column: 0
	stlexvar 0x0, 0x1                        # line: 12           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test1.#*#v(any a0, any a1, any a2) {
	ldai 0x4                                 # line: 16           # column: 0
	return                                   # line: 16           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test1.#*#w(any a0, any a1, any a2) {
	ldai 0x3                                 # line: 12           # column: 0
	return                                   # line: 12           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test1.#*#x(any a0, any a1, any a2) {
	ldai 0x1                                 # line: 2           # column: 0
	return                                   # line: 2           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test1.#*#y(any a0, any a1, any a2) {
	ldai 0x2                                 # line: 6           # column: 0
	return                                   # line: 6           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 4
.function any common/name_space_test1.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, common/name_space_test1.#*#y, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	definefunc 0x1, common/name_space_test1.#*#x, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x3                          # line: 18446744073709551615           # column: 0
	definefunc 0x2, common/name_space_test1.#*#w, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x2                          # line: 18446744073709551615           # column: 0
	definefunc 0x3, common/name_space_test1.#*#v, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test2.func_main_0(any a0, any a1, any a2) {
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test3.#*#b1(any a0, any a1, any a2) {
	ldai 0x5                                 # line: 2           # column: 0
	return                                   # line: 2           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any common/name_space_test3.#*#c1(any a0, any a1, any a2) {
	ldai 0x6                                 # line: 6           # column: 0
	return                                   # line: 6           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/name_space_test3.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, common/name_space_test3.#*#b1, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	definefunc 0x1, common/name_space_test3.#*#c1, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 14
.function any common/property_test.#*#d1(any a0, any a1, any a2) {
	nop                                      # line: 11           # column: 0
	newlexenv 0x1                            # line: 11           # column: 0
	label@2: ldhole                          # line: 11           # column: 0
	sta v1                                   # line: 11           # column: 0
	defineclasswithbuffer 0x0, common/property_test.#*@3~@2=#k1, common/property_test_7797, 0x0, v1 # line: 11           # column: 0
	sta v1                                   # line: 11           # column: 0
	ldobjbyname 0x1, prototype               # line: 11           # column: 0
	definemethod 0x3, common/property_test.#*@3~@2>#instance_initializer, 0x0 # line: 11           # column: 0
	stlexvar 0x0, 0x0                        # line: 11           # column: 0
	lda v1                                   # line: 11           # column: 0
	definemethod 0x4, common/property_test.#*@3~@2>#static_initializer, 0x0 # line: 11           # column: 0
	callthis0 0x5, v1                        # line: 11           # column: 0
	label@12: jmp label@17                   # line: 11           # column: 0
	label@13: sta v0                         # line: 11           # column: 0
	poplexenv                                # line: 11           # column: 0
	lda v0                                   # line: 11           # column: 0
	throw                                    # line: 11           # column: 0
	label@17: poplexenv                      # line: 11           # column: 0
	ldlexvar 0x0, 0x0                        # line: 11           # column: 0
	sta v0                                   # line: 11           # column: 0
	throw.undefinedifholewithname e1         # line: 11           # column: 0
	mov v2, v0                               # line: 11           # column: 0
	newobjrange 0x7, 0x1, v2                 # line: 11           # column: 0
	ldobjbyname 0x9, f1                      # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	lda v1                                   # line: 17           # column: 0
	ldobjbyname 0xb, m1                      # line: 17           # column: 0
	add2 0xd, v0                             # line: 17           # column: 0
	return                                   # line: 17           # column: 0
.catchall :
	try_begin_label : label@2
	try_end_label : label@12
	catch_begin_label : label@13
	catch_end_label : label@13
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#*@3~@2=#k1(any a0, any a1, any a2) {
	ldlexvar 0x0, 0x0                        # line: 0           # column: 0
	callruntime.callinit 0x0, a2             # line: 0           # column: 0
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#*@3~@2>#instance_initializer(any a0, any a1, any a2) {
	ldai 0x6                                 # line: 13           # column: 0
	definepropertybyname 0x0, l1, a2         # line: 13           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#*@3~@2>#static_initializer(any a0, any a1, any a2) {
	ldai 0x5                                 # line: 12           # column: 0
	definepropertybyname 0x0, m1, a2         # line: 12           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#~@0=#h1(any a0, any a1, any a2) {
	ldlexvar 0x0, 0x0                        # line: 0           # column: 0
	callruntime.callinit 0x0, a2             # line: 0           # column: 0
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#~@0>#instance_initializer(any a0, any a1, any a2) {
	ldai 0x2                                 # line: 2           # column: 0
	definepropertybyname 0x0, i1, a2         # line: 2           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#~@0>#static_initializer(any a0, any a1, any a2) {
	ldai 0x1                                 # line: 1           # column: 0
	definepropertybyname 0x0, j1, a2         # line: 1           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#~@1=#e1(any a0, any a1, any a2) {
	ldlexvar 0x0, 0x0                        # line: 0           # column: 0
	callruntime.callinit 0x0, a2             # line: 0           # column: 0
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#~@1>#instance_initializer(any a0, any a1, any a2) {
	ldai 0x4                                 # line: 7           # column: 0
	definepropertybyname 0x0, f1, a2         # line: 7           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any common/property_test.#~@1>#static_initializer(any a0, any a1, any a2) {
	ldai 0x3                                 # line: 6           # column: 0
	definepropertybyname 0x0, g1, a2         # line: 6           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 15
.function any common/property_test.func_main_0(any a0, any a1, any a2) {
	nop                                      # line: 18446744073709551615           # column: 0
	newlexenv 0x1                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, common/property_test.#*#d1, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	newlexenv 0x1                            # line: 18446744073709551615           # column: 0
	label@5: ldhole                          # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	defineclasswithbuffer 0x1, common/property_test.#~@0=#h1, common/property_test_7806, 0x0, v1 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x2, prototype               # line: 18446744073709551615           # column: 0
	definemethod 0x4, common/property_test.#~@0>#instance_initializer, 0x0 # line: 18446744073709551615           # column: 0
	stlexvar 0x0, 0x0                        # line: 18446744073709551615           # column: 0
	lda v1                                   # line: 18446744073709551615           # column: 0
	definemethod 0x5, common/property_test.#~@0>#static_initializer, 0x0 # line: 18446744073709551615           # column: 0
	callthis0 0x6, v1                        # line: 18446744073709551615           # column: 0
	label@15: jmp label@20                   # line: 18446744073709551615           # column: 0
	label@16: sta v0                         # line: 18446744073709551615           # column: 0
	poplexenv                                # line: 18446744073709551615           # column: 0
	lda v0                                   # line: 18446744073709551615           # column: 0
	throw                                    # line: 18446744073709551615           # column: 0
	label@20: poplexenv                      # line: 18446744073709551615           # column: 0
	lda v1                                   # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	newlexenv 0x1                            # line: 18446744073709551615           # column: 0
	label@24: ldhole                         # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	defineclasswithbuffer 0x8, common/property_test.#~@1=#e1, common/property_test_7815, 0x0, v1 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x9, prototype               # line: 5           # column: 0
	definemethod 0xb, common/property_test.#~@1>#instance_initializer, 0x0 # line: 5           # column: 0
	stlexvar 0x0, 0x0                        # line: 5           # column: 0
	lda v1                                   # line: 5           # column: 0
	definemethod 0xc, common/property_test.#~@1>#static_initializer, 0x0 # line: 5           # column: 0
	callthis0 0xd, v1                        # line: 5           # column: 0
	label@34: jmp label@39                   # line: 5           # column: 0
	label@35: sta v0                         # line: 5           # column: 0
	poplexenv                                # line: 5           # column: 0
	lda v0                                   # line: 5           # column: 0
	throw                                    # line: 5           # column: 0
	label@39: poplexenv                      # line: 5           # column: 0
	lda v1                                   # line: 5           # column: 0
	stlexvar 0x0, 0x0                        # line: 5           # column: 0
	ldundefined                              # line: 5           # column: 0
	returnundefined                          # line: 5           # column: 0
.catchall :
	try_begin_label : label@5
	try_end_label : label@15
	catch_begin_label : label@16
	catch_end_label : label@16
.catchall :
	try_begin_label : label@24
	try_end_label : label@34
	catch_begin_label : label@35
	catch_end_label : label@35
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 6
.function any common/record_test.#*#n1(any a0, any a1, any a2) {
	createobjectwithbuffer 0x0, common/record_test_7872 # line: 11           # column: 0
	sta v0                                   # line: 11           # column: 0
	ldlexvar 0x0, 0x0                        # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	throw.undefinedifholewithname w1         # line: 16           # column: 0
	lda.str s1                               # line: 16           # column: 0
	ldobjbyvalue 0x1, v1                     # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	lda v0                                   # line: 16           # column: 0
	ldobjbyname 0x3, u1                      # line: 16           # column: 0
	add2 0x5, v1                             # line: 16           # column: 0
	return                                   # line: 17           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any common/record_test.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x1                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, common/record_test.#*#n1, 0x0 # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	createobjectwithbuffer 0x1, common/record_test_7896 # line: 18446744073709551615           # column: 0
	stmodulevar 0x0                          # line: 18446744073709551615           # column: 0
	createobjectwithbuffer 0x2, common/record_test_7920 # line: 5           # column: 0
	stlexvar 0x0, 0x0                        # line: 5           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 116
.function any main.func_main_0(any a0, any a1, any a2) {
	getmodulenamespace 0x7                   # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldexternalmodulevar 0x0                  # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	throw.undefinedifholewithname d          # line: 18           # column: 0
	mov v4, v1                               # line: 18           # column: 0
	newobjrange 0x0, 0x1, v4                 # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	tryldglobalbyname 0x2, print             # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda.str class1 :                         # line: 19           # column: 0
	sta v3                                   # line: 19           # column: 0
	lda v1                                   # line: 19           # column: 0
	ldobjbyname 0x3, c                       # line: 19           # column: 0
	callthis0 0x5, v1                        # line: 19           # column: 0
	add2 0x7, v3                             # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	lda v2                                   # line: 19           # column: 0
	callarg1 0x8, v1                         # line: 19           # column: 0
	tryldglobalbyname 0xa, print             # line: 20           # column: 0
	sta v1                                   # line: 20           # column: 0
	lda.str test_class_in_func :             # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	ldexternalmodulevar 0x9                  # line: 20           # column: 0
	sta v3                                   # line: 20           # column: 0
	throw.undefinedifholewithname a          # line: 20           # column: 0
	lda v3                                   # line: 20           # column: 0
	callarg0 0xb                             # line: 20           # column: 0
	add2 0xd, v2                             # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	lda v1                                   # line: 20           # column: 0
	callarg1 0xe, v2                         # line: 20           # column: 0
	ldexternalmodulevar 0x2                  # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	throw.undefinedifholewithname r          # line: 25           # column: 0
	mov v4, v1                               # line: 25           # column: 0
	newobjrange 0x10, 0x1, v4                # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	tryldglobalbyname 0x12, print            # line: 26           # column: 0
	sta v2                                   # line: 26           # column: 0
	lda.str methodClass1 :                   # line: 26           # column: 0
	sta v3                                   # line: 26           # column: 0
	lda v1                                   # line: 26           # column: 0
	ldobjbyname 0x13, s                      # line: 26           # column: 0
	callthis0 0x15, v1                       # line: 26           # column: 0
	add2 0x17, v3                            # line: 26           # column: 0
	sta v1                                   # line: 26           # column: 0
	lda v2                                   # line: 26           # column: 0
	callarg1 0x18, v1                        # line: 26           # column: 0
	tryldglobalbyname 0x1a, print            # line: 27           # column: 0
	sta v1                                   # line: 27           # column: 0
	lda.str test_method_in_func :            # line: 27           # column: 0
	sta v2                                   # line: 27           # column: 0
	ldexternalmodulevar 0xb                  # line: 27           # column: 0
	sta v3                                   # line: 27           # column: 0
	throw.undefinedifholewithname k          # line: 27           # column: 0
	lda v3                                   # line: 27           # column: 0
	callarg0 0x1b                            # line: 27           # column: 0
	add2 0x1d, v2                            # line: 27           # column: 0
	sta v2                                   # line: 27           # column: 0
	lda v1                                   # line: 27           # column: 0
	callarg1 0x1e, v2                        # line: 27           # column: 0
	ldexternalmodulevar 0x7                  # line: 32           # column: 0
	sta v1                                   # line: 32           # column: 0
	throw.undefinedifholewithname h1         # line: 32           # column: 0
	mov v4, v1                               # line: 32           # column: 0
	newobjrange 0x20, 0x1, v4                # line: 32           # column: 0
	sta v1                                   # line: 32           # column: 0
	tryldglobalbyname 0x22, print            # line: 33           # column: 0
	sta v2                                   # line: 33           # column: 0
	lda.str propertyClass1 :                 # line: 33           # column: 0
	sta v3                                   # line: 33           # column: 0
	lda v1                                   # line: 33           # column: 0
	ldobjbyname 0x23, i1                     # line: 33           # column: 0
	add2 0x25, v3                            # line: 33           # column: 0
	sta v1                                   # line: 33           # column: 0
	ldexternalmodulevar 0x7                  # line: 33           # column: 0
	sta v3                                   # line: 33           # column: 0
	throw.undefinedifholewithname h1         # line: 33           # column: 0
	lda v3                                   # line: 33           # column: 0
	ldobjbyname 0x26, j1                     # line: 33           # column: 0
	add2 0x28, v1                            # line: 33           # column: 0
	sta v1                                   # line: 33           # column: 0
	lda v2                                   # line: 33           # column: 0
	callarg1 0x29, v1                        # line: 33           # column: 0
	tryldglobalbyname 0x2b, print            # line: 34           # column: 0
	sta v1                                   # line: 34           # column: 0
	lda.str test_property_in_func :          # line: 34           # column: 0
	sta v2                                   # line: 34           # column: 0
	ldexternalmodulevar 0xc                  # line: 34           # column: 0
	sta v3                                   # line: 34           # column: 0
	throw.undefinedifholewithname d1         # line: 34           # column: 0
	lda v3                                   # line: 34           # column: 0
	callarg0 0x2c                            # line: 34           # column: 0
	add2 0x2e, v2                            # line: 34           # column: 0
	sta v2                                   # line: 34           # column: 0
	lda v1                                   # line: 34           # column: 0
	callarg1 0x2f, v2                        # line: 34           # column: 0
	tryldglobalbyname 0x31, print            # line: 39           # column: 0
	sta v1                                   # line: 39           # column: 0
	lda.str function_test1 :                 # line: 39           # column: 0
	sta v2                                   # line: 39           # column: 0
	ldexternalmodulevar 0x1                  # line: 39           # column: 0
	sta v3                                   # line: 39           # column: 0
	throw.undefinedifholewithname i          # line: 39           # column: 0
	lda v3                                   # line: 39           # column: 0
	callarg0 0x32                            # line: 39           # column: 0
	add2 0x34, v2                            # line: 39           # column: 0
	sta v2                                   # line: 39           # column: 0
	lda v1                                   # line: 39           # column: 0
	callarg1 0x35, v2                        # line: 39           # column: 0
	tryldglobalbyname 0x37, print            # line: 40           # column: 0
	sta v1                                   # line: 40           # column: 0
	lda.str test_function_in_func :          # line: 40           # column: 0
	sta v2                                   # line: 40           # column: 0
	ldexternalmodulevar 0xa                  # line: 40           # column: 0
	sta v3                                   # line: 40           # column: 0
	throw.undefinedifholewithname f          # line: 40           # column: 0
	lda v3                                   # line: 40           # column: 0
	callarg0 0x38                            # line: 40           # column: 0
	add2 0x3a, v2                            # line: 40           # column: 0
	sta v2                                   # line: 40           # column: 0
	lda v1                                   # line: 40           # column: 0
	callarg1 0x3b, v2                        # line: 40           # column: 0
	tryldglobalbyname 0x3d, print            # line: 45           # column: 0
	sta v1                                   # line: 45           # column: 0
	lda.str recordObject1 :                  # line: 45           # column: 0
	sta v2                                   # line: 45           # column: 0
	ldexternalmodulevar 0x8                  # line: 45           # column: 0
	sta v3                                   # line: 45           # column: 0
	throw.undefinedifholewithname o1         # line: 45           # column: 0
	lda.str q1                               # line: 45           # column: 0
	ldobjbyvalue 0x3e, v3                    # line: 45           # column: 0
	add2 0x40, v2                            # line: 45           # column: 0
	sta v2                                   # line: 45           # column: 0
	ldexternalmodulevar 0x8                  # line: 45           # column: 0
	sta v3                                   # line: 45           # column: 0
	throw.undefinedifholewithname o1         # line: 45           # column: 0
	lda v3                                   # line: 45           # column: 0
	ldobjbyname 0x41, q1                     # line: 45           # column: 0
	add2 0x43, v2                            # line: 45           # column: 0
	sta v2                                   # line: 45           # column: 0
	lda v1                                   # line: 45           # column: 0
	callarg1 0x44, v2                        # line: 45           # column: 0
	tryldglobalbyname 0x46, print            # line: 46           # column: 0
	sta v1                                   # line: 46           # column: 0
	lda.str test_record_in_func :            # line: 46           # column: 0
	sta v2                                   # line: 46           # column: 0
	ldexternalmodulevar 0xd                  # line: 46           # column: 0
	sta v3                                   # line: 46           # column: 0
	throw.undefinedifholewithname n1         # line: 46           # column: 0
	lda v3                                   # line: 46           # column: 0
	callarg0 0x47                            # line: 46           # column: 0
	add2 0x49, v2                            # line: 46           # column: 0
	sta v2                                   # line: 46           # column: 0
	lda v1                                   # line: 46           # column: 0
	callarg1 0x4a, v2                        # line: 46           # column: 0
	tryldglobalbyname 0x4c, print            # line: 59           # column: 0
	sta v1                                   # line: 59           # column: 0
	lda.str name_space_test_func_regular_export : # line: 59           # column: 0
	sta v2                                   # line: 59           # column: 0
	ldexternalmodulevar 0x5                  # line: 59           # column: 0
	sta v3                                   # line: 59           # column: 0
	throw.undefinedifholewithname x          # line: 59           # column: 0
	lda v3                                   # line: 59           # column: 0
	callarg0 0x4d                            # line: 59           # column: 0
	add2 0x4f, v2                            # line: 59           # column: 0
	sta v2                                   # line: 59           # column: 0
	lda v1                                   # line: 59           # column: 0
	callarg1 0x50, v2                        # line: 59           # column: 0
	tryldglobalbyname 0x52, print            # line: 60           # column: 0
	sta v1                                   # line: 60           # column: 0
	lda.str name_space_test_func_regular_redefine_export : # line: 60           # column: 0
	sta v2                                   # line: 60           # column: 0
	ldexternalmodulevar 0x6                  # line: 60           # column: 0
	sta v3                                   # line: 60           # column: 0
	throw.undefinedifholewithname z          # line: 60           # column: 0
	lda v3                                   # line: 60           # column: 0
	callarg0 0x53                            # line: 60           # column: 0
	add2 0x55, v2                            # line: 60           # column: 0
	sta v2                                   # line: 60           # column: 0
	lda v1                                   # line: 60           # column: 0
	callarg1 0x56, v2                        # line: 60           # column: 0
	tryldglobalbyname 0x58, print            # line: 61           # column: 0
	sta v1                                   # line: 61           # column: 0
	lda.str name_space_test_func_indirect_export : # line: 61           # column: 0
	sta v2                                   # line: 61           # column: 0
	ldexternalmodulevar 0x3                  # line: 61           # column: 0
	sta v3                                   # line: 61           # column: 0
	throw.undefinedifholewithname w          # line: 61           # column: 0
	lda v3                                   # line: 61           # column: 0
	callarg0 0x59                            # line: 61           # column: 0
	add2 0x5b, v2                            # line: 61           # column: 0
	sta v2                                   # line: 61           # column: 0
	lda v1                                   # line: 61           # column: 0
	callarg1 0x5c, v2                        # line: 61           # column: 0
	tryldglobalbyname 0x5e, print            # line: 62           # column: 0
	sta v1                                   # line: 62           # column: 0
	lda.str name_space_test_func_indirect_redefine_export : # line: 62           # column: 0
	sta v2                                   # line: 62           # column: 0
	ldexternalmodulevar 0x4                  # line: 62           # column: 0
	sta v3                                   # line: 62           # column: 0
	throw.undefinedifholewithname a1         # line: 62           # column: 0
	lda v3                                   # line: 62           # column: 0
	callarg0 0x5f                            # line: 62           # column: 0
	add2 0x61, v2                            # line: 62           # column: 0
	sta v2                                   # line: 62           # column: 0
	lda v1                                   # line: 62           # column: 0
	callarg1 0x62, v2                        # line: 62           # column: 0
	tryldglobalbyname 0x64, print            # line: 63           # column: 0
	sta v1                                   # line: 63           # column: 0
	lda.str name_space_test_func_5 :         # line: 63           # column: 0
	sta v2                                   # line: 63           # column: 0
	lda v0                                   # line: 63           # column: 0
	ldobjbyname 0x65, b1                     # line: 63           # column: 0
	callthis0 0x67, v0                       # line: 63           # column: 0
	add2 0x69, v2                            # line: 63           # column: 0
	sta v2                                   # line: 63           # column: 0
	lda v1                                   # line: 63           # column: 0
	callarg1 0x6a, v2                        # line: 63           # column: 0
	tryldglobalbyname 0x6c, print            # line: 64           # column: 0
	sta v1                                   # line: 64           # column: 0
	lda.str name_space_test_func_6 :         # line: 64           # column: 0
	sta v2                                   # line: 64           # column: 0
	lda v0                                   # line: 64           # column: 0
	ldobjbyname 0x6d, c1                     # line: 64           # column: 0
	callthis0 0x6f, v0                       # line: 64           # column: 0
	add2 0x71, v2                            # line: 64           # column: 0
	sta v0                                   # line: 64           # column: 0
	lda v1                                   # line: 64           # column: 0
	callarg1 0x72, v0                        # line: 64           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

# ====================
# STRING
a
a1
b
b1
c
c1
class1 :
common/class_test.#*#a
common/class_test.#*@3~@2=#e
common/class_test.#~@0=#d
common/class_test.#~@1=#b
common/function_test.#*#f
common/function_test.#*#i
common/function_test.#*#j
common/function_test.#*@0*#g
common/function_test.#*@0*@1*#h
common/method_test.#*#k
common/method_test.#*@4~@3=#t
common/method_test.#~@0=#r
common/method_test.#~@1=#p
common/method_test.#~@2=#l
common/method_test.#~@2>#o
common/name_space_test1.#*#v
common/name_space_test1.#*#w
common/name_space_test1.#*#x
common/name_space_test1.#*#y
common/name_space_test3.#*#b1
common/name_space_test3.#*#c1
common/property_test.#*#d1
common/property_test.#*@3~@2=#k1
common/property_test.#*@3~@2>#instance_initializer
common/property_test.#*@3~@2>#static_initializer
common/property_test.#~@0=#h1
common/property_test.#~@0>#instance_initializer
common/property_test.#~@0>#static_initializer
common/property_test.#~@1=#e1
common/property_test.#~@1>#instance_initializer
common/property_test.#~@1>#static_initializer
common/record_test.#*#n1
d
d1
e1
f
f1
function_test1 :
g1
h1
i
i1
j1
k
l
l1
m
m1
methodClass1 :
n
n1
name_space_test_func_5 :
name_space_test_func_6 :
name_space_test_func_indirect_export :
name_space_test_func_indirect_redefine_export :
name_space_test_func_regular_export :
name_space_test_func_regular_redefine_export :
o
o1
p
print
propertyClass1 :
prototype
q
q1
r
recordObject1 :
s
s1
test_class_in_func :
test_function_in_func :
test_method_in_func :
test_property_in_func :
test_record_in_func :
u
u1
w
w1
x
z
