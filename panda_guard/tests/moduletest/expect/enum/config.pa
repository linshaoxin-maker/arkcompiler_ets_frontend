/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

main_595 

main_599 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record main {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames main_595
	u32 moduleRecordIdx main_599
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 18
.function any main.#%#a(any a0, any a1, any a2, any a3) {
	lda.str b                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldai 0x0                                 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x0, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str b                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x2, a3, v1                 # line: 18446744073709551615           # column: 0
	lda.str c                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	lda a3                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x4, b                       # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	ldai 0x1                                 # line: 18446744073709551615           # column: 0
	sta v2                                   # line: 18446744073709551615           # column: 0
	lda v2                                   # line: 18446744073709551615           # column: 0
	add2 0x6, v1                             # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x7, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str c                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x9, a3, v1                 # line: 18446744073709551615           # column: 0
	lda.str d                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	lda a3                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0xb, c                       # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v2                                   # line: 18446744073709551615           # column: 0
	add2 0xd, v1                             # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0xe, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str d                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x10, a3, v1                # line: 18446744073709551615           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 25
.function any main.func_main_0(any a0, any a1, any a2) {
	ldundefined                              # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	definefunc 0x0, main.#%#a, 0x1           # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v0                                   # line: 18446744073709551615           # column: 0
	callruntime.istrue 0x1                   # line: 18446744073709551615           # column: 0
	jnez label@11                            # line: 18446744073709551615           # column: 0
	createemptyobject                        # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	mov v2, v0                               # line: 18446744073709551615           # column: 0
	jmp label@12                             # line: 18446744073709551615           # column: 0
	label@11: mov v2, v0                     # line: 18446744073709551615           # column: 0
	label@12: lda v1                         # line: 18446744073709551615           # column: 0
	callarg1 0x3, v2                         # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x5, print             # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda.str 1 :                              # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda v0                                   # line: 19           # column: 0
	ldobjbyname 0x6, b                       # line: 19           # column: 0
	add2 0x8, v2                             # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda v1                                   # line: 19           # column: 0
	callarg1 0x9, v2                         # line: 19           # column: 0
	tryldglobalbyname 0xb, print             # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	lda.str 2 :                              # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	lda.str c                                # line: 20           # column: 0
	ldobjbyvalue 0xc, v0                     # line: 20           # column: 0
	add2 0xe, v2                             # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	lda v1                                   # line: 20           # column: 0
	callarg1 0xf, v2                         # line: 20           # column: 0
	lda v0                                   # line: 21           # column: 0
	ldobjbyname 0x11, d                      # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	tryldglobalbyname 0x13, print            # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda.str 3 :                              # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	lda v1                                   # line: 22           # column: 0
	ldobjbyvalue 0x14, v0                    # line: 22           # column: 0
	add2 0x16, v3                            # line: 22           # column: 0
	sta v0                                   # line: 22           # column: 0
	lda v2                                   # line: 22           # column: 0
	callarg1 0x17, v0                        # line: 22           # column: 0
	ldundefined                              # line: 22           # column: 0
	returnundefined                          # line: 22           # column: 0
}

# ====================
# STRING
1 :
2 :
3 :
b
c
d
main.#%#a
print
