# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_frontend/ets_frontend_config.gni")
import("//arkcompiler/ets_frontend/panda_guard/panda_guard_config.gni")
import("//arkcompiler/runtime_core/ark_config.gni")
import("$ark_root/tests/test_helper.gni")

ets_frontend_output_path = "arkcompiler/ets_frontend"

panda_guard_test_configs = [
  "$ark_root:ark_config",
  "$ets_frontend_root/panda_guard:panda_guard_public_config",
  "$ark_root/assembler:arkassembler_public_config",
  "$ark_root/libpandabase:arkbase_public_config",
  "$ark_root/libpandafile:arkfile_public_config",
  "$ark_root/compiler:arkcompiler_public_config",
  sdk_libc_secshared_config,
]

panda_guard_test_deps =
    [ "$ets_frontend_root/panda_guard:panda_guard_frontend_static" ]

panda_guard_include_dirs = [
  "$ets_frontend_root/panda_guard",
  "$ets_frontend_root/panda_guard/tests",
  "$ark_root/abc2program",
  "$ark_root/assembler",
]

host_unittest_action("PandaGuardModuleTest") {
  module_out_path = ets_frontend_output_path
  sources = [ "moduletest/hello_world_test.cpp" ]
  include_dirs = panda_guard_include_dirs
  configs = panda_guard_test_configs
  deps = panda_guard_test_deps
  module_test_out_dir = rebase_path(target_out_dir)
  defines = [
    "PANDA_GUARD_PROJECT_OUT_DIR=\"${module_test_out_dir}/projects/\"",
    "PANDA_GUARD_EXPECT_DIR=\"${module_test_out_dir}/expect/\"",
  ]

  deps += []
}

host_unittest_action("PandaGuardUnitTest") {
  module_out_path = ets_frontend_output_path
  sources = [ "unittest/guard_driver_test.cpp" ]
  include_dirs = panda_guard_include_dirs
  configs = panda_guard_test_configs
  deps = panda_guard_test_deps
  unit_test_dir = rebase_path(target_out_dir)
  defines = [ "PANDA_GUARD_UNIT_TEST_DIR=\"${unit_test_dir}/\"" ]

  deps += []
}

group("host_unittest") {
  testonly = true
  deps = [
    ":PandaGuardModuleTestAction",
    ":PandaGuardUnitTestAction",
  ]
}
