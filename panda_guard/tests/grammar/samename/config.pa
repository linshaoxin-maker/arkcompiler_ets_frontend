/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

class_class_2164 { 4 [ tag_value:5, string:"Config", tag_value:5, string:"App", ]}

class_class_2178 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

class_class_2206 { 2 [ tag_value:2, i32:0, ]}

class_class_2215 { 8 [ tag_value:5, string:"configure", tag_value:6, method:class_class.#~@1>#configure, tag_value:9, method_affiliate:1, tag_value:2, i32:1, ]}

enum_class_2237 { 2 [ tag_value:5, string:"User", ]}

enum_class_2246 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

enum_class_2274 { 8 [ tag_value:5, string:"setStatus", tag_value:6, method:enum_class.#~@0>#setStatus, tag_value:9, method_affiliate:1, tag_value:2, i32:1, ]}

namespace_2296 

namespace_2300 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

namespace_2328 { 8 [ tag_value:5, string:"xFnexp", tag_value:255, null_value:0, tag_value:5, string:"fnexp", tag_value:255, null_value:0, ]}

namespace_2346 { 4 [ tag_value:5, string:"config", tag_value:255, null_value:0, ]}

type_para_2357 { 2 [ tag_value:5, string:"UserManager", ]}

type_para_2366 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

type_para_2394 { 8 [ tag_value:5, string:"addUser", tag_value:6, method:type_para.#~@0>#addUser, tag_value:9, method_affiliate:1, tag_value:2, i32:1, ]}

usebeforedeclaration_2416 { 4 [ tag_value:5, string:"UseClass", tag_value:5, string:"TestClass", ]}

usebeforedeclaration_2430 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

usebeforedeclaration_2458 { 8 [ tag_value:5, string:"UseFunction", tag_value:6, method:usebeforedeclaration.#~@0>#UseFunction, tag_value:9, method_affiliate:1, tag_value:2, i32:1, ]}

usebeforedeclaration_2480 { 2 [ tag_value:2, i32:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record class_class {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames class_class_2164
	u32 moduleRecordIdx class_class_2178
}
.record.source_file 

.record enum_class {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames enum_class_2237
	u32 moduleRecordIdx enum_class_2246
}
.record.source_file 

.record namespace {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames namespace_2296
	u32 moduleRecordIdx namespace_2300
}
.record.source_file 

.record type_para {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames type_para_2357
	u32 moduleRecordIdx type_para_2366
}
.record.source_file 

.record usebeforedeclaration {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames usebeforedeclaration_2416
	u32 moduleRecordIdx usebeforedeclaration_2430
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any class_class.#~@0=#Config(any a0, any a1, any a2, any a3) {
	lda a3                                   # line: 19           # column: 0
	stobjbyname 0x0, param, a2               # line: 19           # column: 0
	lda a2                                   # line: 20           # column: 0
	return                                   # line: 20           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any class_class.#~@1=#App(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 9
.function any class_class.#~@1>#configure(any a0, any a1, any a2, any a3) {
	tryldglobalbyname 0x0, console           # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	ldobjbyname 0x1, a                       # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	lda.str App configured with param:       # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda a3                                   # line: 25           # column: 0
	ldobjbyname 0x3, param                   # line: 25           # column: 0
	add2 0x5, v2                             # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda.str                                  # line: 25           # column: 0
	add2 0x6, v2                             # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callthis1 0x7, v0, v2                    # line: 25           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 26           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 6
.function any class_class.func_main_0(any a0, any a1, any a2) {
	ldhole                                   # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	defineclasswithbuffer 0x0, class_class.#~@0=#Config, class_class_2206, 0x1, v0 # line: 15           # column: 0
	ldobjbyname 0x1, prototype               # line: 15           # column: 0
	ldhole                                   # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	defineclasswithbuffer 0x3, class_class.#~@1=#App, class_class_2215, 0x0, v0 # line: 23           # column: 0
	ldobjbyname 0x4, prototype               # line: 23           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 8
.function any enum_class.#%#Status(any a0, any a1, any a2, any a3) {
	lda.str ACTIVE                           # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldai 0x0                                 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x0, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str ACTIVE                           # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x2, a3, v1                 # line: 18446744073709551615           # column: 0
	lda.str INACTIVE                         # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldai 0x1                                 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x4, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str INACTIVE                         # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x6, a3, v1                 # line: 18446744073709551615           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any enum_class.#~@0=#User(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 7
.function any enum_class.#~@0>#setStatus(any a0, any a1, any a2, any a3) {
	tryldglobalbyname 0x0, console           # line: 22           # column: 0
	sta v0                                   # line: 22           # column: 0
	ldobjbyname 0x1, a                       # line: 22           # column: 0
	sta v1                                   # line: 22           # column: 0
	lda.str User status set to               # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda a3                                   # line: 22           # column: 0
	add2 0x3, v2                             # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda.str                                  # line: 22           # column: 0
	add2 0x4, v2                             # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda v1                                   # line: 22           # column: 0
	callthis1 0x5, v0, v2                    # line: 22           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 23           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 8
.function any enum_class.func_main_0(any a0, any a1, any a2) {
	ldundefined                              # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	definefunc 0x0, enum_class.#%#Status, 0x1 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v0                                   # line: 18446744073709551615           # column: 0
	callruntime.istrue 0x1                   # line: 18446744073709551615           # column: 0
	jnez label@9                             # line: 18446744073709551615           # column: 0
	createemptyobject                        # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	label@9: lda v1                          # line: 18446744073709551615           # column: 0
	callarg1 0x3, v0                         # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	defineclasswithbuffer 0x5, enum_class.#~@0=#User, enum_class_2274, 0x0, v0 # line: 20           # column: 0
	ldobjbyname 0x6, prototype               # line: 20           # column: 0
	ldundefined                              # line: 20           # column: 0
	returnundefined                          # line: 20           # column: 0
}

.function_kind FunctionKind::ASYNC_FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 41
.function any namespace.#*#fn(any a0, any a1, any a2) {
	nop                                      # line: 18446744073709551615           # column: 0
	asyncfunctionenter                       # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	label@3: mov v1, v0                      # line: 18446744073709551615           # column: 0
	createemptyarray 0x0                     # line: 23           # column: 0
	sta v4                                   # line: 23           # column: 0
	createobjectwithbuffer 0x1, namespace_2328 # line: 23           # column: 0
	sta v5                                   # line: 23           # column: 0
	ldlexvar 0x0, 0x0                        # line: 23           # column: 0
	sta v6                                   # line: 23           # column: 0
	throw.undefinedifholewithname xFnexp     # line: 23           # column: 0
	lda v6                                   # line: 23           # column: 0
	definepropertybyname 0x2, xFnexp, v5     # line: 23           # column: 0
	ldlexvar 0x0, 0x1                        # line: 23           # column: 0
	sta v6                                   # line: 23           # column: 0
	throw.undefinedifholewithname fnexp      # line: 23           # column: 0
	lda v6                                   # line: 23           # column: 0
	definepropertybyname 0x4, fnexp, v5      # line: 23           # column: 0
	lda v5                                   # line: 23           # column: 0
	stownbyindex 0x6, v4, 0x0                # line: 23           # column: 0
	label@20: jmp label@25                   # line: 23           # column: 0
	label@21: sta v3                         # line: 23           # column: 0
	mov v1, v0                               # line: 23           # column: 0
	lda v3                                   # line: 23           # column: 0
	throw                                    # line: 23           # column: 0
	label@25: ldai 0x2                       # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	ldai 0x1                                 # line: 23           # column: 0
	sta v5                                   # line: 23           # column: 0
	lda v4                                   # line: 23           # column: 0
	getasynciterator 0x8                     # line: 23           # column: 0
	sta v4                                   # line: 23           # column: 0
	ldobjbyname 0xa, b                       # line: 23           # column: 0
	sta v6                                   # line: 23           # column: 0
	ldfalse                                  # line: 23           # column: 0
	sta v7                                   # line: 23           # column: 0
	label@36: lda v6                         # line: 23           # column: 0
	callthis0 0xc, v4                        # line: 23           # column: 0
	asyncfunctionawaituncaught v0            # line: 23           # column: 0
	suspendgenerator v0                      # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	resumegenerator                          # line: 23           # column: 0
	sta v8                                   # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	getresumemode                            # line: 23           # column: 0
	sta v9                                   # line: 23           # column: 0
	lda v5                                   # line: 23           # column: 0
	eq 0xe, v9                               # line: 23           # column: 0
	jeqz label@51                            # line: 23           # column: 0
	lda v8                                   # line: 23           # column: 0
	throw                                    # line: 23           # column: 0
	label@51: throw.ifnotobject v8           # line: 23           # column: 0
	lda v8                                   # line: 23           # column: 0
	ldobjbyname 0xf, c                       # line: 23           # column: 0
	callruntime.istrue 0x11                  # line: 23           # column: 0
	jnez label@134                           # line: 23           # column: 0
	lda v8                                   # line: 23           # column: 0
	ldobjbyname 0x13, d                      # line: 23           # column: 0
	sta v8                                   # line: 23           # column: 0
	label@59: lda v8                         # line: 23           # column: 0
	ldobjbyname 0x15, xFnexp                 # line: 23           # column: 0
	sta v10                                  # line: 23           # column: 0
	ldundefined                              # line: 23           # column: 0
	stricteq 0x17, v10                       # line: 23           # column: 0
	jeqz label@68                            # line: 23           # column: 0
	ldlexvar 0x0, 0x0                        # line: 23           # column: 0
	sta v10                                  # line: 23           # column: 0
	throw.undefinedifholewithname xFnexp     # line: 23           # column: 0
	label@68: ldlexvar 0x0, 0x0              # line: 23           # column: 0
	throw.undefinedifholewithname xFnexp     # line: 23           # column: 0
	lda v10                                  # line: 23           # column: 0
	stlexvar 0x0, 0x0                        # line: 23           # column: 0
	lda v8                                   # line: 23           # column: 0
	ldobjbyname 0x18, fnexp                  # line: 23           # column: 0
	sta v8                                   # line: 23           # column: 0
	ldundefined                              # line: 23           # column: 0
	stricteq 0x1a, v8                        # line: 23           # column: 0
	jeqz label@81                            # line: 23           # column: 0
	ldlexvar 0x0, 0x0                        # line: 23           # column: 0
	sta v8                                   # line: 23           # column: 0
	throw.undefinedifholewithname xFnexp     # line: 23           # column: 0
	label@81: ldlexvar 0x0, 0x1              # line: 23           # column: 0
	throw.undefinedifholewithname fnexp      # line: 23           # column: 0
	lda v8                                   # line: 23           # column: 0
	stlexvar 0x0, 0x1                        # line: 23           # column: 0
	tryldglobalbyname 0x1b, print            # line: 23           # column: 0
	sta v8                                   # line: 23           # column: 0
	ldlexvar 0x0, 0x0                        # line: 23           # column: 0
	sta v10                                  # line: 23           # column: 0
	throw.undefinedifholewithname xFnexp     # line: 23           # column: 0
	lda v8                                   # line: 23           # column: 0
	callargs2 0x1c, v10, v5                  # line: 23           # column: 0
	tryldglobalbyname 0x1e, print            # line: 23           # column: 0
	sta v8                                   # line: 23           # column: 0
	ldlexvar 0x0, 0x1                        # line: 23           # column: 0
	sta v10                                  # line: 23           # column: 0
	throw.undefinedifholewithname fnexp      # line: 24           # column: 0
	lda v8                                   # line: 24           # column: 0
	callargs2 0x1f, v10, v3                  # line: 24           # column: 0
	label@99: jmp label@36                   # line: 24           # column: 0
	label@100: sta v9                        # line: 24           # column: 0
	lda v7                                   # line: 25           # column: 0
	callruntime.istrue 0x21                  # line: 25           # column: 0
	jnez label@132                           # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	ldhole                                   # line: 25           # column: 0
	label@107: lda v4                        # line: 23           # column: 0
	ldobjbyname 0x23, e                      # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	ldundefined                              # line: 23           # column: 0
	eq 0x25, v3                              # line: 23           # column: 0
	jnez label@132                           # line: 23           # column: 0
	lda v3                                   # line: 23           # column: 0
	callthis0 0x26, v4                       # line: 23           # column: 0
	asyncfunctionawaituncaught v0            # line: 23           # column: 0
	suspendgenerator v0                      # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	resumegenerator                          # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	getresumemode                            # line: 23           # column: 0
	sta v4                                   # line: 23           # column: 0
	lda v5                                   # line: 23           # column: 0
	eq 0x28, v4                              # line: 23           # column: 0
	jeqz label@128                           # line: 23           # column: 0
	lda v3                                   # line: 23           # column: 0
	throw                                    # line: 23           # column: 0
	label@128: jmp label@129                 # line: 23           # column: 0
	label@129: mov v1, v0                    # line: 23           # column: 0
	lda v9                                   # line: 23           # column: 0
	throw                                    # line: 23           # column: 0
	label@132: lda v9                        # line: 23           # column: 0
	throw                                    # line: 23           # column: 0
	label@134: ldundefined                   # line: 23           # column: 0
	asyncfunctionresolve v0                  # line: 23           # column: 0
	return                                   # line: 23           # column: 0
	label@137: sta v2                        # line: 23           # column: 0
	lda v2                                   # line: 23           # column: 0
	asyncfunctionreject v1                   # line: 23           # column: 0
	return                                   # line: 23           # column: 0
.catchall :
	try_begin_label : label@107
	try_end_label : label@128
	catch_begin_label : label@129
	catch_end_label : label@129
.catchall :
	try_begin_label : label@3
	try_end_label : label@20
	catch_begin_label : label@21
	catch_end_label : label@21
.catchall :
	try_begin_label : label@59
	try_end_label : label@99
	catch_begin_label : label@100
	catch_end_label : label@100
.catchall :
	try_begin_label : label@3
	try_end_label : label@137
	catch_begin_label : label@137
	catch_end_label : label@137
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 4
.function any namespace.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x2                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, namespace.#*#fn, 0x0     # line: 18446744073709551615           # column: 0
	lda.str 123                              # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	createobjectwithbuffer 0x1, namespace_2346 # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	lda v0                                   # line: 18           # column: 0
	definepropertybyname 0x2, config, v1     # line: 18           # column: 0
	ldai 0x1                                 # line: 18           # column: 0
	stlexvar 0x0, 0x0                        # line: 20           # column: 0
	ldai 0x2                                 # line: 20           # column: 0
	stlexvar 0x0, 0x1                        # line: 20           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any type_para.#~@0=#UserManager(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 7
.function any type_para.#~@0>#addUser(any a0, any a1, any a2, any a3) {
	tryldglobalbyname 0x0, console           # line: 19           # column: 0
	sta v0                                   # line: 19           # column: 0
	ldobjbyname 0x1, a                       # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	lda.str User with ID:                    # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda a3                                   # line: 19           # column: 0
	add2 0x3, v2                             # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda.str  added.                          # line: 19           # column: 0
	add2 0x4, v2                             # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda v1                                   # line: 19           # column: 0
	callthis1 0x5, v0, v2                    # line: 19           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 20           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any type_para.func_main_0(any a0, any a1, any a2) {
	ldhole                                   # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	defineclasswithbuffer 0x0, type_para.#~@0=#UserManager, type_para_2394, 0x0, v0 # line: 17           # column: 0
	ldobjbyname 0x1, prototype               # line: 17           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any usebeforedeclaration.#~@0=#UseClass(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any usebeforedeclaration.#~@0>#UseFunction(any a0, any a1, any a2, any a3) {
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 17           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any usebeforedeclaration.#~@1=#TestClass(any a0, any a1, any a2, any a3) {
	lda a3                                   # line: 24           # column: 0
	stobjbyname 0x0, param, a2               # line: 24           # column: 0
	lda a2                                   # line: 25           # column: 0
	return                                   # line: 25           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 6
.function any usebeforedeclaration.func_main_0(any a0, any a1, any a2) {
	ldhole                                   # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	defineclasswithbuffer 0x0, usebeforedeclaration.#~@0=#UseClass, usebeforedeclaration_2458, 0x0, v0 # line: 15           # column: 0
	ldobjbyname 0x1, prototype               # line: 15           # column: 0
	ldhole                                   # line: 20           # column: 0
	sta v0                                   # line: 20           # column: 0
	defineclasswithbuffer 0x3, usebeforedeclaration.#~@1=#TestClass, usebeforedeclaration_2480, 0x1, v0 # line: 20           # column: 0
	ldobjbyname 0x4, prototype               # line: 20           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

# ====================
# STRING

 added.
123
ACTIVE
App configured with param: 
INACTIVE
User status set to 
User with ID: 
a
b
c
class_class.#~@0=#Config
class_class.#~@1=#App
config
console
d
e
enum_class.#%#Status
enum_class.#~@0=#User
fnexp
namespace.#*#fn
param
print
prototype
type_para.#~@0=#UserManager
usebeforedeclaration.#~@0=#UseClass
usebeforedeclaration.#~@1=#TestClass
xFnexp
