/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

generics_interface_1235 

generics_interface_1239 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

generics_lenth_1267 

generics_lenth_1271 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

generics_lenth_1299 { 12 [ tag_value:2, i32:0, tag_value:2, i32:1, tag_value:2, i32:2, tag_value:2, i32:3, tag_value:2, i32:4, tag_value:2, i32:5, ]}

generics_types_1333 

generics_types_1337 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record generics_interface {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames generics_interface_1235
	u32 moduleRecordIdx generics_interface_1239
}
.record.source_file 

.record generics_lenth {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames generics_lenth_1267
	u32 moduleRecordIdx generics_lenth_1271
}
.record.source_file 

.record generics_types {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames generics_types_1333
	u32 moduleRecordIdx generics_types_1337
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any generics_interface.#*#a(any a0, any a1, any a2, any a3) {
	lda a3                                   # line: 21           # column: 0
	return                                   # line: 21           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 7
.function any generics_interface.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, generics_interface.#*#a, 0x1 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x1, print             # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	ldai 0x315                               # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda v0                                   # line: 25           # column: 0
	callarg1 0x2, v2                         # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda v2                                   # line: 25           # column: 0
	stricteq 0x4, v0                         # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda.str success                          # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callargs2 0x5, v0, v2                    # line: 25           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 5
.function any generics_lenth.#*#b(any a0, any a1, any a2, any a3) {
	tryldglobalbyname 0x0, print             # line: 26           # column: 0
	sta v0                                   # line: 26           # column: 0
	lda a3                                   # line: 26           # column: 0
	ldobjbyname 0x1, length                  # line: 26           # column: 0
	sta v1                                   # line: 26           # column: 0
	lda v0                                   # line: 26           # column: 0
	callarg1 0x3, v1                         # line: 26           # column: 0
	lda a3                                   # line: 28           # column: 0
	return                                   # line: 28           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any generics_lenth.#*#c(any a0, any a1, any a2, any a3) {
	lda a3                                   # line: 19           # column: 0
	return                                   # line: 19           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 29
.function any generics_lenth.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, generics_lenth.#*#c, 0x1 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	definefunc 0x1, generics_lenth.#*#b, 0x1 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	createarraywithbuffer 0x2, generics_lenth_1299 # line: 15           # column: 0
	sta v2                                   # line: 15           # column: 0
	tryldglobalbyname 0x3, print             # line: 21           # column: 0
	sta v3                                   # line: 21           # column: 0
	lda v0                                   # line: 21           # column: 0
	callarg1 0x4, v2                         # line: 21           # column: 0
	ldobjbyname 0x6, length                  # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	ldai 0x6                                 # line: 21           # column: 0
	sta v5                                   # line: 21           # column: 0
	lda v5                                   # line: 21           # column: 0
	stricteq 0x8, v4                         # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	lda.str success                          # line: 21           # column: 0
	sta v6                                   # line: 21           # column: 0
	lda v3                                   # line: 21           # column: 0
	callargs2 0x9, v4, v6                    # line: 21           # column: 0
	tryldglobalbyname 0xb, print             # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	callarg1 0xc, v2                         # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	ldobjbyname 0xe, indexOf                 # line: 23           # column: 0
	sta v4                                   # line: 23           # column: 0
	ldai 0x1                                 # line: 23           # column: 0
	sta v6                                   # line: 23           # column: 0
	lda v4                                   # line: 23           # column: 0
	callthis1 0x10, v0, v6                   # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	lda v6                                   # line: 23           # column: 0
	stricteq 0x12, v0                        # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	lda.str success                          # line: 23           # column: 0
	sta v4                                   # line: 23           # column: 0
	lda v3                                   # line: 23           # column: 0
	callargs2 0x13, v0, v4                   # line: 23           # column: 0
	tryldglobalbyname 0x15, print            # line: 30           # column: 0
	sta v0                                   # line: 30           # column: 0
	lda v1                                   # line: 30           # column: 0
	callarg1 0x16, v2                        # line: 30           # column: 0
	ldobjbyname 0x18, length                 # line: 30           # column: 0
	sta v1                                   # line: 30           # column: 0
	lda v5                                   # line: 30           # column: 0
	stricteq 0x1a, v1                        # line: 30           # column: 0
	sta v1                                   # line: 30           # column: 0
	lda.str success                          # line: 30           # column: 0
	sta v2                                   # line: 30           # column: 0
	lda v0                                   # line: 30           # column: 0
	callargs2 0x1b, v1, v2                   # line: 30           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any generics_types.#*#a(any a0, any a1, any a2, any a3) {
	lda a3                                   # line: 17           # column: 0
	return                                   # line: 17           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 13
.function any generics_types.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, generics_types.#*#a, 0x1 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x1, print             # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	ldai 0x3                                 # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda v0                                   # line: 21           # column: 0
	callarg1 0x2, v2                         # line: 21           # column: 0
	sta v3                                   # line: 21           # column: 0
	lda v2                                   # line: 21           # column: 0
	stricteq 0x4, v3                         # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda.str success                          # line: 21           # column: 0
	sta v3                                   # line: 21           # column: 0
	lda v1                                   # line: 21           # column: 0
	callargs2 0x5, v2, v3                    # line: 21           # column: 0
	tryldglobalbyname 0x7, print             # line: 23           # column: 0
	sta v1                                   # line: 23           # column: 0
	lda.str test                             # line: 23           # column: 0
	sta v2                                   # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	callarg1 0x8, v2                         # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	lda.str test                             # line: 23           # column: 0
	stricteq 0xa, v0                         # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	lda.str success                          # line: 23           # column: 0
	sta v2                                   # line: 23           # column: 0
	lda v1                                   # line: 23           # column: 0
	callargs2 0xb, v0, v2                    # line: 23           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

# ====================
# STRING
generics_interface.#*#a
generics_lenth.#*#b
generics_lenth.#*#c
generics_types.#*#a
test
indexOf
length
print
success
