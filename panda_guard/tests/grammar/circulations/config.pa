/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

for_in_692 

for_in_696 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

for_in_724 { 12 [ tag_value:2, i32:0, tag_value:2, i32:1, tag_value:2, i32:2, tag_value:2, i32:3, tag_value:2, i32:4, tag_value:2, i32:5, ]}

for_of_758 

for_of_762 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

for_of_790 { 12 [ tag_value:2, i32:0, tag_value:2, i32:1, tag_value:2, i32:2, tag_value:2, i32:3, tag_value:2, i32:4, tag_value:2, i32:5, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record for_in {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames for_in_692
	u32 moduleRecordIdx for_in_696
}
.record.source_file 

.record for_of {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames for_of_758
	u32 moduleRecordIdx for_of_762
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 12
.function any for_in.func_main_0(any a0, any a1, any a2) {
	nop                                      # line: 15           # column: 0
	createarraywithbuffer 0x0, for_in_724    # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	label@3: lda v0                          # line: 17           # column: 0
	getpropiterator                          # line: 17           # column: 0
	sta v2                                   # line: 17           # column: 0
	label@6: jmp label@10                    # line: 17           # column: 0
	label@7: sta v1                          # line: 15           # column: 0
	lda v1                                   # line: 15           # column: 0
	throw                                    # line: 15           # column: 0
	label@10: getnextpropname v2             # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	ldundefined                              # line: 15           # column: 0
	eq 0x1, v1                               # line: 15           # column: 0
	jnez label@29                            # line: 17           # column: 0
	tryldglobalbyname 0x2, print             # line: 17           # column: 0
	sta v3                                   # line: 17           # column: 0
	lda v1                                   # line: 18           # column: 0
	ldobjbyvalue 0x3, v0                     # line: 18           # column: 0
	sta v4                                   # line: 18           # column: 0
	ldobjbyname 0x5, toString                # line: 18           # column: 0
	callthis0 0x7, v4                        # line: 18           # column: 0
	stricteq 0x9, v1                         # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	lda.str success                          # line: 18           # column: 0
	sta v4                                   # line: 18           # column: 0
	lda v3                                   # line: 18           # column: 0
	callargs2 0xa, v1, v4                    # line: 18           # column: 0
	jmp label@10                             # line: 18           # column: 0
	label@29: ldundefined                    # line: 18           # column: 0
	returnundefined                          # line: 18           # column: 0
.catchall :
	try_begin_label : label@3
	try_end_label : label@6
	catch_begin_label : label@7
	catch_end_label : label@7
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 26
.function any for_of.func_main_0(any a0, any a1, any a2) {
	nop                                      # line: 15           # column: 0
	createarraywithbuffer 0x0, for_of_790    # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	label@3: jmp label@7                     # line: 15           # column: 0
	label@4: sta v1                          # line: 15           # column: 0
	lda v1                                   # line: 15           # column: 0
	throw                                    # line: 15           # column: 0
	label@7: lda v0                          # line: 17           # column: 0
	getiterator 0x1                          # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	ldobjbyname 0x3, next                    # line: 15           # column: 0
	sta v2                                   # line: 15           # column: 0
	ldfalse                                  # line: 17           # column: 0
	sta v3                                   # line: 17           # column: 0
	label@14: lda v2                         # line: 17           # column: 0
	callthis0 0x5, v1                        # line: 17           # column: 0
	sta v4                                   # line: 17           # column: 0
	throw.ifnotobject v4                     # line: 17           # column: 0
	ldobjbyname 0x7, done                    # line: 17           # column: 0
	callruntime.istrue 0x9                   # line: 17           # column: 0
	jnez label@55                            # line: 17           # column: 0
	lda v4                                   # line: 17           # column: 0
	ldobjbyname 0xb, value                   # line: 17           # column: 0
	sta v4                                   # line: 17           # column: 0
	label@24: tryldglobalbyname 0xd, print   # line: 17           # column: 0
	sta v6                                   # line: 17           # column: 0
	lda v4                                   # line: 18           # column: 0
	ldobjbyvalue 0xe, v0                     # line: 18           # column: 0
	stricteq 0x10, v4                        # line: 18           # column: 0
	sta v4                                   # line: 18           # column: 0
	lda.str success                          # line: 18           # column: 0
	sta v7                                   # line: 18           # column: 0
	lda v6                                   # line: 18           # column: 0
	callargs2 0x11, v4, v7                   # line: 18           # column: 0
	label@34: jmp label@14                   # line: 18           # column: 0
	label@35: sta v5                         # line: 18           # column: 0
	lda v3                                   # line: 18           # column: 0
	callruntime.istrue 0x13                  # line: 18           # column: 0
	jnez label@53                            # line: 18           # column: 0
	ldtrue                                   # line: 18           # column: 0
	ldundefined                              # line: 17           # column: 0
	ldhole                                   # line: 17           # column: 0
	label@42: lda v1                         # line: 17           # column: 0
	ldobjbyname 0x15, return                 # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	ldundefined                              # line: 17           # column: 0
	eq 0x17, v0                              # line: 17           # column: 0
	jnez label@53                            # line: 17           # column: 0
	lda v0                                   # line: 17           # column: 0
	callthis0 0x18, v1                       # line: 17           # column: 0
	label@50: jmp label@51                   # line: 17           # column: 0
	label@51: lda v5                         # line: 17           # column: 0
	throw                                    # line: 17           # column: 0
	label@53: lda v5                         # line: 17           # column: 0
	throw                                    # line: 17           # column: 0
	label@55: ldundefined                    # line: 17           # column: 0
	returnundefined                          # line: 17           # column: 0
.catchall :
	try_begin_label : label@42
	try_end_label : label@50
	catch_begin_label : label@51
	catch_end_label : label@51
.catchall :
	try_begin_label : label@3
	try_end_label : label@3
	catch_begin_label : label@4
	catch_end_label : label@4
.catchall :
	try_begin_label : label@24
	try_end_label : label@34
	catch_begin_label : label@35
	catch_end_label : label@35
}

# ====================
# STRING
done
next
print
return
success
toString
value
