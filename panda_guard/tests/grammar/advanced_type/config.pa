/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

discriminated_unions_1970 

discriminated_unions_1974 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

discriminated_unions_2002 { 8 [ tag_value:5, string:"d", tag_value:5, string:"square", tag_value:5, string:"e", tag_value:2, i32:3, ]}

intersection_types_2026 { 4 [ tag_value:5, string:"Person", tag_value:5, string:"ConsoleLogger", ]}

intersection_types_2040 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

intersection_types_2068 { 2 [ tag_value:2, i32:0, ]}

intersection_types_2077 { 8 [ tag_value:5, string:"h", tag_value:6, method:intersection_types.#~@1>#h, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}

predefined_types_2099 

predefined_types_2103 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

predefined_types_2131 { 8 [ tag_value:5, string:"o", tag_value:2, i32:1, tag_value:5, string:"p", tag_value:255, null_value:0, ]}

predefined_types_2152 { 2 [ tag_value:2, i32:0, ]}

union_types_2161 

union_types_2165 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record discriminated_unions {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames discriminated_unions_1970
	u32 moduleRecordIdx discriminated_unions_1974
}
.record.source_file 

.record intersection_types {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames intersection_types_2026
	u32 moduleRecordIdx intersection_types_2040
}
.record.source_file 

.record predefined_types {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames predefined_types_2099
	u32 moduleRecordIdx predefined_types_2103
}
.record.source_file 

.record union_types {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames union_types_2161
	u32 moduleRecordIdx union_types_2165
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 24
.function any discriminated_unions.#*#c(any a0, any a1, any a2, any a3) {
	ldundefined                              # line: 34           # column: 0
	sta v0                                   # line: 34           # column: 0
	lda a3                                   # line: 35           # column: 0
	ldobjbyname 0x0, d                       # line: 35           # column: 0
	sta v1                                   # line: 35           # column: 0
	lda.str square                           # line: 36           # column: 0
	strictnoteq 0x2, v1                      # line: 36           # column: 0
	jeqz label@15                            # line: 36           # column: 0
	lda.str rectangle                        # line: 39           # column: 0
	strictnoteq 0x3, v1                      # line: 39           # column: 0
	jeqz label@23                            # line: 39           # column: 0
	lda.str circle                           # line: 42           # column: 0
	strictnoteq 0x4, v1                      # line: 42           # column: 0
	jeqz label@31                            # line: 42           # column: 0
	jmp label@42                             # line: 42           # column: 0
	label@15: lda a3                         # line: 37           # column: 0
	ldobjbyname 0x5, e                       # line: 37           # column: 0
	sta v0                                   # line: 37           # column: 0
	lda a3                                   # line: 37           # column: 0
	ldobjbyname 0x7, e                       # line: 37           # column: 0
	mul2 0x9, v0                             # line: 37           # column: 0
	sta v0                                   # line: 37           # column: 0
	jmp label@42                             # line: 37           # column: 0
	label@23: lda a3                         # line: 40           # column: 0
	ldobjbyname 0xa, r                       # line: 40           # column: 0
	sta v0                                   # line: 40           # column: 0
	lda a3                                   # line: 40           # column: 0
	ldobjbyname 0xc, s                       # line: 40           # column: 0
	mul2 0xe, v0                             # line: 40           # column: 0
	sta v0                                   # line: 40           # column: 0
	jmp label@42                             # line: 40           # column: 0
	label@31: tryldglobalbyname 0xf, Math    # line: 40           # column: 0
	ldobjbyname 0x10, t                      # line: 43           # column: 0
	sta v0                                   # line: 43           # column: 0
	lda a3                                   # line: 43           # column: 0
	ldobjbyname 0x12, u                      # line: 43           # column: 0
	mul2 0x14, v0                            # line: 43           # column: 0
	sta v0                                   # line: 43           # column: 0
	lda a3                                   # line: 43           # column: 0
	ldobjbyname 0x15, u                      # line: 43           # column: 0
	mul2 0x17, v0                            # line: 43           # column: 0
	sta v0                                   # line: 43           # column: 0
	label@42: lda v0                         # line: 43           # column: 0
	return                                   # line: 43           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 8
.function any discriminated_unions.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, discriminated_unions.#*#c, 0x1 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	createobjectwithbuffer 0x1, discriminated_unions_2002 # line: 49           # column: 0
	sta v1                                   # line: 49           # column: 0
	tryldglobalbyname 0x2, print             # line: 52           # column: 0
	sta v2                                   # line: 52           # column: 0
	lda v0                                   # line: 52           # column: 0
	callarg1 0x3, v1                         # line: 52           # column: 0
	sta v0                                   # line: 52           # column: 0
	ldai 0x9                                 # line: 52           # column: 0
	stricteq 0x5, v0                         # line: 52           # column: 0
	sta v0                                   # line: 52           # column: 0
	lda.str success                          # line: 52           # column: 0
	sta v1                                   # line: 52           # column: 0
	lda v2                                   # line: 52           # column: 0
	callargs2 0x6, v0, v1                    # line: 52           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 18
.function any intersection_types.#*#f(any a0, any a1, any a2, any a3, any a4) {
	nop                                      # line: 16           # column: 0
	createemptyobject                        # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	label@3: lda a3                          # line: 17           # column: 0
	getpropiterator                          # line: 17           # column: 0
	sta v2                                   # line: 17           # column: 0
	label@6: jmp label@10                    # line: 17           # column: 0
	label@7: sta v1                          # line: 16           # column: 0
	lda v1                                   # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@10: getnextpropname v2             # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	ldundefined                              # line: 16           # column: 0
	eq 0x0, v1                               # line: 16           # column: 0
	jnez label@19                            # line: 17           # column: 0
	lda v1                                   # line: 18           # column: 0
	ldobjbyvalue 0x1, a3                     # line: 18           # column: 0
	stobjbyvalue 0x3, v0, v1                 # line: 18           # column: 0
	jmp label@10                             # line: 18           # column: 0
	label@19: lda a4                         # line: 18           # column: 0
	getpropiterator                          # line: 18           # column: 0
	sta v2                                   # line: 18           # column: 0
	label@22: jmp label@26                   # line: 18           # column: 0
	label@23: sta v1                         # line: 17           # column: 0
	lda v1                                   # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@26: getnextpropname v2             # line: 20           # column: 0
	sta v1                                   # line: 20           # column: 0
	ldundefined                              # line: 16           # column: 0
	eq 0x5, v1                               # line: 20           # column: 0
	jnez label@45                            # line: 16           # column: 0
	lda v0                                   # line: 20           # column: 0
	ldobjbyname 0x6, v                       # line: 20           # column: 0
	callthis1 0x8, v0, v1                    # line: 20           # column: 0
	callruntime.istrue 0xa                   # line: 20           # column: 0
	jnez label@38                            # line: 20           # column: 0
	ldtrue                                   # line: 21           # column: 0
	jmp label@39                             # line: 21           # column: 0
	label@38: ldfalse                        # line: 21           # column: 0
	label@39: callruntime.isfalse 0xc        # line: 21           # column: 0
	jnez label@26                            # line: 21           # column: 0
	lda v1                                   # line: 21           # column: 0
	ldobjbyvalue 0xe, a4                     # line: 21           # column: 0
	stobjbyvalue 0x10, v0, v1                # line: 21           # column: 0
	jmp label@26                             # line: 21           # column: 0
	label@45: lda v0                         # line: 22           # column: 0
	return                                   # line: 22           # column: 0
.catchall :
	try_begin_label : label@3
	try_end_label : label@6
	catch_begin_label : label@7
	catch_end_label : label@7
.catchall :
	try_begin_label : label@19
	try_end_label : label@22
	catch_begin_label : label@23
	catch_end_label : label@23
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any intersection_types.#~@0=#i(any a0, any a1, any a2, any a3) {
	lda a3                                   # line: 30           # column: 0
	stobjbyname 0x0, j, a2                   # line: 30           # column: 0
	lda a2                                   # line: 30           # column: 0
	return                                   # line: 30           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any intersection_types.#~@1=#g(any a0, any a1, any a2) {
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 5
.function any intersection_types.#~@1>#h(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, console           # line: 39           # column: 0
	sta v0                                   # line: 39           # column: 0
	ldobjbyname 0x1, h                       # line: 39           # column: 0
	sta v1                                   # line: 39           # column: 0
	lda.str Jim                              # line: 39           # column: 0
	sta v2                                   # line: 39           # column: 0
	lda v1                                   # line: 39           # column: 0
	callthis1 0x3, v0, v2                    # line: 39           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 40           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 19
.function any intersection_types.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, intersection_types.#*#f, 0x2 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 28           # column: 0
	sta v1                                   # line: 28           # column: 0
	defineclasswithbuffer 0x1, intersection_types.#~@0=#i, intersection_types_2068, 0x1, v1 # line: 28           # column: 0
	sta v1                                   # line: 28           # column: 0
	ldobjbyname 0x2, prototype               # line: 28           # column: 0
	ldhole                                   # line: 37           # column: 0
	sta v2                                   # line: 37           # column: 0
	defineclasswithbuffer 0x4, intersection_types.#~@1=#g, intersection_types_2077, 0x0, v2 # line: 37           # column: 0
	sta v2                                   # line: 37           # column: 0
	ldobjbyname 0x5, prototype               # line: 37           # column: 0
	lda.str Jim                              # line: 43           # column: 0
	sta v3                                   # line: 43           # column: 0
	mov v4, v1                               # line: 43           # column: 0
	mov v5, v3                               # line: 43           # column: 0
	newobjrange 0x7, 0x2, v4                 # line: 43           # column: 0
	sta v1                                   # line: 43           # column: 0
	mov v4, v2                               # line: 43           # column: 0
	newobjrange 0x9, 0x1, v4                 # line: 43           # column: 0
	sta v2                                   # line: 43           # column: 0
	lda v0                                   # line: 43           # column: 0
	callargs2 0xb, v1, v2                    # line: 43           # column: 0
	ldobjbyname 0xd, j                       # line: 44           # column: 0
	sta v0                                   # line: 44           # column: 0
	tryldglobalbyname 0xf, print             # line: 46           # column: 0
	sta v1                                   # line: 46           # column: 0
	lda.str Jim                              # line: 46           # column: 0
	stricteq 0x10, v0                        # line: 46           # column: 0
	sta v0                                   # line: 46           # column: 0
	lda.str success                          # line: 46           # column: 0
	sta v2                                   # line: 46           # column: 0
	lda v1                                   # line: 46           # column: 0
	callargs2 0x11, v0, v2                   # line: 46           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any predefined_types.#*#k(any a0, any a1, any a2, any a3) {
	createobjectwithbuffer 0x0, predefined_types_2131 # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda a3                                   # line: 25           # column: 0
	definepropertybyname 0x1, p, v0          # line: 25           # column: 0
	lda v0                                   # line: 26           # column: 0
	return                                   # line: 26           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 4
.function any predefined_types.#~C=#l(any a0, any a1, any a2) {
	ldai 0x0                                 # line: 0           # column: 0
	sta v0                                   # line: 0           # column: 0
	lda v0                                   # line: 0           # column: 0
	stobjbyname 0x0, m, a2                   # line: 0           # column: 0
	lda v0                                   # line: 0           # column: 0
	stobjbyname 0x2, n, a2                   # line: 0           # column: 0
	lda a2                                   # line: 0           # column: 0
	return                                   # line: 0           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 4
.function any predefined_types.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, predefined_types.#*#k, 0x1 # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 28           # column: 0
	sta v0                                   # line: 28           # column: 0
	defineclasswithbuffer 0x1, predefined_types.#~C=#l, predefined_types_2152, 0x0, v0 # line: 28           # column: 0
	ldobjbyname 0x2, prototype               # line: 28           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any union_types.#*#q(any a0, any a1, any a2, any a3, any a4) {
	ldtrue                                   # line: 16           # column: 0
	return                                   # line: 17           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 6
.function any union_types.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, union_types.#*#q, 0x2    # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x1, print             # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	lda.str Hello World                      # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	ldai 0x2                                 # line: 19           # column: 0
	sta v3                                   # line: 19           # column: 0
	lda v0                                   # line: 19           # column: 0
	callargs2 0x2, v2, v3                    # line: 19           # column: 0
	sta v0                                   # line: 19           # column: 0
	lda.str success                          # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda v1                                   # line: 19           # column: 0
	callargs2 0x4, v0, v2                    # line: 19           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

# ====================
# STRING
Hello World
Jim
Math
circle
console
d
discriminated_unions.#*#c
e
h
intersection_types.#*#f
intersection_types.#~@0=#i
intersection_types.#~@1=#g
j
m
n
p
predefined_types.#*#k
predefined_types.#~C=#l
print
prototype
r
rectangle
s
square
success
t
u
union_types.#*#q
v
