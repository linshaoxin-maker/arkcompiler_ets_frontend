/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

keep_property_745 { 2 [ tag_value:5, string:"KeepProperty1", ]}

keep_property_754 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

keep_property_782 { 8 [ tag_value:5, string:"functionkeep", tag_value:6, method:keep_property.#~@0>#functionkeep, tag_value:9, method_affiliate:0, tag_value:2, i32:1, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record keep_property {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames keep_property_745
	u32 moduleRecordIdx keep_property_754
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 10
.function any keep_property.#~@0=#a(any a0, any a1, any a2) {
	lda.str 1                                # line: 16           # column: 0
	stobjbyname 0x0, prop1, a2               # line: 16           # column: 0
	ldai 0x2                                 # line: 16           # column: 0
	stobjbyname 0x2, prop2, a2               # line: 16           # column: 0
	ldai 0x3                                 # line: 16           # column: 0
	stobjbyname 0x4, myprop, a2              # line: 16           # column: 0
	ldai 0x4                                 # line: 16           # column: 0
	stobjbyname 0x6, aaaaaaaa, a2            # line: 16           # column: 0
	ldai 0x5                                 # line: 16           # column: 0
	stobjbyname 0x8, b, a2                   # line: 16           # column: 0
	lda a2                                   # line: 16           # column: 0
	return                                   # line: 16           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any keep_property.#~@0>#functionkeep(any a0, any a1, any a2) {
	lda.str function name should be kept.    # line: 24           # column: 0
	return                                   # line: 25           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any keep_property.func_main_0(any a0, any a1, any a2) {
	ldhole                                   # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	defineclasswithbuffer 0x0, keep_property.#~@0=#a, keep_property_782, 0x0, v0 # line: 15           # column: 0
	ldobjbyname 0x1, prototype               # line: 15           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

# ====================
# STRING
1
aaaaaaaa
b
function name should be kept.
keep_property.#~@0=#a
myprop
prop1
prop2
prototype
