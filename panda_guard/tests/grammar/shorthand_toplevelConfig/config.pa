/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

exportsApi1_toplevel_4168 { 2 [ tag_value:5, string:"AbortError1", ]}

exportsApi1_toplevel_4177 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

exportsApi1_toplevel_4205 { 2 [ tag_value:2, i32:0, ]}

exportsApi1_toplevel_4214 { 8 [ tag_value:5, string:"codes1", tag_value:255, null_value:0, tag_value:5, string:"AbortError1", tag_value:255, null_value:0, ]}

exportsApi1_toplevel_4232 { 12 [ tag_value:5, string:"ERR_INVALID_ARG_TYPE1", tag_value:255, null_value:0, tag_value:5, string:"ERR_MISSING_ARGS1", tag_value:255, null_value:0, tag_value:5, string:"ERROR_OUT_OF_RANGE1", tag_value:255, null_value:0, ]}

exportsApi2_toplevel_4257 

exportsApi2_toplevel_4261 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

exportsApi2_toplevel_4289 { 8 [ tag_value:5, string:"codes2", tag_value:255, null_value:0, tag_value:5, string:"AbortError2", tag_value:2, i32:4, ]}

exportsApi2_toplevel_4310 { 12 [ tag_value:5, string:"ERR_INVALID_ARG_TYPE2", tag_value:2, i32:1, tag_value:5, string:"ERR_MISSING_ARGS2", tag_value:2, i32:2, tag_value:5, string:"ERROR_OUT_OF_RANGE2", tag_value:2, i32:3, ]}

exportsApi3_toplevel_4344 

exportsApi3_toplevel_4348 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

exportsApi3_toplevel_4376 { 8 [ tag_value:5, string:"addTest", tag_value:255, null_value:0, tag_value:5, string:"subtractTest", tag_value:255, null_value:0, ]}

exportsApi4_toplevel_4394 

exportsApi4_toplevel_4398 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

requireApi1_toplevel_4426 

requireApi1_toplevel_4430 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

requireApi2_toplevel_4458 

requireApi2_toplevel_4462 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

requireApi3_toplevel_4490 

requireApi3_toplevel_4494 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

requireApi4_toplevel_4522 

requireApi4_toplevel_4526 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

requireApi_worker_threads_4554 

requireApi_worker_threads_4558 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

someSimilarGrammars2_4586 

someSimilarGrammars2_4590 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

someSimilarGrammars2_4618 { 8 [ tag_value:5, string:"Propx1", tag_value:2, i32:1, tag_value:5, string:"Propy1", tag_value:2, i32:2, ]}

someSimilarGrammars2_4642 { 8 [ tag_value:5, string:"Propx2", tag_value:2, i32:2, tag_value:5, string:"Obj", tag_value:255, null_value:0, ]}

someSimilarGrammars2_4663 { 8 [ tag_value:5, string:"Propy3", tag_value:2, i32:3, tag_value:5, string:"Propy4", tag_value:2, i32:4, ]}

someSimilarGrammars2_4687 { 8 [ tag_value:5, string:"prop1", tag_value:2, i32:1, tag_value:5, string:"prop2", tag_value:2, i32:2, ]}

someSimilarGrammars2_4711 { 8 [ tag_value:5, string:"prop3", tag_value:2, i32:3, tag_value:5, string:"prop4", tag_value:2, i32:4, ]}

someSimilarGrammars2_4735 { 4 [ tag_value:5, string:"name11", tag_value:255, null_value:0, ]}

someSimilarGrammars_4746 

someSimilarGrammars_4750 { 6 [ i32:0, i32:0, i32:0, i32:0, i32:0, i32:0, ]}

someSimilarGrammars_4778 { 8 [ tag_value:5, string:"Propx1", tag_value:2, i32:1, tag_value:5, string:"Propy1", tag_value:2, i32:2, ]}

someSimilarGrammars_4802 { 4 [ tag_value:5, string:"akria3", tag_value:2, i32:13, ]}

someSimilarGrammars_4816 { 8 [ tag_value:5, string:"name2", tag_value:5, string:"akria4", tag_value:5, string:"age2", tag_value:2, i32:18, ]}

someSimilarGrammars_4840 { 4 [ tag_value:5, string:"akria", tag_value:2, i32:12, ]}

someSimilarGrammars_4854 { 8 [ tag_value:5, string:"name2", tag_value:5, string:"akria2", tag_value:5, string:"age2", tag_value:2, i32:18, ]}

someSimilarGrammars_4878 { 8 [ tag_value:5, string:"newName", tag_value:5, string:"akria5", tag_value:5, string:"newAge", tag_value:2, i32:18, ]}

someSimilarGrammars_4902 { 8 [ tag_value:5, string:"Propx2", tag_value:255, null_value:0, tag_value:5, string:"Propy2", tag_value:255, null_value:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record exportsApi1_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames exportsApi1_toplevel_4168
	u32 moduleRecordIdx exportsApi1_toplevel_4177
}
.record.source_file 

.record exportsApi2_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames exportsApi2_toplevel_4257
	u32 moduleRecordIdx exportsApi2_toplevel_4261
}
.record.source_file 

.record exportsApi3_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames exportsApi3_toplevel_4344
	u32 moduleRecordIdx exportsApi3_toplevel_4348
}
.record.source_file 

.record exportsApi4_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames exportsApi4_toplevel_4394
	u32 moduleRecordIdx exportsApi4_toplevel_4398
}
.record.source_file 

.record requireApi1_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames requireApi1_toplevel_4426
	u32 moduleRecordIdx requireApi1_toplevel_4430
}
.record.source_file 

.record requireApi2_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames requireApi2_toplevel_4458
	u32 moduleRecordIdx requireApi2_toplevel_4462
}
.record.source_file 

.record requireApi3_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames requireApi3_toplevel_4490
	u32 moduleRecordIdx requireApi3_toplevel_4494
}
.record.source_file 

.record requireApi4_toplevel {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames requireApi4_toplevel_4522
	u32 moduleRecordIdx requireApi4_toplevel_4526
}
.record.source_file 

.record requireApi_worker_threads {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames requireApi_worker_threads_4554
	u32 moduleRecordIdx requireApi_worker_threads_4558
}
.record.source_file 

.record someSimilarGrammars {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames someSimilarGrammars_4746
	u32 moduleRecordIdx someSimilarGrammars_4750
}
.record.source_file 

.record someSimilarGrammars2 {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames someSimilarGrammars2_4586
	u32 moduleRecordIdx someSimilarGrammars2_4590
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 4
.function any exportsApi1_toplevel.#~@0=#AbortError1(any a0, any a1, any a2, any a3) {
	mov v1, a3                               # line: 23           # column: 0
	supercallthisrange 0x0, 0x1, v1          # line: 23           # column: 0
	sta v0                                   # line: 23           # column: 0
	lda a2                                   # line: 23           # column: 0
	throw.ifsupernotcorrectcall 0x1          # line: 23           # column: 0
	lda v0                                   # line: 24           # column: 0
	throw.ifsupernotcorrectcall 0x0          # line: 24           # column: 0
	lda.str AbortError                       # line: 24           # column: 0
	stobjbyname 0x2, name, v0                # line: 24           # column: 0
	lda v0                                   # line: 18446744073709551615           # column: 0
	throw.ifsupernotcorrectcall 0x0          # line: 18446744073709551615           # column: 0
	lda v0                                   # line: 25           # column: 0
	return                                   # line: 25           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 19
.function any exportsApi1_toplevel.func_main_0(any a0, any a1, any a2) {
	lda.str ERR_INVALID_ARG_TYPE             # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	lda.str ERR_MISSING_ARGS                 # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	lda.str ERROR_OUT_OF_RANGE               # line: 18           # column: 0
	sta v2                                   # line: 18           # column: 0
	tryldglobalbyname 0x0, Error             # line: 21           # column: 0
	sta v3                                   # line: 21           # column: 0
	defineclasswithbuffer 0x1, exportsApi1_toplevel.#~@0=#AbortError1, exportsApi1_toplevel_4205, 0x1, v3 # line: 21           # column: 0
	sta v3                                   # line: 21           # column: 0
	ldobjbyname 0x2, prototype               # line: 21           # column: 0
	tryldglobalbyname 0x4, module            # line: 29           # column: 0
	sta v4                                   # line: 29           # column: 0
	createobjectwithbuffer 0x5, exportsApi1_toplevel_4214 # line: 29           # column: 0
	sta v5                                   # line: 29           # column: 0
	createobjectwithbuffer 0x6, exportsApi1_toplevel_4232 # line: 30           # column: 0
	sta v6                                   # line: 30           # column: 0
	lda v0                                   # line: 30           # column: 0
	definepropertybyname 0x7, ERR_INVALID_ARG_TYPE1, v6 # line: 30           # column: 0
	lda v1                                   # line: 30           # column: 0
	definepropertybyname 0x9, ERR_MISSING_ARGS1, v6 # line: 30           # column: 0
	lda v2                                   # line: 30           # column: 0
	definepropertybyname 0xb, ERROR_OUT_OF_RANGE1, v6 # line: 30           # column: 0
	lda v6                                   # line: 29           # column: 0
	definepropertybyname 0xd, codes1, v5     # line: 29           # column: 0
	lda v3                                   # line: 29           # column: 0
	definepropertybyname 0xf, AbortError1, v5 # line: 29           # column: 0
	lda v5                                   # line: 29           # column: 0
	stobjbyname 0x11, exports, v4            # line: 29           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 7
.function any exportsApi2_toplevel.func_main_0(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, module            # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	createobjectwithbuffer 0x1, exportsApi2_toplevel_4289 # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	createobjectwithbuffer 0x2, exportsApi2_toplevel_4310 # line: 17           # column: 0
	definepropertybyname 0x3, codes2, v1     # line: 16           # column: 0
	lda v1                                   # line: 16           # column: 0
	stobjbyname 0x5, exports, v0             # line: 16           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 1
.function any exportsApi3_toplevel.#*#addTest(any a0, any a1, any a2, any a3, any a4) {
	lda a4                                   # line: 16           # column: 0
	add2 0x0, a3                             # line: 16           # column: 0
	return                                   # line: 17           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 1
.function any exportsApi3_toplevel.#*#subtractTest(any a0, any a1, any a2, any a3, any a4) {
	lda a4                                   # line: 20           # column: 0
	sub2 0x0, a3                             # line: 20           # column: 0
	return                                   # line: 21           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 10
.function any exportsApi3_toplevel.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, exportsApi3_toplevel.#*#addTest, 0x2 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	definefunc 0x1, exportsApi3_toplevel.#*#subtractTest, 0x2 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x2, module            # line: 23           # column: 0
	sta v2                                   # line: 23           # column: 0
	createobjectwithbuffer 0x3, exportsApi3_toplevel_4376 # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	lda v0                                   # line: 23           # column: 0
	definepropertybyname 0x4, addTest, v3    # line: 23           # column: 0
	lda v1                                   # line: 23           # column: 0
	definepropertybyname 0x6, subtractTest, v3 # line: 23           # column: 0
	lda v3                                   # line: 23           # column: 0
	stobjbyname 0x8, exports, v2             # line: 23           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::NC_FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any exportsApi4_toplevel.#*#(any a0, any a1, any a2, any a3) {
	ldlexvar 0x0, 0x0                        # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	throw.undefinedifholewithname e          # line: 17           # column: 0
	ldai 0x2                                 # line: 17           # column: 0
	exp 0x0, a3                              # line: 17           # column: 0
	mul2 0x1, v0                             # line: 17           # column: 0
	return                                   # line: 17           # column: 0
}

.function_kind FunctionKind::NC_FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 2
.function any exportsApi4_toplevel.#*#^1(any a0, any a1, any a2, any a3) {
	ldlexvar 0x0, 0x0                        # line: 19           # column: 0
	sta v0                                   # line: 19           # column: 0
	throw.undefinedifholewithname e          # line: 19           # column: 0
	ldai 0x2                                 # line: 19           # column: 0
	sta v1                                   # line: 19           # column: 0
	lda v0                                   # line: 19           # column: 0
	mul2 0x0, v1                             # line: 19           # column: 0
	sta v0                                   # line: 19           # column: 0
	lda a3                                   # line: 19           # column: 0
	mul2 0x1, v0                             # line: 19           # column: 0
	return                                   # line: 19           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 11
.function any exportsApi4_toplevel.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x3                            # line: 18446744073709551615           # column: 0
	lda a1                                   # line: 18446744073709551615           # column: 0
	stlexvar 0x0, 0x1                        # line: 18446744073709551615           # column: 0
	lda a2                                   # line: 18446744073709551615           # column: 0
	stlexvar 0x0, 0x2                        # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x0, Math              # line: 15           # column: 0
	ldobjbyname 0x1, e                       # line: 15           # column: 0
	stlexvar 0x0, 0x0                        # line: 15           # column: 0
	tryldglobalbyname 0x3, exports           # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	definefunc 0x4, exportsApi4_toplevel.#*#, 0x1 # line: 17           # column: 0
	stobjbyname 0x5, areaTest, v0            # line: 17           # column: 0
	tryldglobalbyname 0x7, exports           # line: 19           # column: 0
	sta v0                                   # line: 19           # column: 0
	definefunc 0x8, exportsApi4_toplevel.#*#^1, 0x1 # line: 19           # column: 0
	stobjbyname 0x9, circumferenceTest, v0   # line: 19           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 33
.function any requireApi1_toplevel.func_main_0(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, require           # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	lda.str ./exportsApi1_toplevel           # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	lda v0                                   # line: 18           # column: 0
	callarg1 0x1, v1                         # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	ldobjbyname 0x3, codes1                  # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	ldobjbyname 0x5, ERR_INVALID_ARG_TYPE1   # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	lda v1                                   # line: 16           # column: 0
	ldobjbyname 0x7, ERR_MISSING_ARGS1       # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	lda v1                                   # line: 16           # column: 0
	ldobjbyname 0x9, ERROR_OUT_OF_RANGE1     # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	lda v0                                   # line: 17           # column: 0
	ldobjbyname 0xb, AbortError1             # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	tryldglobalbyname 0xd, print             # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	lda.str ERR_INVALID_ARG_TYPE             # line: 21           # column: 0
	stricteq 0xe, v2                         # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda.str success                          # line: 21           # column: 0
	sta v5                                   # line: 21           # column: 0
	lda v4                                   # line: 21           # column: 0
	callargs2 0xf, v2, v5                    # line: 21           # column: 0
	tryldglobalbyname 0x11, print            # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda.str ERR_MISSING_ARGS                 # line: 22           # column: 0
	stricteq 0x12, v3                        # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	lda.str success                          # line: 22           # column: 0
	sta v4                                   # line: 22           # column: 0
	lda v2                                   # line: 22           # column: 0
	callargs2 0x13, v3, v4                   # line: 22           # column: 0
	tryldglobalbyname 0x15, print            # line: 23           # column: 0
	sta v2                                   # line: 23           # column: 0
	lda.str ERROR_OUT_OF_RANGE               # line: 23           # column: 0
	stricteq 0x16, v1                        # line: 23           # column: 0
	sta v1                                   # line: 23           # column: 0
	lda.str success                          # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	lda v2                                   # line: 23           # column: 0
	callargs2 0x17, v1, v3                   # line: 23           # column: 0
	lda.str hello                            # line: 24           # column: 0
	sta v1                                   # line: 24           # column: 0
	mov v6, v0                               # line: 24           # column: 0
	mov v7, v1                               # line: 24           # column: 0
	newobjrange 0x19, 0x2, v6                # line: 24           # column: 0
	sta v0                                   # line: 24           # column: 0
	tryldglobalbyname 0x1b, print            # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	lda v0                                   # line: 25           # column: 0
	ldobjbyname 0x1c, f                      # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda.str hello                            # line: 25           # column: 0
	stricteq 0x1e, v0                        # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda.str success                          # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callargs2 0x1f, v0, v2                   # line: 25           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 33
.function any requireApi2_toplevel.func_main_0(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, require           # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	lda.str ./exportsApi1_toplevel           # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	lda v0                                   # line: 18           # column: 0
	callarg1 0x1, v1                         # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	ldobjbyname 0x3, codes1                  # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	ldobjbyname 0x5, ERR_INVALID_ARG_TYPE1   # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	lda v1                                   # line: 16           # column: 0
	ldobjbyname 0x7, ERR_MISSING_ARGS1       # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	lda v1                                   # line: 16           # column: 0
	ldobjbyname 0x9, ERROR_OUT_OF_RANGE1     # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	lda v0                                   # line: 17           # column: 0
	ldobjbyname 0xb, AbortError1             # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	tryldglobalbyname 0xd, print             # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	lda.str ERR_INVALID_ARG_TYPE             # line: 21           # column: 0
	stricteq 0xe, v2                         # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda.str success                          # line: 21           # column: 0
	sta v5                                   # line: 21           # column: 0
	lda v4                                   # line: 21           # column: 0
	callargs2 0xf, v2, v5                    # line: 21           # column: 0
	tryldglobalbyname 0x11, print            # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda.str ERR_MISSING_ARGS                 # line: 22           # column: 0
	stricteq 0x12, v3                        # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	lda.str success                          # line: 22           # column: 0
	sta v4                                   # line: 22           # column: 0
	lda v2                                   # line: 22           # column: 0
	callargs2 0x13, v3, v4                   # line: 22           # column: 0
	tryldglobalbyname 0x15, print            # line: 23           # column: 0
	sta v2                                   # line: 23           # column: 0
	lda.str ERROR_OUT_OF_RANGE               # line: 23           # column: 0
	stricteq 0x16, v1                        # line: 23           # column: 0
	sta v1                                   # line: 23           # column: 0
	lda.str success                          # line: 23           # column: 0
	sta v3                                   # line: 23           # column: 0
	lda v2                                   # line: 23           # column: 0
	callargs2 0x17, v1, v3                   # line: 23           # column: 0
	lda.str hello                            # line: 24           # column: 0
	sta v1                                   # line: 24           # column: 0
	mov v6, v0                               # line: 24           # column: 0
	mov v7, v1                               # line: 24           # column: 0
	newobjrange 0x19, 0x2, v6                # line: 24           # column: 0
	sta v0                                   # line: 24           # column: 0
	tryldglobalbyname 0x1b, print            # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	lda v0                                   # line: 25           # column: 0
	ldobjbyname 0x1c, f                      # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda.str hello                            # line: 25           # column: 0
	stricteq 0x1e, v0                        # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda.str success                          # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callargs2 0x1f, v0, v2                   # line: 25           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 19
.function any requireApi3_toplevel.func_main_0(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, require           # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	lda.str ./exportsApi3_toplevel           # line: 15           # column: 0
	sta v1                                   # line: 15           # column: 0
	lda v0                                   # line: 15           # column: 0
	callarg1 0x1, v1                         # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	ldobjbyname 0x3, addTest                 # line: 15           # column: 0
	sta v1                                   # line: 15           # column: 0
	lda v0                                   # line: 15           # column: 0
	ldobjbyname 0x5, subtractTest            # line: 15           # column: 0
	sta v0                                   # line: 15           # column: 0
	tryldglobalbyname 0x7, print             # line: 17           # column: 0
	sta v2                                   # line: 17           # column: 0
	ldai 0x1                                 # line: 17           # column: 0
	sta v3                                   # line: 17           # column: 0
	ldai 0x2                                 # line: 17           # column: 0
	sta v4                                   # line: 17           # column: 0
	lda v1                                   # line: 17           # column: 0
	callargs2 0x8, v3, v4                    # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	ldai 0x3                                 # line: 17           # column: 0
	sta v5                                   # line: 17           # column: 0
	lda v5                                   # line: 17           # column: 0
	eq 0xa, v1                               # line: 17           # column: 0
	sta v1                                   # line: 17           # column: 0
	lda.str success                          # line: 17           # column: 0
	sta v6                                   # line: 17           # column: 0
	lda v2                                   # line: 17           # column: 0
	callargs2 0xb, v1, v6                    # line: 17           # column: 0
	tryldglobalbyname 0xd, print             # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	lda v0                                   # line: 18           # column: 0
	callargs2 0xe, v5, v3                    # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	lda v4                                   # line: 18           # column: 0
	eq 0x10, v0                              # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	lda.str success                          # line: 18           # column: 0
	sta v2                                   # line: 18           # column: 0
	lda v1                                   # line: 18           # column: 0
	callargs2 0x11, v0, v2                   # line: 18           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 24
.function any requireApi4_toplevel.func_main_0(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, require           # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	lda.str ./exportsApi4_toplevel           # line: 18           # column: 0
	sta v1                                   # line: 18           # column: 0
	lda v0                                   # line: 18           # column: 0
	callarg1 0x1, v1                         # line: 18           # column: 0
	sta v0                                   # line: 18           # column: 0
	ldobjbyname 0x3, areaTest                # line: 16           # column: 0
	sta v1                                   # line: 16           # column: 0
	lda v0                                   # line: 17           # column: 0
	ldobjbyname 0x5, circumferenceTest       # line: 17           # column: 0
	sta v0                                   # line: 17           # column: 0
	tryldglobalbyname 0x7, Math              # line: 20           # column: 0
	ldobjbyname 0x8, e                       # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	tryldglobalbyname 0xa, print             # line: 21           # column: 0
	sta v3                                   # line: 21           # column: 0
	ldai 0x3                                 # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	lda v1                                   # line: 21           # column: 0
	callarg1 0xb, v4                         # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	ldai 0x9                                 # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	lda v2                                   # line: 21           # column: 0
	mul2 0xd, v4                             # line: 21           # column: 0
	eq 0xe, v1                               # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	lda.str success                          # line: 21           # column: 0
	sta v4                                   # line: 21           # column: 0
	lda v3                                   # line: 21           # column: 0
	callargs2 0xf, v1, v4                    # line: 21           # column: 0
	tryldglobalbyname 0x11, print            # line: 22           # column: 0
	sta v1                                   # line: 22           # column: 0
	ldai 0x2                                 # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	lda v0                                   # line: 22           # column: 0
	callarg1 0x12, v3                        # line: 22           # column: 0
	sta v0                                   # line: 22           # column: 0
	ldai 0x4                                 # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	lda v2                                   # line: 22           # column: 0
	mul2 0x14, v3                            # line: 22           # column: 0
	eq 0x15, v0                              # line: 22           # column: 0
	sta v0                                   # line: 22           # column: 0
	lda.str success                          # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda v1                                   # line: 22           # column: 0
	callargs2 0x16, v0, v2                   # line: 22           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 0
.function any requireApi_worker_threads.#*#a(any a0, any a1, any a2) {
	ldlexvar 0x0, 0x0                        # line: 29           # column: 0
	throw.undefinedifholewithname g          # line: 29           # column: 0
	ldlexvar 0x0, 0x1                        # line: 30           # column: 0
	throw.undefinedifholewithname h          # line: 30           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 31           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 9
.function any requireApi_worker_threads.#*#b(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, require           # line: 20           # column: 0
	sta v0                                   # line: 20           # column: 0
	lda.str worker_threads                   # line: 20           # column: 0
	sta v1                                   # line: 20           # column: 0
	lda v0                                   # line: 20           # column: 0
	callarg1 0x1, v1                         # line: 20           # column: 0
	sta v0                                   # line: 20           # column: 0
	ldobjbyname 0x3, i                       # line: 20           # column: 0
	lda v0                                   # line: 20           # column: 0
	ldobjbyname 0x5, j                       # line: 20           # column: 0
	lda v0                                   # line: 20           # column: 0
	ldobjbyname 0x7, k                       # line: 20           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 24           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 19
.function any requireApi_worker_threads.func_main_0(any a0, any a1, any a2) {
	newlexenv 0x2                            # line: 18446744073709551615           # column: 0
	definefunc 0x0, requireApi_worker_threads.#*#b, 0x0 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	definefunc 0x1, requireApi_worker_threads.#*#a, 0x0 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x2, require           # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	lda.str worker_threads                   # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	lda v2                                   # line: 16           # column: 0
	callarg1 0x3, v3                         # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	ldobjbyname 0x5, g                       # line: 16           # column: 0
	stlexvar 0x0, 0x0                        # line: 16           # column: 0
	lda v2                                   # line: 16           # column: 0
	ldobjbyname 0x7, l                       # line: 16           # column: 0
	lda v2                                   # line: 16           # column: 0
	ldobjbyname 0x9, m                       # line: 16           # column: 0
	lda v2                                   # line: 16           # column: 0
	ldobjbyname 0xb, h                       # line: 16           # column: 0
	stlexvar 0x0, 0x1                        # line: 16           # column: 0
	lda v2                                   # line: 16           # column: 0
	ldobjbyname 0xd, n                       # line: 16           # column: 0
	lda v0                                   # line: 26           # column: 0
	callarg0 0xf                             # line: 26           # column: 0
	lda v1                                   # line: 33           # column: 0
	callarg0 0x11                            # line: 33           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 67
.function any someSimilarGrammars.#*#c(any a0, any a1, any a2) {
	nop                                      # line: 25           # column: 0
	createarraywithbuffer 0x0, someSimilarGrammars_4802 # line: 25           # column: 0
	getiterator 0x1                          # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	ldobjbyname 0x3, o                       # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	ldfalse                                  # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	ldfalse                                  # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	label@11: mov v6, v3                     # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	lda v3                                   # line: 25           # column: 0
	callruntime.istrue 0x5                   # line: 25           # column: 0
	jnez label@36                            # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callthis0 0x7, v0                        # line: 25           # column: 0
	sta v8                                   # line: 25           # column: 0
	throw.ifnotobject v8                     # line: 25           # column: 0
	ldobjbyname 0x9, p                       # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	mov v6, v3                               # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	callruntime.isfalse 0xb                  # line: 25           # column: 0
	jnez label@32                            # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	mov v6, v3                               # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	jmp label@36                             # line: 25           # column: 0
	label@32: lda v8                         # line: 25           # column: 0
	ldobjbyname 0xd, q                       # line: 25           # column: 0
	sta v8                                   # line: 25           # column: 0
	jmp label@48                             # line: 25           # column: 0
	label@36: mov v6, v3                     # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	sta v8                                   # line: 25           # column: 0
	label@40: jmp label@48                   # line: 25           # column: 0
	label@41: sta v7                         # line: 25           # column: 0
	mov v4, v6                               # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	mov v4, v1                               # line: 25           # column: 0
	lda v7                                   # line: 25           # column: 0
	throw                                    # line: 25           # column: 0
	label@48: mov v6, v3                     # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	lda v3                                   # line: 25           # column: 0
	callruntime.istrue 0xf                   # line: 25           # column: 0
	jnez label@73                            # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callthis0 0x11, v0                       # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	throw.ifnotobject v1                     # line: 25           # column: 0
	ldobjbyname 0x13, p                      # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	mov v6, v3                               # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	callruntime.isfalse 0x15                 # line: 25           # column: 0
	jnez label@69                            # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	mov v6, v3                               # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	jmp label@73                             # line: 25           # column: 0
	label@69: lda v1                         # line: 25           # column: 0
	ldobjbyname 0x17, q                      # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	jmp label@85                             # line: 25           # column: 0
	label@73: mov v6, v3                     # line: 25           # column: 0
	mov v4, v3                               # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	label@77: jmp label@85                   # line: 25           # column: 0
	label@78: sta v7                         # line: 25           # column: 0
	mov v4, v6                               # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	mov v4, v1                               # line: 25           # column: 0
	lda v7                                   # line: 25           # column: 0
	throw                                    # line: 25           # column: 0
	label@85: lda v3                         # line: 25           # column: 0
	callruntime.istrue 0x19                  # line: 25           # column: 0
	jnez label@144                           # line: 25           # column: 0
	lda v2                                   # line: 25           # column: 0
	callruntime.istrue 0x1b                  # line: 25           # column: 0
	jnez label@144                           # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	ldhole                                   # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	label@96: lda v0                         # line: 25           # column: 0
	ldobjbyname 0x1d, r                      # line: 25           # column: 0
	sta v7                                   # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	eq 0x1f, v7                              # line: 25           # column: 0
	jnez label@144                           # line: 25           # column: 0
	lda v7                                   # line: 25           # column: 0
	callthis0 0x20, v0                       # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	label@105: jmp label@109                 # line: 25           # column: 0
	label@106: sta v6                        # line: 25           # column: 0
	mov v3, v6                               # line: 25           # column: 0
	jmp label@110                            # line: 25           # column: 0
	label@109: mov v2, v0                    # line: 25           # column: 0
	label@110: ldhole                        # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	lda v3                                   # line: 25           # column: 0
	noteq 0x22, v0                           # line: 25           # column: 0
	jeqz label@117                           # line: 25           # column: 0
	lda v3                                   # line: 25           # column: 0
	throw                                    # line: 25           # column: 0
	label@117: throw.ifnotobject v2          # line: 25           # column: 0
	jmp label@144                            # line: 25           # column: 0
	label@119: sta v5                        # line: 25           # column: 0
	lda v4                                   # line: 25           # column: 0
	callruntime.istrue 0x23                  # line: 25           # column: 0
	jnez label@142                           # line: 25           # column: 0
	lda v2                                   # line: 25           # column: 0
	callruntime.istrue 0x25                  # line: 25           # column: 0
	jnez label@140                           # line: 25           # column: 0
	ldtrue                                   # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	ldhole                                   # line: 25           # column: 0
	label@129: lda v0                        # line: 25           # column: 0
	ldobjbyname 0x27, r                      # line: 25           # column: 0
	sta v1                                   # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	eq 0x29, v1                              # line: 25           # column: 0
	jnez label@140                           # line: 25           # column: 0
	lda v1                                   # line: 25           # column: 0
	callthis0 0x2a, v0                       # line: 25           # column: 0
	label@137: jmp label@138                 # line: 25           # column: 0
	label@138: lda v5                        # line: 25           # column: 0
	throw                                    # line: 25           # column: 0
	label@140: lda v5                        # line: 25           # column: 0
	throw                                    # line: 25           # column: 0
	label@142: lda v5                        # line: 25           # column: 0
	throw                                    # line: 25           # column: 0
	label@144: createobjectwithbuffer 0x2c, someSimilarGrammars_4816 # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	ldnull                                   # line: 25           # column: 0
	strictnoteq 0x2d, v0                     # line: 25           # column: 0
	jeqz label@152                           # line: 25           # column: 0
	ldundefined                              # line: 25           # column: 0
	strictnoteq 0x2e, v0                     # line: 25           # column: 0
	jnez label@153                           # line: 25           # column: 0
	label@152: throw.patternnoncoercible     # line: 25           # column: 0
	label@153: ldundefined                   # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	mov v9, v0                               # line: 25           # column: 0
	mov v10, v2                              # line: 25           # column: 0
	createobjectwithexcludedkeys 0x0, v9, v10 # line: 25           # column: 0
	sta v0                                   # line: 25           # column: 0
	tryldglobalbyname 0x2f, print            # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	lda.str akria3                           # line: 25           # column: 0
	stricteq 0x30, v8                        # line: 25           # column: 0
	sta v3                                   # line: 25           # column: 0
	lda.str success                          # line: 25           # column: 0
	sta v4                                   # line: 25           # column: 0
	lda v2                                   # line: 25           # column: 0
	callargs2 0x31, v3, v4                   # line: 25           # column: 0
	tryldglobalbyname 0x33, print            # line: 25           # column: 0
	sta v2                                   # line: 25           # column: 0
	ldai 0xd                                 # line: 25           # column: 0
	stricteq 0x34, v1                        # line: 26           # column: 0
	sta v1                                   # line: 26           # column: 0
	lda.str success                          # line: 26           # column: 0
	sta v3                                   # line: 26           # column: 0
	lda v2                                   # line: 26           # column: 0
	callargs2 0x35, v1, v3                   # line: 26           # column: 0
	tryldglobalbyname 0x37, print            # line: 26           # column: 0
	sta v1                                   # line: 26           # column: 0
	lda v0                                   # line: 26           # column: 0
	ldobjbyname 0x38, name2                  # line: 26           # column: 0
	sta v2                                   # line: 26           # column: 0
	lda.str akria4                           # line: 26           # column: 0
	stricteq 0x3a, v2                        # line: 26           # column: 0
	sta v2                                   # line: 26           # column: 0
	lda.str success                          # line: 28           # column: 0
	sta v3                                   # line: 28           # column: 0
	lda v1                                   # line: 28           # column: 0
	callargs2 0x3b, v2, v3                   # line: 28           # column: 0
	tryldglobalbyname 0x3d, print            # line: 28           # column: 0
	sta v1                                   # line: 28           # column: 0
	lda v0                                   # line: 28           # column: 0
	ldobjbyname 0x3e, age2                   # line: 28           # column: 0
	sta v0                                   # line: 28           # column: 0
	ldai 0x12                                # line: 28           # column: 0
	stricteq 0x40, v0                        # line: 29           # column: 0
	sta v0                                   # line: 29           # column: 0
	lda.str success                          # line: 29           # column: 0
	sta v2                                   # line: 29           # column: 0
	lda v1                                   # line: 29           # column: 0
	callargs2 0x41, v0, v2                   # line: 29           # column: 0
	ldundefined                              # line: 29           # column: 0
	returnundefined                          # line: 29           # column: 0
.catchall :
	try_begin_label : label@11
	try_end_label : label@40
	catch_begin_label : label@41
	catch_end_label : label@41
.catchall :
	try_begin_label : label@48
	try_end_label : label@77
	catch_begin_label : label@78
	catch_end_label : label@78
.catchall :
	try_begin_label : label@96
	try_end_label : label@105
	catch_begin_label : label@106
	catch_end_label : label@106
.catchall :
	try_begin_label : label@129
	try_end_label : label@137
	catch_begin_label : label@138
	catch_end_label : label@138
.catchall :
	try_begin_label : label@11
	try_end_label : label@85
	catch_begin_label : label@119
	catch_end_label : label@119
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 1
.function any someSimilarGrammars.#*#d(any a0, any a1, any a2) {
	createobjectwithbuffer 0x0, someSimilarGrammars_4778 # line: 42           # column: 0
	return                                   # line: 43           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 117
.function any someSimilarGrammars.func_main_0(any a0, any a1, any a2) {
	nop                                      # line: 18446744073709551615           # column: 0
	definefunc 0x0, someSimilarGrammars.#*#c, 0x0 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	definefunc 0x1, someSimilarGrammars.#*#d, 0x0 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	createarraywithbuffer 0x2, someSimilarGrammars_4840 # line: 16           # column: 0
	getiterator 0x3                          # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	ldobjbyname 0x5, o                       # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	ldfalse                                  # line: 16           # column: 0
	sta v4                                   # line: 16           # column: 0
	ldfalse                                  # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	label@15: mov v8, v5                     # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	lda v5                                   # line: 16           # column: 0
	callruntime.istrue 0x7                   # line: 16           # column: 0
	jnez label@40                            # line: 16           # column: 0
	lda v3                                   # line: 16           # column: 0
	callthis0 0x9, v2                        # line: 16           # column: 0
	sta v10                                  # line: 16           # column: 0
	throw.ifnotobject v10                    # line: 16           # column: 0
	ldobjbyname 0xb, p                       # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	mov v8, v5                               # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	callruntime.isfalse 0xd                  # line: 16           # column: 0
	jnez label@36                            # line: 16           # column: 0
	ldtrue                                   # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	mov v8, v5                               # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	jmp label@40                             # line: 16           # column: 0
	label@36: lda v10                        # line: 16           # column: 0
	ldobjbyname 0xf, q                       # line: 16           # column: 0
	sta v10                                  # line: 16           # column: 0
	jmp label@52                             # line: 16           # column: 0
	label@40: mov v8, v5                     # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	sta v10                                  # line: 16           # column: 0
	label@44: jmp label@52                   # line: 16           # column: 0
	label@45: sta v9                         # line: 16           # column: 0
	mov v6, v8                               # line: 16           # column: 0
	ldtrue                                   # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	mov v6, v0                               # line: 16           # column: 0
	lda v9                                   # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@52: mov v8, v5                     # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	lda v5                                   # line: 16           # column: 0
	callruntime.istrue 0x11                  # line: 16           # column: 0
	jnez label@77                            # line: 16           # column: 0
	lda v3                                   # line: 16           # column: 0
	callthis0 0x13, v2                       # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	throw.ifnotobject v3                     # line: 16           # column: 0
	ldobjbyname 0x15, p                      # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	mov v8, v5                               # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	callruntime.isfalse 0x17                 # line: 16           # column: 0
	jnez label@73                            # line: 16           # column: 0
	ldtrue                                   # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	mov v8, v5                               # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	jmp label@77                             # line: 16           # column: 0
	label@73: lda v3                         # line: 16           # column: 0
	ldobjbyname 0x19, q                      # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	jmp label@89                             # line: 16           # column: 0
	label@77: mov v8, v5                     # line: 16           # column: 0
	mov v6, v5                               # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	sta v3                                   # line: 16           # column: 0
	label@81: jmp label@89                   # line: 16           # column: 0
	label@82: sta v9                         # line: 16           # column: 0
	mov v6, v8                               # line: 16           # column: 0
	ldtrue                                   # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	mov v6, v0                               # line: 16           # column: 0
	lda v9                                   # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@89: lda v5                         # line: 16           # column: 0
	callruntime.istrue 0x1b                  # line: 16           # column: 0
	jnez label@148                           # line: 16           # column: 0
	lda v4                                   # line: 16           # column: 0
	callruntime.istrue 0x1d                  # line: 16           # column: 0
	jnez label@148                           # line: 16           # column: 0
	ldtrue                                   # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	sta v4                                   # line: 16           # column: 0
	ldhole                                   # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	label@100: lda v2                        # line: 16           # column: 0
	ldobjbyname 0x1f, r                      # line: 16           # column: 0
	sta v9                                   # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	eq 0x21, v9                              # line: 16           # column: 0
	jnez label@148                           # line: 16           # column: 0
	lda v9                                   # line: 16           # column: 0
	callthis0 0x22, v2                       # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	label@109: jmp label@113                 # line: 16           # column: 0
	label@110: sta v8                        # line: 16           # column: 0
	mov v5, v8                               # line: 16           # column: 0
	jmp label@114                            # line: 16           # column: 0
	label@113: mov v4, v2                    # line: 16           # column: 0
	label@114: ldhole                        # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	lda v5                                   # line: 16           # column: 0
	noteq 0x24, v2                           # line: 16           # column: 0
	jeqz label@121                           # line: 16           # column: 0
	lda v5                                   # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@121: throw.ifnotobject v4          # line: 16           # column: 0
	jmp label@148                            # line: 16           # column: 0
	label@123: sta v7                        # line: 16           # column: 0
	lda v6                                   # line: 16           # column: 0
	callruntime.istrue 0x25                  # line: 16           # column: 0
	jnez label@146                           # line: 16           # column: 0
	lda v4                                   # line: 16           # column: 0
	callruntime.istrue 0x27                  # line: 16           # column: 0
	jnez label@144                           # line: 16           # column: 0
	ldtrue                                   # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	ldhole                                   # line: 16           # column: 0
	label@133: lda v2                        # line: 16           # column: 0
	ldobjbyname 0x29, r                      # line: 16           # column: 0
	sta v0                                   # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	eq 0x2b, v0                              # line: 16           # column: 0
	jnez label@144                           # line: 16           # column: 0
	lda v0                                   # line: 16           # column: 0
	callthis0 0x2c, v2                       # line: 16           # column: 0
	label@141: jmp label@142                 # line: 16           # column: 0
	label@142: lda v7                        # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@144: lda v7                        # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@146: lda v7                        # line: 16           # column: 0
	throw                                    # line: 16           # column: 0
	label@148: createobjectwithbuffer 0x2e, someSimilarGrammars_4854 # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	ldnull                                   # line: 16           # column: 0
	strictnoteq 0x2f, v2                     # line: 16           # column: 0
	jeqz label@156                           # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	strictnoteq 0x30, v2                     # line: 16           # column: 0
	jnez label@157                           # line: 16           # column: 0
	label@156: throw.patternnoncoercible     # line: 16           # column: 0
	label@157: ldai 0x12                     # line: 16           # column: 0
	sta v4                                   # line: 16           # column: 0
	ldundefined                              # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	mov v11, v2                              # line: 16           # column: 0
	mov v12, v5                              # line: 16           # column: 0
	createobjectwithexcludedkeys 0x0, v11, v12 # line: 16           # column: 0
	sta v2                                   # line: 16           # column: 0
	tryldglobalbyname 0x31, print            # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	lda.str akria                            # line: 16           # column: 0
	stricteq 0x32, v10                       # line: 16           # column: 0
	sta v6                                   # line: 16           # column: 0
	lda.str success                          # line: 16           # column: 0
	sta v7                                   # line: 16           # column: 0
	lda v5                                   # line: 16           # column: 0
	callargs2 0x33, v6, v7                   # line: 16           # column: 0
	tryldglobalbyname 0x35, print            # line: 16           # column: 0
	sta v5                                   # line: 16           # column: 0
	ldai 0xc                                 # line: 16           # column: 0
	stricteq 0x36, v3                        # line: 17           # column: 0
	sta v3                                   # line: 17           # column: 0
	lda.str success                          # line: 17           # column: 0
	sta v6                                   # line: 17           # column: 0
	lda v5                                   # line: 17           # column: 0
	callargs2 0x37, v3, v6                   # line: 17           # column: 0
	tryldglobalbyname 0x39, print            # line: 17           # column: 0
	sta v3                                   # line: 17           # column: 0
	lda v2                                   # line: 17           # column: 0
	ldobjbyname 0x3a, name2                  # line: 17           # column: 0
	sta v5                                   # line: 17           # column: 0
	lda.str akria2                           # line: 17           # column: 0
	stricteq 0x3c, v5                        # line: 17           # column: 0
	sta v5                                   # line: 17           # column: 0
	lda.str success                          # line: 19           # column: 0
	sta v6                                   # line: 19           # column: 0
	lda v3                                   # line: 19           # column: 0
	callargs2 0x3d, v5, v6                   # line: 19           # column: 0
	tryldglobalbyname 0x3f, print            # line: 19           # column: 0
	sta v3                                   # line: 19           # column: 0
	lda v2                                   # line: 19           # column: 0
	ldobjbyname 0x40, age2                   # line: 19           # column: 0
	sta v2                                   # line: 19           # column: 0
	lda v4                                   # line: 20           # column: 0
	stricteq 0x42, v2                        # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	lda.str success                          # line: 20           # column: 0
	sta v5                                   # line: 20           # column: 0
	lda v3                                   # line: 20           # column: 0
	callargs2 0x43, v2, v5                   # line: 20           # column: 0
	lda v0                                   # line: 21           # column: 0
	callarg0 0x45                            # line: 21           # column: 0
	createobjectwithbuffer 0x47, someSimilarGrammars_4878 # line: 21           # column: 0
	sta v0                                   # line: 21           # column: 0
	ldnull                                   # line: 21           # column: 0
	strictnoteq 0x48, v0                     # line: 21           # column: 0
	jeqz label@217                           # line: 21           # column: 0
	ldundefined                              # line: 21           # column: 0
	strictnoteq 0x49, v0                     # line: 21           # column: 0
	jnez label@218                           # line: 21           # column: 0
	label@217: throw.patternnoncoercible     # line: 21           # column: 0
	label@218: lda.str newName               # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda v0                                   # line: 22           # column: 0
	ldobjbyname 0x4a, newName                # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	mov v11, v0                              # line: 22           # column: 0
	mov v12, v2                              # line: 22           # column: 0
	createobjectwithexcludedkeys 0x0, v11, v12 # line: 22           # column: 0
	sta v0                                   # line: 22           # column: 0
	tryldglobalbyname 0x4c, print            # line: 22           # column: 0
	sta v2                                   # line: 22           # column: 0
	lda.str akria5                           # line: 22           # column: 0
	stricteq 0x4d, v3                        # line: 22           # column: 0
	sta v3                                   # line: 22           # column: 0
	lda.str success                          # line: 34           # column: 0
	sta v5                                   # line: 34           # column: 0
	lda v2                                   # line: 34           # column: 0
	callargs2 0x4e, v3, v5                   # line: 34           # column: 0
	tryldglobalbyname 0x50, print            # line: 37           # column: 0
	sta v2                                   # line: 37           # column: 0
	lda v0                                   # line: 37           # column: 0
	ldobjbyname 0x51, newAge                 # line: 37           # column: 0
	sta v0                                   # line: 37           # column: 0
	lda v4                                   # line: 37           # column: 0
	stricteq 0x53, v0                        # line: 37           # column: 0
	sta v0                                   # line: 37           # column: 0
	lda.str success                          # line: 37           # column: 0
	sta v3                                   # line: 37           # column: 0
	lda v2                                   # line: 37           # column: 0
	callargs2 0x54, v0, v3                   # line: 37           # column: 0
	lda v1                                   # line: 37           # column: 0
	callarg0 0x56                            # line: 37           # column: 0
	sta v0                                   # line: 37           # column: 0
	ldobjbyname 0x58, Propx1                 # line: 37           # column: 0
	sta v1                                   # line: 37           # column: 0
	lda v0                                   # line: 38           # column: 0
	ldobjbyname 0x5a, Propy1                 # line: 38           # column: 0
	sta v0                                   # line: 38           # column: 0
	tryldglobalbyname 0x5c, print            # line: 38           # column: 0
	sta v2                                   # line: 38           # column: 0
	ldai 0x1                                 # line: 38           # column: 0
	stricteq 0x5d, v1                        # line: 38           # column: 0
	sta v1                                   # line: 38           # column: 0
	lda.str success                          # line: 39           # column: 0
	sta v3                                   # line: 39           # column: 0
	lda v2                                   # line: 39           # column: 0
	callargs2 0x5e, v1, v3                   # line: 39           # column: 0
	tryldglobalbyname 0x60, print            # line: 39           # column: 0
	sta v1                                   # line: 39           # column: 0
	ldai 0x2                                 # line: 39           # column: 0
	stricteq 0x61, v0                        # line: 39           # column: 0
	sta v0                                   # line: 39           # column: 0
	lda.str success                          # line: 39           # column: 0
	sta v2                                   # line: 39           # column: 0
	lda v1                                   # line: 45           # column: 0
	callargs2 0x62, v0, v2                   # line: 45           # column: 0
	createobjectwithbuffer 0x64, someSimilarGrammars_4902 # line: 45           # column: 0
	sta v0                                   # line: 45           # column: 0
	ldai 0x3                                 # line: 45           # column: 0
	sta v1                                   # line: 45           # column: 0
	lda v1                                   # line: 45           # column: 0
	definepropertybyname 0x65, Propx2, v0    # line: 45           # column: 0
	ldai 0x4                                 # line: 45           # column: 0
	sta v2                                   # line: 45           # column: 0
	lda v2                                   # line: 45           # column: 0
	definepropertybyname 0x67, Propy2, v0    # line: 45           # column: 0
	lda v0                                   # line: 46           # column: 0
	ldobjbyname 0x69, Propx2                 # line: 46           # column: 0
	sta v3                                   # line: 46           # column: 0
	lda v0                                   # line: 46           # column: 0
	ldobjbyname 0x6b, Propy2                 # line: 46           # column: 0
	sta v0                                   # line: 46           # column: 0
	tryldglobalbyname 0x6d, print            # line: 46           # column: 0
	sta v4                                   # line: 46           # column: 0
	lda v1                                   # line: 47           # column: 0
	stricteq 0x6e, v3                        # line: 47           # column: 0
	sta v1                                   # line: 47           # column: 0
	lda.str success                          # line: 47           # column: 0
	sta v3                                   # line: 47           # column: 0
	lda v4                                   # line: 47           # column: 0
	callargs2 0x6f, v1, v3                   # line: 47           # column: 0
	tryldglobalbyname 0x71, print            # line: 47           # column: 0
	sta v1                                   # line: 47           # column: 0
	lda v2                                   # line: 50           # column: 0
	stricteq 0x72, v0                        # line: 50           # column: 0
	sta v0                                   # line: 50           # column: 0
	lda.str success                          # line: 51           # column: 0
	sta v2                                   # line: 51           # column: 0
	lda v1                                   # line: 51           # column: 0
	callargs2 0x73, v0, v2                   # line: 51           # column: 0
	ldundefined                              # line: 51           # column: 0
	returnundefined                          # line: 51           # column: 0
.catchall :
	try_begin_label : label@15
	try_end_label : label@44
	catch_begin_label : label@45
	catch_end_label : label@45
.catchall :
	try_begin_label : label@52
	try_end_label : label@81
	catch_begin_label : label@82
	catch_end_label : label@82
.catchall :
	try_begin_label : label@100
	try_end_label : label@109
	catch_begin_label : label@110
	catch_end_label : label@110
.catchall :
	try_begin_label : label@133
	try_end_label : label@141
	catch_begin_label : label@142
	catch_end_label : label@142
.catchall :
	try_begin_label : label@15
	try_end_label : label@89
	catch_begin_label : label@123
	catch_end_label : label@123
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 1
.function any someSimilarGrammars2.#*#d(any a0, any a1, any a2) {
	createobjectwithbuffer 0x0, someSimilarGrammars2_4618 # line: 17           # column: 0
	return                                   # line: 18           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 72
.function any someSimilarGrammars2.func_main_0(any a0, any a1, any a2) {
	ldai 0x4                                 # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldai 0x3                                 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	ldai 0x2                                 # line: 18446744073709551615           # column: 0
	sta v2                                   # line: 18446744073709551615           # column: 0
	ldai 0x1                                 # line: 18446744073709551615           # column: 0
	sta v3                                   # line: 18446744073709551615           # column: 0
	definefunc 0x0, someSimilarGrammars2.#*#d, 0x0 # line: 18446744073709551615           # column: 0
	callarg0 0x1                             # line: 20           # column: 0
	sta v4                                   # line: 20           # column: 0
	ldobjbyname 0x3, Propx1                  # line: 20           # column: 0
	sta v5                                   # line: 20           # column: 0
	lda v4                                   # line: 20           # column: 0
	ldobjbyname 0x5, Propy1                  # line: 20           # column: 0
	sta v4                                   # line: 20           # column: 0
	tryldglobalbyname 0x7, print             # line: 21           # column: 0
	sta v6                                   # line: 21           # column: 0
	lda v3                                   # line: 21           # column: 0
	stricteq 0x8, v5                         # line: 21           # column: 0
	sta v5                                   # line: 21           # column: 0
	lda.str success                          # line: 21           # column: 0
	sta v7                                   # line: 21           # column: 0
	lda v6                                   # line: 21           # column: 0
	callargs2 0x9, v5, v7                    # line: 21           # column: 0
	tryldglobalbyname 0xb, print             # line: 22           # column: 0
	sta v5                                   # line: 22           # column: 0
	lda v2                                   # line: 22           # column: 0
	stricteq 0xc, v4                         # line: 22           # column: 0
	sta v4                                   # line: 22           # column: 0
	lda.str success                          # line: 22           # column: 0
	sta v6                                   # line: 22           # column: 0
	lda v5                                   # line: 22           # column: 0
	callargs2 0xd, v4, v6                    # line: 22           # column: 0
	createobjectwithbuffer 0xf, someSimilarGrammars2_4642 # line: 27           # column: 0
	sta v4                                   # line: 27           # column: 0
	createobjectwithbuffer 0x10, someSimilarGrammars2_4663 # line: 27           # column: 0
	definepropertybyname 0x11, Obj, v4       # line: 27           # column: 0
	lda v4                                   # line: 27           # column: 0
	ldobjbyname 0x13, Propx2                 # line: 27           # column: 0
	sta v5                                   # line: 27           # column: 0
	lda v4                                   # line: 27           # column: 0
	ldobjbyname 0x15, Obj                    # line: 27           # column: 0
	sta v4                                   # line: 27           # column: 0
	ldobjbyname 0x17, Propy3                 # line: 27           # column: 0
	sta v6                                   # line: 27           # column: 0
	lda v4                                   # line: 27           # column: 0
	ldobjbyname 0x19, Propy4                 # line: 27           # column: 0
	sta v4                                   # line: 27           # column: 0
	tryldglobalbyname 0x1b, print            # line: 28           # column: 0
	sta v7                                   # line: 28           # column: 0
	lda v2                                   # line: 28           # column: 0
	stricteq 0x1c, v5                        # line: 28           # column: 0
	sta v5                                   # line: 28           # column: 0
	lda.str success                          # line: 28           # column: 0
	sta v8                                   # line: 28           # column: 0
	lda v7                                   # line: 28           # column: 0
	callargs2 0x1d, v5, v8                   # line: 28           # column: 0
	tryldglobalbyname 0x1f, print            # line: 29           # column: 0
	sta v5                                   # line: 29           # column: 0
	lda v1                                   # line: 29           # column: 0
	stricteq 0x20, v6                        # line: 29           # column: 0
	sta v6                                   # line: 29           # column: 0
	lda.str success                          # line: 29           # column: 0
	sta v7                                   # line: 29           # column: 0
	lda v5                                   # line: 29           # column: 0
	callargs2 0x21, v6, v7                   # line: 29           # column: 0
	tryldglobalbyname 0x23, print            # line: 30           # column: 0
	sta v5                                   # line: 30           # column: 0
	lda v0                                   # line: 30           # column: 0
	stricteq 0x24, v4                        # line: 30           # column: 0
	sta v4                                   # line: 30           # column: 0
	lda.str success                          # line: 30           # column: 0
	sta v6                                   # line: 30           # column: 0
	lda v5                                   # line: 30           # column: 0
	callargs2 0x25, v4, v6                   # line: 30           # column: 0
	createobjectwithbuffer 0x27, someSimilarGrammars2_4687 # line: 33           # column: 0
	sta v4                                   # line: 33           # column: 0
	ldnull                                   # line: 33           # column: 0
	strictnoteq 0x28, v4                     # line: 33           # column: 0
	jeqz label@84                            # line: 33           # column: 0
	ldundefined                              # line: 33           # column: 0
	strictnoteq 0x29, v4                     # line: 33           # column: 0
	jnez label@85                            # line: 33           # column: 0
	label@84: throw.patternnoncoercible      # line: 33           # column: 0
	label@85: ldundefined                    # line: 33           # column: 0
	sta v5                                   # line: 33           # column: 0
	mov v9, v4                               # line: 33           # column: 0
	mov v10, v5                              # line: 33           # column: 0
	createobjectwithexcludedkeys 0x0, v9, v10 # line: 33           # column: 0
	sta v4                                   # line: 33           # column: 0
	tryldglobalbyname 0x2a, print            # line: 33           # column: 0
	sta v5                                   # line: 33           # column: 0
	lda v4                                   # line: 34           # column: 0
	ldobjbyname 0x2b, prop1                  # line: 34           # column: 0
	sta v6                                   # line: 34           # column: 0
	lda v3                                   # line: 34           # column: 0
	stricteq 0x2d, v6                        # line: 34           # column: 0
	sta v3                                   # line: 34           # column: 0
	lda.str success                          # line: 34           # column: 0
	sta v6                                   # line: 34           # column: 0
	lda v5                                   # line: 34           # column: 0
	callargs2 0x2e, v3, v6                   # line: 34           # column: 0
	tryldglobalbyname 0x30, print            # line: 34           # column: 0
	sta v3                                   # line: 34           # column: 0
	lda v4                                   # line: 35           # column: 0
	ldobjbyname 0x31, prop2                  # line: 35           # column: 0
	sta v4                                   # line: 35           # column: 0
	lda v2                                   # line: 35           # column: 0
	stricteq 0x33, v4                        # line: 35           # column: 0
	sta v2                                   # line: 35           # column: 0
	lda.str success                          # line: 35           # column: 0
	sta v4                                   # line: 35           # column: 0
	lda v3                                   # line: 35           # column: 0
	callargs2 0x34, v2, v4                   # line: 35           # column: 0
	createobjectwithbuffer 0x36, someSimilarGrammars2_4711 # line: 35           # column: 0
	sta v2                                   # line: 35           # column: 0
	ldnull                                   # line: 37           # column: 0
	strictnoteq 0x37, v2                     # line: 37           # column: 0
	jeqz label@123                           # line: 37           # column: 0
	ldundefined                              # line: 37           # column: 0
	strictnoteq 0x38, v2                     # line: 37           # column: 0
	jnez label@124                           # line: 37           # column: 0
	label@123: throw.patternnoncoercible     # line: 37           # column: 0
	label@124: lda.str prop3                 # line: 37           # column: 0
	sta v3                                   # line: 37           # column: 0
	lda v2                                   # line: 37           # column: 0
	ldobjbyname 0x39, prop3                  # line: 37           # column: 0
	sta v4                                   # line: 37           # column: 0
	mov v9, v2                               # line: 37           # column: 0
	mov v10, v3                              # line: 37           # column: 0
	createobjectwithexcludedkeys 0x0, v9, v10 # line: 37           # column: 0
	sta v2                                   # line: 37           # column: 0
	tryldglobalbyname 0x3b, print            # line: 37           # column: 0
	sta v3                                   # line: 37           # column: 0
	lda v1                                   # line: 38           # column: 0
	stricteq 0x3c, v4                        # line: 38           # column: 0
	sta v1                                   # line: 38           # column: 0
	lda.str success                          # line: 38           # column: 0
	sta v4                                   # line: 38           # column: 0
	lda v3                                   # line: 38           # column: 0
	callargs2 0x3d, v1, v4                   # line: 38           # column: 0
	tryldglobalbyname 0x3f, print            # line: 38           # column: 0
	sta v1                                   # line: 38           # column: 0
	lda v2                                   # line: 39           # column: 0
	ldobjbyname 0x40, prop4                  # line: 39           # column: 0
	sta v2                                   # line: 39           # column: 0
	lda v0                                   # line: 39           # column: 0
	stricteq 0x42, v2                        # line: 39           # column: 0
	sta v0                                   # line: 39           # column: 0
	lda.str success                          # line: 39           # column: 0
	sta v2                                   # line: 39           # column: 0
	lda v1                                   # line: 39           # column: 0
	callargs2 0x43, v0, v2                   # line: 39           # column: 0
	lda.str hello                            # line: 39           # column: 0
	sta v0                                   # line: 39           # column: 0
	createobjectwithbuffer 0x45, someSimilarGrammars2_4735 # line: 39           # column: 0
	sta v1                                   # line: 39           # column: 0
	lda v0                                   # line: 41           # column: 0
	definepropertybyname 0x46, name11, v1    # line: 41           # column: 0
	ldundefined                              # line: 42           # column: 0
	returnundefined                          # line: 42           # column: 0
}

# ====================
# STRING
./exportsApi1_toplevel
./exportsApi3_toplevel
./exportsApi4_toplevel
AbortError
AbortError1
ERROR_OUT_OF_RANGE
ERROR_OUT_OF_RANGE1
ERR_INVALID_ARG_TYPE
ERR_INVALID_ARG_TYPE1
ERR_MISSING_ARGS
ERR_MISSING_ARGS1
Error
Math
Obj
Propx1
Propx2
Propy1
Propy2
Propy3
Propy4
addTest
age2
akria
akria2
akria3
akria4
akria5
areaTest
circumferenceTest
codes1
codes2
e
exports
exportsApi1_toplevel.#~@0=#AbortError1
exportsApi3_toplevel.#*#addTest
exportsApi3_toplevel.#*#subtractTest
exportsApi4_toplevel.#*#
exportsApi4_toplevel.#*#^1
f
g
h
hello
i
j
k
l
m
module
n
name
name11
name2
newAge
newName
o
p
print
prop1
prop2
prop3
prop4
prototype
q
r
require
requireApi_worker_threads.#*#a
requireApi_worker_threads.#*#b
someSimilarGrammars.#*#c
someSimilarGrammars.#*#d
someSimilarGrammars2.#*#d
subtractTest
success
worker_threads
