/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.language ECMAScript

# ====================
# LITERALS

a_1149 { 2 [ tag_value:5, string:"PersonTest1", ]}

a_1158 { 14 [ i32:1, string:"path", i32:1, string:"e", string:"default", method_affiliate:0, i32:0, i32:2, string:"b", string:"b", string:"a", string:"a", i32:0, i32:0, ]}

a_1216 { 8 [ tag_value:5, string:"d", tag_value:6, method:a.#~@0>#d, tag_value:9, method_affiliate:1, tag_value:2, i32:1, ]}

b_1238 

b_1242 { 17 [ i32:2, string:"./a", string:"path", i32:3, string:"b", string:"b", method_affiliate:0, string:"a", string:"a", method_affiliate:0, string:"e", string:"default", method_affiliate:1, i32:0, i32:0, i32:0, i32:0, ]}



# ====================
# RECORDS

.record _ESConcurrentModuleRequestsAnnotation {
}
.record.source_file 

.record _ESSlotNumberAnnotation {
}
.record.source_file 

.record a {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames a_1149
	u32 moduleRecordIdx a_1158
}
.record.source_file 

.record b {
	u8 pkgName@entry 0
	u8 isCommonjs 0
	u8 hasTopLevelAwait 0
	u8 isSharedModule 0
	u32 scopeNames b_1238
	u32 moduleRecordIdx b_1242
}
.record.source_file 


# ====================
# METHODS

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 1
.function any a.#*#a(any a0, any a1, any a2, any a3, any a4) {
	lda a4                                   # line: 19           # column: 0
	add2 0x0, a3                             # line: 19           # column: 0
	return                                   # line: 20           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 3
.function any a.#~@0=#b(any a0, any a1, any a2) {
	createemptyarray 0x0                     # line: 37           # column: 0
	stobjbyname 0x1, c, a2                   # line: 37           # column: 0
	lda a2                                   # line: 38           # column: 0
	return                                   # line: 38           # column: 0
}

.function_kind FunctionKind::NONE
 _ESSlotNumberAnnotation
 SlotNumber 6
.function any a.#~@0>#d(any a0, any a1, any a2, any a3) {
	lda a2                                   # line: 42           # column: 0
	ldobjbyname 0x0, c                       # line: 42           # column: 0
	sta v0                                   # line: 42           # column: 0
	ldobjbyname 0x2, m                       # line: 42           # column: 0
	callthis1 0x4, v0, a3                    # line: 42           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 43           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 13
.function any a.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, a.#*#a, 0x2              # line: 18446744073709551615           # column: 0
	stmodulevar 0x1                          # line: 18446744073709551615           # column: 0
	ldhole                                   # line: 30           # column: 0
	sta v0                                   # line: 30           # column: 0
	defineclasswithbuffer 0x1, a.#~@0=#b, a_1216, 0x0, v0 # line: 30           # column: 0
	sta v0                                   # line: 30           # column: 0
	ldobjbyname 0x2, prototype               # line: 30           # column: 0
	lda v0                                   # line: 30           # column: 0
	stmodulevar 0x0                          # line: 30           # column: 0
	ldexternalmodulevar 0x0                  # line: 46           # column: 0
	sta v0                                   # line: 46           # column: 0
	throw.undefinedifholewithname e          # line: 46           # column: 0
	lda v0                                   # line: 46           # column: 0
	ldobjbyname 0x4, l                       # line: 46           # column: 0
	sta v1                                   # line: 46           # column: 0
	tryldglobalbyname 0x6, __filename        # line: 46           # column: 0
	sta v2                                   # line: 46           # column: 0
	lda v1                                   # line: 46           # column: 0
	callthis1 0x7, v0, v2                    # line: 46           # column: 0
	sta v0                                   # line: 46           # column: 0
	tryldglobalbyname 0x9, print             # line: 47           # column: 0
	sta v1                                   # line: 47           # column: 0
	lda.str import_dir.ts                    # line: 47           # column: 0
	strictnoteq 0xa, v0                      # line: 47           # column: 0
	sta v0                                   # line: 47           # column: 0
	lda.str success                          # line: 47           # column: 0
	sta v2                                   # line: 47           # column: 0
	lda v1                                   # line: 47           # column: 0
	callargs2 0xb, v0, v2                    # line: 47           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 32
.function any b.#%#f(any a0, any a1, any a2, any a3) {
	lda.str g                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	ldai 0x0                                 # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x0, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str g                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x2, a3, v1                 # line: 18446744073709551615           # column: 0
	lda.str h                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	lda a3                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x4, g                       # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	ldai 0x1                                 # line: 18446744073709551615           # column: 0
	sta v2                                   # line: 18446744073709551615           # column: 0
	lda v2                                   # line: 18446744073709551615           # column: 0
	add2 0x6, v1                             # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x7, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str h                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x9, a3, v1                 # line: 18446744073709551615           # column: 0
	lda.str i                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	lda a3                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0xb, h                       # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v2                                   # line: 18446744073709551615           # column: 0
	add2 0xd, v1                             # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0xe, a3, v0                 # line: 18446744073709551615           # column: 0
	lda.str i                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x10, a3, v1                # line: 18446744073709551615           # column: 0
	lda.str j                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	lda a3                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x12, i                      # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v2                                   # line: 18446744073709551615           # column: 0
	add2 0x14, v1                            # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x15, a3, v0                # line: 18446744073709551615           # column: 0
	lda.str j                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x17, a3, v1                # line: 18446744073709551615           # column: 0
	lda.str k                                # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	lda a3                                   # line: 18446744073709551615           # column: 0
	ldobjbyname 0x19, j                      # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	lda v2                                   # line: 18446744073709551615           # column: 0
	add2 0x1b, v1                            # line: 18446744073709551615           # column: 0
	sta v1                                   # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x1c, a3, v0                # line: 18446744073709551615           # column: 0
	lda.str k                                # line: 18446744073709551615           # column: 0
	stobjbyvalue 0x1e, a3, v1                # line: 18446744073709551615           # column: 0
	ldundefined                              # line: 18446744073709551615           # column: 0
	returnundefined                          # line: 18446744073709551615           # column: 0
}

.function_kind FunctionKind::FUNCTION
 _ESSlotNumberAnnotation
 SlotNumber 38
.function any b.func_main_0(any a0, any a1, any a2) {
	ldundefined                              # line: 18446744073709551615           # column: 0
	sta v0                                   # line: 18446744073709551615           # column: 0
	tryldglobalbyname 0x0, print             # line: 20           # column: 0
	sta v1                                   # line: 20           # column: 0
	ldexternalmodulevar 0x1                  # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	throw.undefinedifholewithname a          # line: 20           # column: 0
	ldai 0x1                                 # line: 20           # column: 0
	sta v3                                   # line: 20           # column: 0
	ldai 0x2                                 # line: 20           # column: 0
	sta v4                                   # line: 20           # column: 0
	lda v2                                   # line: 20           # column: 0
	callargs2 0x1, v3, v4                    # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	ldai 0x3                                 # line: 20           # column: 0
	stricteq 0x3, v2                         # line: 20           # column: 0
	sta v2                                   # line: 20           # column: 0
	lda.str success                          # line: 20           # column: 0
	sta v3                                   # line: 20           # column: 0
	lda v1                                   # line: 20           # column: 0
	callargs2 0x4, v2, v3                    # line: 20           # column: 0
	ldexternalmodulevar 0x0                  # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	throw.undefinedifholewithname b          # line: 21           # column: 0
	mov v5, v1                               # line: 21           # column: 0
	newobjrange 0x6, 0x1, v5                 # line: 21           # column: 0
	sta v1                                   # line: 21           # column: 0
	definefunc 0x8, b.#%#f, 0x1              # line: 21           # column: 0
	sta v2                                   # line: 21           # column: 0
	lda v0                                   # line: 21           # column: 0
	callruntime.istrue 0x9                   # line: 21           # column: 0
	jnez label@36                            # line: 21           # column: 0
	createemptyobject                        # line: 21           # column: 0
	sta v0                                   # line: 21           # column: 0
	mov v3, v0                               # line: 21           # column: 0
	jmp label@37                             # line: 21           # column: 0
	label@36: mov v3, v0                     # line: 21           # column: 0
	label@37: lda v2                         # line: 21           # column: 0
	callarg1 0xb, v3                         # line: 21           # column: 0
	lda v1                                   # line: 31           # column: 0
	ldobjbyname 0xd, d                       # line: 31           # column: 0
	sta v2                                   # line: 31           # column: 0
	ldai 0x0                                 # line: 31           # column: 0
	ldobjbyvalue 0xf, v0                     # line: 31           # column: 0
	sta v0                                   # line: 31           # column: 0
	lda v2                                   # line: 31           # column: 0
	callthis1 0x11, v1, v0                   # line: 31           # column: 0
	tryldglobalbyname 0x13, print            # line: 31           # column: 0
	sta v0                                   # line: 31           # column: 0
	lda v1                                   # line: 32           # column: 0
	ldobjbyname 0x14, c                      # line: 32           # column: 0
	sta v1                                   # line: 32           # column: 0
	ldobjbyname 0x16, n                      # line: 32           # column: 0
	callthis0 0x18, v1                       # line: 32           # column: 0
	sta v1                                   # line: 32           # column: 0
	lda.str MEAT                             # line: 32           # column: 0
	stricteq 0x1a, v1                        # line: 32           # column: 0
	sta v1                                   # line: 32           # column: 0
	lda.str success                          # line: 32           # column: 0
	sta v2                                   # line: 32           # column: 0
	lda v0                                   # line: 32           # column: 0
	callargs2 0x1b, v1, v2                   # line: 32           # column: 0
	ldexternalmodulevar 0x2                  # line: 32           # column: 0
	sta v0                                   # line: 32           # column: 0
	throw.undefinedifholewithname e          # line: 32           # column: 0
	lda v0                                   # line: 34           # column: 0
	ldobjbyname 0x1d, l                      # line: 34           # column: 0
	sta v1                                   # line: 34           # column: 0
	tryldglobalbyname 0x1f, __filename       # line: 34           # column: 0
	sta v2                                   # line: 34           # column: 0
	lda v1                                   # line: 34           # column: 0
	callthis1 0x20, v0, v2                   # line: 34           # column: 0
	sta v0                                   # line: 34           # column: 0
	tryldglobalbyname 0x22, print            # line: 34           # column: 0
	sta v1                                   # line: 34           # column: 0
	lda.str import_dir.ts                    # line: 35           # column: 0
	strictnoteq 0x23, v0                     # line: 35           # column: 0
	sta v0                                   # line: 35           # column: 0
	lda.str success                          # line: 35           # column: 0
	sta v2                                   # line: 35           # column: 0
	lda v1                                   # line: 35           # column: 0
	callargs2 0x24, v0, v2                   # line: 35           # column: 0
	ldundefined                              # line: 35           # column: 0
	returnundefined                          # line: 35           # column: 0
}

# ====================
# STRING
MEAT
__filename
a
a.#*#a
a.#~@0=#b
b
b.#%#f
c
d
e
g
h
i
import_dir.ts
j
k
l
m
n
print
prototype
success
