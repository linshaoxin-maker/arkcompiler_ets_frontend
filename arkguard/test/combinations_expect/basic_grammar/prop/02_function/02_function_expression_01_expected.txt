import assert from 'assert';
var v1 = function f() {
    let c = 'test';
    return c;
};
v1();
assert(v1() === 'test');
var v2 = {
    c: function () {
        return v2;
    },
    d: function f() {
        return v2.c;
    }
};
v2.c();
v2.d();
assert(v2.c() === v2);
assert(v2.d()() === v2);
const { g: B = function () {
    let b = 'binding';
    return b;
}, h: C = function g() {
    let a = 'binding';
    return a;
} } = { g: undefined, h: () => {
        return 'test';
    } };
B();
C();
assert(B() == 'binding');
assert(C() === 'test');
var x = function g() {
    return g;
};
var y = function g() {
    return y;
};
x();
y()();
assert(x() === x);
assert(y()() === y);
var z = function f(d: any, ...e: any): any {
    return arguments;
};
z(1, 2, 3);
assert(z(1, 2, 3)['0'] === 1);
assert(z(1, 2, 3)['1'] === 2);
assert(z(1, 2, 3)['2'] === 3);
