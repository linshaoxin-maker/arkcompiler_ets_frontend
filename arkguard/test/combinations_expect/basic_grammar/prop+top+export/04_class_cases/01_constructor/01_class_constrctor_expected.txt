import assert from "assert";
// 单个构造器
class g {
    m: number;
    constructor(u: number) {
        this.m = u;
    }
    p() {
    }
}
let h = new g(1);
assert(h.m === 1);
// 多个构造器
class i {
    q: string;
    constructor(t: 'hello');
    constructor(s: 'bye');
    constructor(r: string);
    constructor(q: any) {
        this.q = q;
    }
    t() {
    }
}
let j = new i('bee');
assert(j.q === 'bee');
// class声明 - 两个构造器不连续
declare namespace k {
    class o {
        constructor();
        u: string;
        constructor(p: number);
    }
}
declare class l {
    constructor();
    v: string;
    constructor(m: number);
}
