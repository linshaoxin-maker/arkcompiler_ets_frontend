import assert from "assert";
// 名称访问
{
    let p = 1;
    let q = 2;
    let r;
    r = p + q;
    assert(r === 3);
}
// 外部名称访问
let g = 1;
{
    let n = 2;
    let o;
    o = n + g;
    assert(o === 3);
}
// 属性访问
{
    class l {
        i: number = 1;
    }
    let m = new l();
    m.i = 2;
    assert(m.i === 2);
}
// var变量
var x = 1;
{
    var x = 2;
}
assert(x === 2);
// 函数
{
    k();
    function k() {
        return 'foo';
    }
    assert(k() === 'foo');
}
// assert(foo()); undefined, 检查异常
// 块语句封装数据
let h;
{
    const i = 2;
    const j = 10;
    h = {
        width: i,
        length: j,
        j: i * j,
        k: (i + j) * 2
    };
}
assert(h.j === 20);
assert(h.k === 24);
