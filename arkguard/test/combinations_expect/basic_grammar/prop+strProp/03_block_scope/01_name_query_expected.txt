import assert from "assert";
// 名称访问
{
    let h = 1;
    let i = 2;
    let j;
    j = h + i;
    assert(j === 3);
}
// 外部名称访问
let out_var1 = 1;
{
    let f = 2;
    let g;
    g = f + out_var1;
    assert(g === 3);
}
// 属性访问
{
    class d {
        g: number = 1;
    }
    let e = new d();
    e.g = 2;
    assert(e.g === 2);
}
// var变量
var x = 1;
{
    var x = 2;
}
assert(x === 2);
// 函数
{
    c();
    function c() {
        return 'foo';
    }
    assert(c() === 'foo');
}
// assert(foo()); undefined, 检查异常
// 块语句封装数据
let rectangle;
{
    const a = 2;
    const b = 10;
    rectangle = {
        width: a,
        length: b,
        h: a * b,
        i: (a + b) * 2
    };
}
assert(rectangle.h === 20);
assert(rectangle.i === 24);
