{
    "copyright": [
        "Copyright (c) 2022-2023 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "nodes": [
        {
            "line": 16,
            "column": 1,
            "problem": "ImportFromPath",
            "autofixable": false
        },
        {
            "line": 22,
            "column": 3,
            "problem": "WithStatement",
            "autofixable": false
        },
        {
            "line": 23,
            "column": 11,
            "problem": "AnyType",
            "autofixable": false
        },
        {
            "line": 43,
            "column": 3,
            "problem": "NonDeclarationInNamespace",
            "autofixable": false
        },
        {
            "line": 44,
            "column": 3,
            "problem": "NonDeclarationInNamespace",
            "autofixable": false
        },
        {
            "line": 64,
            "column": 11,
            "problem": "NamespaceAsObject",
            "autofixable": false
        },
        {
            "line": 67,
            "column": 15,
            "problem": "NamespaceAsObject",
            "autofixable": false
        },
        {
            "line": 70,
            "column": 18,
            "problem": "TypeQuery",
            "autofixable": false
        },
        {
            "line": 73,
            "column": 6,
            "problem": "NamespaceAsObject",
            "autofixable": false
        },
        {
            "line": 75,
            "column": 20,
            "problem": "TypeQuery",
            "autofixable": false
        },
        {
            "line": 78,
            "column": 9,
            "problem": "NamespaceAsObject",
            "autofixable": false
        },
        {
            "line": 80,
            "column": 1,
            "problem": "ImportAfterStatement",
            "autofixable": false
        },
        {
            "line": 80,
            "column": 10,
            "problem": "DefaultImport",
            "autofixable": true,
            "autofix": [
                {
                    "start": 1637,
                    "end": 1655,
                    "replacementText": "def"
                }
            ]
        },
        {
            "line": 89,
            "column": 1,
            "problem": "DeclWithDuplicateName",
            "autofixable": false
        },
        {
            "line": 92,
            "column": 1,
            "problem": "ImportAfterStatement",
            "autofixable": false
        },
        {
            "line": 92,
            "column": 8,
            "problem": "TypeOnlyImport",
            "autofixable": true,
            "autofix": [
                {
                    "start": 1923,
                    "end": 1947,
                    "replacementText": "{ APIResponseType }"
                }
            ]
        },
        {
            "line": 93,
            "column": 1,
            "problem": "ImportAfterStatement",
            "autofixable": false
        },
        {
            "line": 93,
            "column": 8,
            "problem": "TypeOnlyImport",
            "autofixable": true,
            "autofix": [
                {
                    "start": 1969,
                    "end": 1980,
                    "replacementText": "* as P"
                }
            ]
        },
        {
            "line": 96,
            "column": 1,
            "problem": "TypeOnlyExport",
            "autofixable": true,
            "autofix": [
                {
                    "start": 2014,
                    "end": 2045,
                    "replacementText": "export { TypeA as TypeB };"
                }
            ]
        },
        {
            "line": 104,
            "column": 1,
            "problem": "ExportAssignment",
            "autofixable": false
        },
        {
            "line": 106,
            "column": 1,
            "problem": "ImportAssignment",
            "autofixable": false
        },
        {
            "line": 107,
            "column": 1,
            "problem": "ImportAssignment",
            "autofixable": false
        },
        {
            "line": 109,
            "column": 5,
            "problem": "AnyType",
            "autofixable": false
        },
        {
            "line": 109,
            "column": 5,
            "problem": "ImportAssignment",
            "autofixable": false
        },
        {
            "line": 110,
            "column": 7,
            "problem": "AnyType",
            "autofixable": false
        },
        {
            "line": 110,
            "column": 7,
            "problem": "ImportAssignment",
            "autofixable": false
        }
    ]
}