/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@Sendable
class SendableClassA<T> {
    public var1: number = 1;
    public var2: T;
    constructor(p: T) {
        this.var2 = p;
    }
}

class NoneSendableClassA {
    public var1: number = 1;
    public var2: string = '1';
}

let A1: SendableClassA<NoneSendableClassA> = new SendableClassA<NoneSendableClassA>(new NoneSendableClassA()); // ERROR

@Sendable
class SendableClassC<T> {
    public var1: number = 1;
    public var2: T;
    constructor(p: T) {
        this.var2 = p;
    }
}

@Sendable
class SendableClassD {
    public var1: number = 1;
    public var2: string = '1';
}

let u1: NoneSendableClassA | SendableClassC<SendableClassD> = new SendableClassC(new SendableClassD());
let u2: NoneSendableClassA | SendableClassC<NoneSendableClassA> = new SendableClassC(new NoneSendableClassA()); // ERROR

type unionA<T> = string | T;
let u3: unionA<NoneSendableClassA> = new NoneSendableClassA();