{"version":3,"file":"LinterCLI.js","names":["_TypeScriptLinter","require","_CommandLineParser","_Logger","fs","_interopRequireWildcard","os","readline","path","_LinterRunner","_Compiler","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_newArrowCheck","TypeError","run","commandLineArgs","process","argv","slice","length","Logger","info","exit","cmdOptions","parseCommandLine","testMode","TypeScriptLinter","initGlobals","ideMode","result","lint","compileLintOptions","errorNodes","runIDEMode","getTempFileName","join","tmpdir","Math","floor","random","toString","_this","tmpFileName","writeStream","createWriteStream","flags","rl","createInterface","input","stdin","output","terminal","on","line","appendFileSync","bind","once","_this2","close","inputFiles","parsedConfigFile","fileNames","push","problems","Array","from","problemsInfos","values","jsonMessage","map","x","column","start","end","type","suggest","rule","severity","autofix","JSON","stringify","error","unlinkSync"],"sources":["../../src/LinterCLI.ts"],"sourcesContent":["/*\n * Copyright (c) 2022-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TypeScriptLinter } from '../lib/TypeScriptLinter';\nimport { parseCommandLine } from './CommandLineParser';\nimport { Logger } from '../lib/Logger';\nimport * as fs from 'node:fs';\nimport * as os from 'node:os';\nimport * as readline from 'node:readline';\nimport * as path from 'node:path';\nimport type { CommandLineOptions } from '../lib/CommandLineOptions';\nimport { lint } from '../lib/LinterRunner';\nimport { compileLintOptions } from './Compiler';\n\nexport function run(): void {\n  const commandLineArgs = process.argv.slice(2);\n  if (commandLineArgs.length === 0) {\n    Logger.info('Command line error: no arguments');\n    process.exit(-1);\n  }\n\n  const cmdOptions = parseCommandLine(commandLineArgs);\n\n  if (cmdOptions.testMode) {\n    TypeScriptLinter.testMode = true;\n  }\n\n  TypeScriptLinter.initGlobals();\n\n  if (!cmdOptions.ideMode) {\n    const result = lint(compileLintOptions(cmdOptions));\n    process.exit(result.errorNodes > 0 ? 1 : 0);\n  } else {\n    runIDEMode(cmdOptions);\n  }\n}\n\nfunction getTempFileName(): string {\n  return path.join(os.tmpdir(), Math.floor(Math.random() * 10000000).toString() + '_linter_tmp_file.ts');\n}\n\nfunction runIDEMode(cmdOptions: CommandLineOptions): void {\n  TypeScriptLinter.ideMode = true;\n  const tmpFileName = getTempFileName();\n  // read data from stdin\n  const writeStream = fs.createWriteStream(tmpFileName, { flags: 'w' });\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: writeStream,\n    terminal: false\n  });\n\n  rl.on('line', (line: string) => {\n    fs.appendFileSync(tmpFileName, line + '\\n');\n  });\n  rl.once('close', () => {\n    // end of input\n    writeStream.close();\n    cmdOptions.inputFiles = [tmpFileName];\n    if (cmdOptions.parsedConfigFile) {\n      cmdOptions.parsedConfigFile.fileNames.push(tmpFileName);\n    }\n    const result = lint(compileLintOptions(cmdOptions));\n    const problems = Array.from(result.problemsInfos.values());\n    if (problems.length === 1) {\n      const jsonMessage = problems[0].map((x) => {\n        return {\n          line: x.line,\n          column: x.column,\n          start: x.start,\n          end: x.end,\n          type: x.type,\n          suggest: x.suggest,\n          rule: x.rule,\n          severity: x.severity,\n          autofix: x.autofix\n        };\n      });\n      Logger.info(`{\"linter messages\":${JSON.stringify(jsonMessage)}}`);\n    } else {\n      Logger.error('Unexpected error: could not lint file');\n    }\n    fs.unlinkSync(tmpFileName);\n  });\n}\n"],"mappings":"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","ignoreList":[]}