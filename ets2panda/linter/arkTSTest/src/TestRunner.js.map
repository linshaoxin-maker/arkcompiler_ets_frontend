{"version":3,"file":"TestRunner.js","names":["_Logger","require","_LoggerImpl","_TypeScriptLinter","_InteropTypescriptLinter","_LinterRunner","_CommandLineParser","fs","_interopRequireWildcard","path","ts","_Compiler","_RunArkTSLinter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_newArrowCheck","TypeError","Logger","init","LoggerImpl","enableUseRtLogic","enableCheckTsFile","checkArkTSRunner","TEST_DIR","TAB","options","readConfigFile","sys","readFile","config","compilerOptions","allPath","assign","emitNodeModulesFiles","importsNotUsedAsValues","ImportsNotUsedAsValues","Preserve","module","ModuleKind","ES2020","moduleResolution","ModuleResolutionKind","NodeJs","noEmit","target","ScriptTarget","ES2021","baseUrl","paths","lib","types","etsLoaderPath","Mode","RESULT_EXT","DEFAULT","AUTOFIX","AUTOFIX_SKIP_EXT","ARGS_CONFIG_EXT","DIFF_EXT","runTests","_this","TypeScriptLinter","ideMode","testMode","InteropTypescriptLinter","hasComparisonFailures","passed","failed","testDirs","getParam","testDir","testFiles","readdirSync","filter","x","trimEnd","endsWith","Extension","Ts","Dts","Tsx","Ets","bind","info","testFile","runTest","process","exit","pathArg","key","argv","includes","replace","split","length","parseArgs","mode","args","join","argsFileName","existsSync","data","readFileSync","toString","JSON","parse","undefined","push","parseCommandLine","compareExpectedAndActual","resultNodes","_this2","expectedResult","diff","resultExt","testResultFileName","expectedResultFile","nodes","exclusive","expectedResultCount","expectedAndActualMatch","error","_this3","initGlobals","currentTestMode","currentInteropTestMode","cmdOptions","result","runLinter","file","start","map","lineAndCharacter","getLineAndCharacterOfPosition","messageText","line","character","column","problem","autofix","suggest","rule","lint","compileLintOptions","fileProblems","problemsInfos","normalize","inputFiles","testResult","writeActualResultFile","rootName","nonStrictCheckParam","allowJS","checkJs","builderProgram","createIncrementalProgramForArkTs","rootNames","cwd","runArkTSLinter","expectedNodes","actualNodes","actual","expect","reportDiff","autofixArraysMatch","expected","end","replacementText","actualResultsDir","mkdirSync","actualResultJSON","stringify","writeFileSync","expectedNode","actualNode"],"sources":["../../src/TestRunner.ts"],"sourcesContent":["/*\n * Copyright (c) 2022-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '../lib/Logger';\nimport { LoggerImpl } from './LoggerImpl';\nLogger.init(new LoggerImpl());\n\nimport { TypeScriptLinter } from '../lib/TypeScriptLinter';\nimport { InteropTypescriptLinter } from '../lib/InteropTypescriptLinter';\nimport { lint } from '../lib/LinterRunner';\nimport { parseCommandLine } from './CommandLineParser';\nimport type { Autofix } from '../lib/autofixes/Autofixer';\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as ts from 'typescript';\nimport type { CommandLineOptions } from '../lib/CommandLineOptions';\nimport { compileLintOptions } from './Compiler';\nimport { runArkTSLinter } from '../sdk/linter_1_1/RunArkTSLinter';\n\nlet enableUseRtLogic = true;\nlet enableCheckTsFile = false;\nlet checkArkTSRunner = false;\nconst TEST_DIR = 'test';\nconst TAB = '    ';\n// initial configuration\nconst options = ts.readConfigFile('./arkTSTest/tsconfig.json', ts.sys.readFile).config.compilerOptions;\nconst allPath = ['*'];\nObject.assign(options, {\n  emitNodeModulesFiles: true,\n  importsNotUsedAsValues: ts.ImportsNotUsedAsValues.Preserve,\n  module: ts.ModuleKind.ES2020,\n  moduleResolution: ts.ModuleResolutionKind.NodeJs,\n  noEmit: true,\n  target: ts.ScriptTarget.ES2021,\n  baseUrl: '/',\n  paths: {\n    '*': allPath\n  },\n  lib: ['lib.es2021.d.ts'],\n  types: [],\n  etsLoaderPath: 'null_sdkPath'\n});\n\ninterface TestNodeInfo {\n  line: number;\n  column: number;\n  problem?: string;\n  autofix?: Autofix[];\n  suggest?: string;\n  rule?: string;\n  exclusive?: string;\n}\n\nenum Mode {\n  DEFAULT,\n  AUTOFIX\n}\n\nconst RESULT_EXT: string[] = [];\nRESULT_EXT[Mode.DEFAULT] = '.json';\nRESULT_EXT[Mode.AUTOFIX] = '.autofix.json';\nconst AUTOFIX_SKIP_EXT = '.autofix.skip';\nconst ARGS_CONFIG_EXT = '.args.json';\nconst DIFF_EXT = '.diff';\n\nfunction runTests(): number {\n\n  /*\n   * Set the IDE mode manually to enable storing information\n   * about found bad nodes and also disable the log output.\n   */\n  TypeScriptLinter.ideMode = true;\n  TypeScriptLinter.testMode = true;\n  InteropTypescriptLinter.ideMode = true;\n  InteropTypescriptLinter.testMode = true;\n\n  let hasComparisonFailures = false;\n  let passed = 0;\n  let failed = 0;\n  const testDirs = getParam();\n  // Get tests from test directory\n  for (const testDir of testDirs) {\n    const testFiles: string[] = fs.readdirSync(testDir).filter((x) => {\n      return (\n        x.trimEnd().endsWith(ts.Extension.Ts) && !x.trimEnd().endsWith(ts.Extension.Dts) ||\n        x.trimEnd().endsWith(ts.Extension.Tsx) ||\n        x.trimEnd().endsWith(ts.Extension.Ets)\n      );\n    });\n    Logger.info(`\\nProcessing \"${testDir}\" directory:\\n`);\n    // Run each test in Default and Autofix mode:\n    for (const testFile of testFiles) {\n      if (runTest(testDir, testFile, Mode.DEFAULT)) {\n        failed++;\n        hasComparisonFailures = true;\n      } else {\n        passed++;\n      }\n      if (!checkArkTSRunner && runTest(testDir, testFile, Mode.AUTOFIX)) {\n        failed++;\n        hasComparisonFailures = true;\n      } else {\n        passed++;\n      }\n    }\n  }\n  Logger.info(`\\nSUMMARY: ${passed + failed} total, ${passed} passed or skipped, ${failed} failed.`);\n  Logger.info(failed > 0 ? '\\nTEST FAILED' : '\\nTEST SUCCESSFUL');\n  process.exit(hasComparisonFailures ? -1 : 0);\n}\n\nfunction getParam(): string[] {\n  let pathArg = null;\n  for (const key of process.argv) {\n    if (key.includes('-P:')) {\n      pathArg = key.replace('-P:', '').split(',');\n    }\n\n    if (key.includes('-SDK')) {\n      enableUseRtLogic = false;\n    }\n\n    if (key.includes('-CheckTs')) {\n      enableCheckTsFile = true;\n    }\n\n    if (key.includes('-CheckArkTsRunner')) {\n      checkArkTSRunner = true;\n    }\n  }\n\n  if (!pathArg?.length) {\n    pathArg = [TEST_DIR];\n  }\n  return pathArg;\n}\n\nfunction parseArgs(testDir: string, testFile: string, mode: Mode): CommandLineOptions {\n  // Configure test parameters and run linter.\n  const args: string[] = [path.join(testDir, testFile)];\n  const argsFileName = path.join(testDir, testFile + ARGS_CONFIG_EXT);\n\n  if (fs.existsSync(argsFileName)) {\n    const data = fs.readFileSync(argsFileName).toString();\n    const args = JSON.parse(data);\n    if (args.testMode !== undefined) {\n      TypeScriptLinter.testMode = args.testMode;\n      InteropTypescriptLinter.testMode = args.testMode;\n    }\n  }\n\n  if (mode === Mode.AUTOFIX) {\n    args.push('--autofix');\n  }\n\n  if (enableUseRtLogic) {\n    args.push('--enableUseRtLogic');\n  }\n\n  return parseCommandLine(args);\n}\n\nfunction compareExpectedAndActual(testDir: string, testFile: string, mode: Mode, resultNodes: TestNodeInfo[]): string {\n  // Read file with expected test result.\n  let expectedResult: { nodes: TestNodeInfo[] };\n  let diff: string = '';\n  const resultExt = RESULT_EXT[mode];\n  const testResultFileName = testFile + resultExt;\n  try {\n    const expectedResultFile = fs.readFileSync(path.join(testDir, testResultFileName)).toString();\n    expectedResult = JSON.parse(expectedResultFile);\n\n    /**\n     * The exclusive field is added to identify whether the use case is exclusive to the RT or SDK\n     * RT means the RT exclusive\n     * SDK means the SDK exclusive\n     * undefined means shared\n     */\n    expectedResult.nodes = expectedResult?.nodes.filter((x) => {\n      return !x?.exclusive || x.exclusive === (enableUseRtLogic ? 'RT' : 'SDK');\n    });\n\n    if (!expectedResult?.nodes || expectedResult.nodes.length !== resultNodes.length) {\n      const expectedResultCount = expectedResult?.nodes ? expectedResult.nodes.length : 0;\n      diff = `Expected count: ${expectedResultCount} vs actual count: ${resultNodes.length}`;\n      Logger.info(`${TAB}${diff}`);\n    } else {\n      diff = expectedAndActualMatch(expectedResult.nodes, resultNodes);\n    }\n\n    if (diff) {\n      Logger.info(`${TAB}Test failed. Expected and actual results differ.`);\n    }\n  } catch (error) {\n    Logger.info(`${TAB}Test failed. ` + error);\n  }\n\n  return diff;\n}\n\nfunction runTest(testDir: string, testFile: string, mode: Mode): boolean {\n  if (mode === Mode.AUTOFIX && fs.existsSync(path.join(testDir, testFile + AUTOFIX_SKIP_EXT))) {\n    Logger.info(`Skipping test ${testFile} (${Mode[mode]} mode)`);\n    return false;\n  }\n  Logger.info(`Running test ${testFile} (${Mode[mode]} mode)`);\n\n  TypeScriptLinter.initGlobals();\n\n  const currentTestMode = TypeScriptLinter.testMode;\n  const currentInteropTestMode = InteropTypescriptLinter.testMode;\n  const cmdOptions = parseArgs(testDir, testFile, mode);\n  let resultNodes: TestNodeInfo[] = [];\n  Logger.info(`checkArkTSRunner===========${checkArkTSRunner}`);\n  if (checkArkTSRunner) {\n    const result: ts.Diagnostic[] = runLinter(testDir, testFile, mode).filter((x) => {\n      return !!x.file && !!x.start;\n    });\n    Logger.info(`result===========${result.length}`);\n    if (!result || result.length === 0) {\n      Logger.info(`return===========${resultNodes.length}`);\n      return true;\n    }\n\n    resultNodes = result.map<TestNodeInfo>((x) => {\n      const lineAndCharacter = x.file?.getLineAndCharacterOfPosition(x.start ? x.start : 0);\n      Logger.info(`start=${x.start}; messageText=${x.messageText}; `);\n      Logger.info(`line=${lineAndCharacter?.line}; column=${!!lineAndCharacter?.character}; `);\n      return {\n        line: !!lineAndCharacter?.line ? lineAndCharacter.line + 1 : 1,\n        column: !!lineAndCharacter?.character ? lineAndCharacter.character + 1 : 1,\n        problem: undefined,\n        autofix: undefined,\n        suggest: undefined,\n        rule: typeof x.messageText === 'string' ? x.messageText : x.messageText.messageText\n      };\n    });\n    Logger.info(`resultNodes===========${resultNodes.length}`);\n  } else {\n    const result = lint(compileLintOptions(cmdOptions, enableCheckTsFile));\n    const fileProblems = result.problemsInfos.get(path.normalize(cmdOptions.inputFiles[0]));\n    if (fileProblems === undefined) {\n      return true;\n    }\n\n    TypeScriptLinter.testMode = currentTestMode;\n    InteropTypescriptLinter.testMode = currentInteropTestMode;\n\n    // Get list of bad nodes from the current run.\n    resultNodes = fileProblems.map<TestNodeInfo>((x) => {\n      Logger.info(`start=${x.start}; messageText=${x.rule}; `);\n      Logger.info(`line=${x.line}; column=${x.column}; `);\n      return {\n        line: x.line,\n        column: x.column,\n        problem: x.problem,\n        autofix: mode === Mode.AUTOFIX ? x.autofix : undefined,\n        suggest: x.suggest,\n        rule: x.rule\n      };\n    });\n  }\n\n  // Read file with expected test result.\n  const testResult = compareExpectedAndActual(testDir, testFile, mode, resultNodes);\n\n  // Write file with actual test results.\n  writeActualResultFile(testDir, testFile, mode, resultNodes, testResult);\n\n  return !!testResult;\n}\n\nfunction runLinter(rootName: string, testFile: string, mode: Mode): ts.Diagnostic[] {\n  const nonStrictCheckParam = {\n    allowJS: true,\n    checkJs: false\n  };\n  Object.assign(options, nonStrictCheckParam);\n  const builderProgram = ts.createIncrementalProgramForArkTs({\n    rootNames: [path.join(process.cwd(), rootName, testFile)],\n    options: options\n  });\n  Logger.info(`builderProgram===========${path.join(process.cwd(), rootName, testFile)}`);\n  Logger.info(`mode===========${mode}`);\n  Logger.info(`mode===========${mode === Mode.AUTOFIX}`);\n  const result = runArkTSLinter(\n    builderProgram,\n    undefined,\n    undefined,\n    undefined,\n    mode === Mode.AUTOFIX,\n    enableUseRtLogic\n  );\n  Logger.info(`runLinter===========${result.length}`);\n  return result;\n}\n\nfunction expectedAndActualMatch(expectedNodes: TestNodeInfo[], actualNodes: TestNodeInfo[]): string {\n  // Compare expected and actual results.\n  for (let i = 0; i < actualNodes.length; i++) {\n    const actual = actualNodes[i];\n    const expect = expectedNodes[i];\n    if (actual.line !== expect.line || actual.column !== expect.column || (!checkArkTSRunner && actual.problem !== expect.problem)) {\n      Logger.info(`reportDiff===========11111`);\n      return reportDiff(expect, actual);\n    }\n    if (!autofixArraysMatch(expect.autofix, actual.autofix)) {\n      Logger.info(`reportDiff===========22222`);\n      return reportDiff(expect, actual);\n    }\n    if (!checkArkTSRunner && expect.suggest && actual.suggest !== expect.suggest) {\n      Logger.info(`reportDiff===========33333`);\n      return reportDiff(expect, actual);\n    }\n    if (expect.rule && actual.rule !== expect.rule) {\n      Logger.info(`reportDiff===========44444`);\n      return reportDiff(expect, actual);\n    }\n  }\n\n  return '';\n}\n\nfunction autofixArraysMatch(expected: Autofix[] | undefined, actual: Autofix[] | undefined): boolean {\n  if (!expected && !actual) {\n    return true;\n  }\n  if (!(expected && actual) || expected.length !== actual.length) {\n    return false;\n  }\n  for (let i = 0; i < actual.length; ++i) {\n    if (\n      actual[i].start !== expected[i].start ||\n      actual[i].end !== expected[i].end ||\n      actual[i].replacementText !== expected[i].replacementText\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction writeActualResultFile(\n  testDir: string,\n  testFile: string,\n  mode: Mode,\n  resultNodes: TestNodeInfo[],\n  diff: string\n): void {\n  const actualResultsDir = path.join(testDir, enableUseRtLogic ? 'results_rt' : 'results_sdk');\n  const resultExt = RESULT_EXT[mode];\n  if (!fs.existsSync(actualResultsDir)) {\n    fs.mkdirSync(actualResultsDir);\n  }\n\n  const actualResultJSON = JSON.stringify({ nodes: resultNodes }, null, 4);\n  fs.writeFileSync(path.join(actualResultsDir, testFile + resultExt), actualResultJSON);\n\n  if (diff) {\n    fs.writeFileSync(path.join(actualResultsDir, testFile + resultExt + DIFF_EXT), diff);\n  }\n}\n\nfunction reportDiff(expected: TestNodeInfo, actual: TestNodeInfo): string {\n  const expectedNode = JSON.stringify({ nodes: [expected] }, null, 4);\n  const actualNode = JSON.stringify({ nodes: [actual] }, null, 4);\n\n  const diff = `Expected:\n${expectedNode}\nActual:\n${actualNode}`;\n\n  Logger.info(diff);\n  return diff;\n}\n\nrunTests();\n"],"mappings":"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","ignoreList":[]}