{"version":3,"file":"IsStruct.js","names":["_TypeScriptLinterConfig","require","isStruct","symbol","declarations","decl","isStructDeclaration","isStructDeclarationKind","kind","LinterConfig","tsSyntaxKindNames","node"],"sources":["../../../../lib/utils/functions/IsStruct.ts"],"sourcesContent":["/*\n * Copyright (c) 2022-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as ts from 'typescript';\nimport { LinterConfig } from '../../TypeScriptLinterConfig';\n\nexport function isStruct(symbol: ts.Symbol): boolean {\n  if (!symbol.declarations) {\n    return false;\n  }\n  for (const decl of symbol.declarations) {\n    if (isStructDeclaration(decl)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isStructDeclarationKind(kind: ts.SyntaxKind): boolean {\n  return LinterConfig.tsSyntaxKindNames[kind] === 'StructDeclaration';\n}\n\nexport function isStructDeclaration(node: ts.Node): boolean {\n  return isStructDeclarationKind(node.kind);\n}\n"],"mappings":";;;;;;;;AAgBA,IAAAA,uBAAA,GAAAC,OAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKO,SAASC,QAAQA,CAACC,MAAiB,EAAW;EACnD,IAAI,CAACA,MAAM,CAACC,YAAY,EAAE;IACxB,OAAO,KAAK;EACd;EACA,KAAK,MAAMC,IAAI,IAAIF,MAAM,CAACC,YAAY,EAAE;IACtC,IAAIE,mBAAmB,CAACD,IAAI,CAAC,EAAE;MAC7B,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd;AAEO,SAASE,uBAAuBA,CAACC,IAAmB,EAAW;EACpE,OAAOC,oCAAY,CAACC,iBAAiB,CAACF,IAAI,CAAC,KAAK,mBAAmB;AACrE;AAEO,SAASF,mBAAmBA,CAACK,IAAa,EAAW;EAC1D,OAAOJ,uBAAuB,CAACI,IAAI,CAACH,IAAI,CAAC;AAC3C","ignoreList":[]}