{"version":3,"file":"SupportedStdCallAPI.js","names":["ts","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","SupportedStdCallApiChecker","constructor","tsUtils","typeChecker","Map","checkObjectAssignCall","stdObjectEntry","isSupportedStdCallAPI","callExpr","parentSymName","symName","entry","StdCallApi","stdCallApiCheckCb","typeArguments","arguments","length","targetArgType","getTypeAtLocation","isValidObjectAssignRecordType","contextualType","getContextualType","type","isStdRecordType","aliasTypeArguments","typeArg","getFlags","TypeFlags","StringLiteral","exports"],"sources":["../../../../lib/utils/functions/SupportedStdCallAPI.ts"],"sourcesContent":["/*\n * Copyright (c) 2023-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as ts from 'typescript';\nimport type { TsUtils } from '../TsUtils';\n\ntype CheckStdCallApi = (callExpr: ts.CallExpression) => boolean;\ntype StdCallApiEntry = Map<string, CheckStdCallApi>;\n\nexport class SupportedStdCallApiChecker {\n  tsUtils: TsUtils;\n  typeChecker: ts.TypeChecker;\n\n  constructor(tsUtils: TsUtils, typeChecker: ts.TypeChecker) {\n    this.tsUtils = tsUtils;\n    this.typeChecker = typeChecker;\n  }\n\n  stdObjectEntry = new Map<string, CheckStdCallApi>([['assign', this.checkObjectAssignCall]]);\n\n  StdCallApi = new Map<string | undefined, StdCallApiEntry>([\n    ['Object', this.stdObjectEntry],\n    ['ObjectConstructor', this.stdObjectEntry]\n  ]);\n\n  isSupportedStdCallAPI(callExpr: ts.CallExpression, parentSymName: string | undefined, symName: string): boolean {\n    const entry = this.StdCallApi.get(parentSymName);\n    if (entry) {\n      const stdCallApiCheckCb = entry.get(symName);\n      return !!stdCallApiCheckCb && stdCallApiCheckCb.call(this, callExpr);\n    }\n\n    return false;\n  }\n\n  private checkObjectAssignCall(callExpr: ts.CallExpression): boolean {\n\n    /*\n     * 'Object.assign' is allowed only with signature like following:\n     *    assign(target: Record<string, V>, ...source: Object[]>): Record<String, V>\n     *\n     * Note: For 'return' type, check the contextual type of call expression, as the\n     * return type of actual call signature will be deduced as an intersection of all\n     * types of the 'target' and 'source' arguments.\n     */\n\n    if (callExpr.typeArguments || callExpr.arguments.length === 0) {\n      return false;\n    }\n    const targetArgType = this.typeChecker.getTypeAtLocation(callExpr.arguments[0]);\n    if (!this.isValidObjectAssignRecordType(targetArgType)) {\n      return false;\n    }\n    const contextualType = this.typeChecker.getContextualType(callExpr);\n    if (!contextualType || !this.isValidObjectAssignRecordType(contextualType)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private isValidObjectAssignRecordType(type: ts.Type): boolean {\n    if (this.tsUtils.isStdRecordType(type) && type.aliasTypeArguments?.length) {\n      const typeArg = type.aliasTypeArguments[0];\n      if (typeArg.getFlags() & (ts.TypeFlags.String | ts.TypeFlags.StringLiteral)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n"],"mappings":"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","ignoreList":[]}