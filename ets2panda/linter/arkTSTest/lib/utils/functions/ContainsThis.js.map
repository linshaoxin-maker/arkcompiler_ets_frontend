{"version":3,"file":"ContainsThis.js","names":["ts","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","scopeContainsThisVisitor","tsNode","kind","SyntaxKind","ThisKeyword","isClassLike","isClassDeclaration","isClassExpression","isFunctionLike","isFunctionDeclaration","isFunctionExpression","isModuleDecl","isModuleDeclaration","child","getChildren","scopeContainsThis"],"sources":["../../../../lib/utils/functions/ContainsThis.ts"],"sourcesContent":["/*\n * Copyright (c) 2022-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as ts from 'typescript';\n\nfunction scopeContainsThisVisitor(tsNode: ts.Node): boolean {\n  if (tsNode.kind === ts.SyntaxKind.ThisKeyword) {\n    return true;\n  }\n\n  /*\n   * Visit children nodes. Skip any local declaration that defines\n   * its own scope as it needs to be checked separately.\n   */\n  const isClassLike = ts.isClassDeclaration(tsNode) || ts.isClassExpression(tsNode);\n  const isFunctionLike = ts.isFunctionDeclaration(tsNode) || ts.isFunctionExpression(tsNode);\n  const isModuleDecl = ts.isModuleDeclaration(tsNode);\n  if (isClassLike || isFunctionLike || isModuleDecl) {\n    return false;\n  }\n\n  for (const child of tsNode.getChildren()) {\n    if (scopeContainsThisVisitor(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function scopeContainsThis(tsNode: ts.Expression | ts.Block): boolean {\n  return scopeContainsThisVisitor(tsNode);\n}\n"],"mappings":";;;;;;AAeA,IAAAA,EAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAiC,SAAAC,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAH,wBAAAG,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAfjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASW,wBAAwBA,CAACC,MAAe,EAAW;EAC1D,IAAIA,MAAM,CAACC,IAAI,KAAKzB,EAAE,CAAC0B,UAAU,CAACC,WAAW,EAAE;IAC7C,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;EACE,MAAMC,WAAW,GAAG5B,EAAE,CAAC6B,kBAAkB,CAACL,MAAM,CAAC,IAAIxB,EAAE,CAAC8B,iBAAiB,CAACN,MAAM,CAAC;EACjF,MAAMO,cAAc,GAAG/B,EAAE,CAACgC,qBAAqB,CAACR,MAAM,CAAC,IAAIxB,EAAE,CAACiC,oBAAoB,CAACT,MAAM,CAAC;EAC1F,MAAMU,YAAY,GAAGlC,EAAE,CAACmC,mBAAmB,CAACX,MAAM,CAAC;EACnD,IAAII,WAAW,IAAIG,cAAc,IAAIG,YAAY,EAAE;IACjD,OAAO,KAAK;EACd;EAEA,KAAK,MAAME,KAAK,IAAIZ,MAAM,CAACa,WAAW,CAAC,CAAC,EAAE;IACxC,IAAId,wBAAwB,CAACa,KAAK,CAAC,EAAE;MACnC,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd;AAEO,SAASE,iBAAiBA,CAACd,MAAgC,EAAW;EAC3E,OAAOD,wBAAwB,CAACC,MAAM,CAAC;AACzC","ignoreList":[]}