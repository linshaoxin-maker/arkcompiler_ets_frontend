{"version":3,"file":"InteropTypescriptLinter.js","names":["ts","_interopRequireWildcard","require","path","fs","_TsUtils","_Problems","_FaultAttrs","_FaultDesc","_CookBookMsg","_TypeScriptLinterConfig","_ProblemSeverity","_Logger","_AutofixTitles","_ForEachNodeInSubtree","_SupportedDetsIndexableTypes","_TsSuffix","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_newArrowCheck","TypeError","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","String","Number","consoleLog","args","InteropTypescriptLinter","ideMode","outLine","k","length","Logger","info","initCounters","FaultID","LAST_ID","nodeCounters","lineCounters","constructor","tsTypeChecker","compileOptions","incrementalLintInfo","useRtLogic","Map","SyntaxKind","ImportDeclaration","handleImportDeclaration","InterfaceDeclaration","handleInterfaceDeclaration","ClassDeclaration","handleClassDeclaration","NewExpression","handleNewExpression","ObjectLiteralExpression","handleObjectLiteralExpression","ArrayLiteralExpression","handleArrayLiteralExpression","AsExpression","handleAsExpression","ExportDeclaration","handleExportDeclaration","ExportAssignment","handleExportAssignment","tsUtils","TsUtils","testMode","advancedClassChecks","currentErrorLine","currentWarningLine","etsLoaderPath","sdkPath","resolve","getLineAndCharacterOfNode","node","startPos","getStartPos","line","character","sourceFile","getLineAndCharacterOfPosition","incrementCounters","faultId","autofix","incrementCountersIdeMode","faultDescr","faultDesc","faultType","LinterConfig","tsSyntaxKindNames","kind","fileName","faultsAttrs","severity","ProblemSeverity","ERROR","totalErrorLines","errorLineNumbersString","WARNING","totalWarningLines","warningLineNumbersString","startOffset","endOffset","getHighlightRange","endPos","cookBookMsgNum","cookBookRef","cookBookTg","cookBookTag","isMsgNumValid","badNodeInfo","column","endLine","endColumn","start","end","type","problem","suggest","cookBookMsg","rule","ruleTag","autofixTitle","undefined","cookBookRefToFixTitle","problemsInfos","push","visitSourceFile","sf","_this","callback","totalVisitedNodes","incrementedType","incrementOnlyTokens","handler","handlersMap","bind","stopCondition","shouldSkipCheck","terminalTokens","forEachNodeInSubtree","importDeclaration","checkSendableClassorISendable","currentSourceFile","getSourceFile","contextSpecifier","moduleSpecifier","isStringLiteralLike","resolvedModule","getResolveModule","text","importClause","baseFileName","basename","resolvedFileName","startsWith","KIT","endsWith","D_TS","initKitInfos","name","namedBindings","isNamedImports","checkKitImportClause","extension","ETS","D_ETS","isInImportWhiteList","NoSideEffectImportEtsToTs","checkImportClause","resolveModuleName","sys","kitFileName","elements","getKitModuleFileNames","element","decl","getDeclarationNode","isModuleDeclaration","ARKTS_COLLECTIONS_D_ETS","ARKTS_LANG_D_ETS","isSendableClassOrInterfaceEntity","NoTsImportEts","_this2","checkAndIncrement","identifier","allowInSdkImportSendable","isNamespaceImport","NoNameSpaceImportEtsToTs","forEach","resolvedModuleIsInSdk","normalize","isInSdk","indexOf","tsClassDecl","heritageClauses","hClause","checkClassOrInterfaceDeclarationHeritageClause","tsTypeExpr","types","tsExprType","reduceReference","getTypeAtLocation","isSendableBaseType","isSendableClassOrInterface","SendableTypeInheritance","interfaceNode","iSymbol","trueSymbolAtLocation","iDecls","getDeclarations","tsNewExpr","handleSendableGenericTypes","typeArgs","typeArguments","arg","isSendableTypeNode","SendableGenericTypes","objectLiteralExpr","objectLiteralType","getContextualType","typeContainsSendableClassOrInterface","SendableObjectInitialization","arrayLitNode","arrayLitType","tsAsExpr","targetType","getNonNullableType","exprType","expression","isObject","isAnyType","SendableAsExpr","exportDecl","isKitModule","isEtsFile","NoTsReExportEts","handleSdkExport","exportClause","isNamedExports","exportSpecifier","SendableTypeExported","exportAssignment","_this3","kitInfos","JSON_SUFFIX","KIT_CONFIGS","KIT_CONFIG_PATH","kitConfigs","process","env","externalApiPaths","split","delimiter","kitConfig","kitModuleConfigJson","replace","existsSync","JSON","parse","readFileSync","index","kitInfo","symbols","propertyName","source","lint","exports"],"sources":["../../lib/InteropTypescriptLinter.ts"],"sourcesContent":["/*\n * Copyright (c) 2022-2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as ts from 'typescript';\nimport * as path from 'node:path';\nimport * as fs from 'fs';\nimport { TsUtils } from './utils/TsUtils';\nimport { FaultID } from './Problems';\nimport { faultsAttrs } from './FaultAttrs';\nimport { faultDesc } from './FaultDesc';\nimport { cookBookMsg, cookBookTag } from './CookBookMsg';\nimport { LinterConfig } from './TypeScriptLinterConfig';\nimport type { Autofix } from './autofixes/Autofixer';\nimport type { Autofixer } from './autofixes/Autofixer';\nimport type { ProblemInfo } from './ProblemInfo';\nimport { ProblemSeverity } from './ProblemSeverity';\nimport { Logger } from './Logger';\nimport type { IncrementalLintInfo } from './IncrementalLintInfo';\nimport { cookBookRefToFixTitle } from './autofixes/AutofixTitles';\nimport { forEachNodeInSubtree } from './utils/functions/ForEachNodeInSubtree';\nimport { ARKTS_COLLECTIONS_D_ETS, ARKTS_LANG_D_ETS } from './utils/consts/SupportedDetsIndexableTypes';\nimport { D_TS, D_ETS, ETS, KIT } from './utils/consts/TsSuffix';\n\nexport function consoleLog(...args: unknown[]): void {\n  if (InteropTypescriptLinter.ideMode) {\n    return;\n  }\n  let outLine = '';\n  for (let k = 0; k < args.length; k++) {\n    outLine += `${args[k]} `;\n  }\n  Logger.info(outLine);\n}\n\nexport interface KitSymbol {\n  source: string;\n  bindings: string;\n}\n\nexport type KitSymbols = Record<string, KitSymbol>;\n\nexport interface KitInfo {\n  symbols?: KitSymbols;\n}\n\nexport class InteropTypescriptLinter {\n  totalVisitedNodes: number = 0;\n  nodeCounters: number[] = [];\n  lineCounters: number[] = [];\n\n  totalErrorLines: number = 0;\n  errorLineNumbersString: string = '';\n  totalWarningLines: number = 0;\n  warningLineNumbersString: string = '';\n\n  problemsInfos: ProblemInfo[] = [];\n\n  tsUtils: TsUtils;\n\n  currentErrorLine: number;\n  currentWarningLine: number;\n\n  autofixer: Autofixer | undefined;\n\n  private sourceFile?: ts.SourceFile;\n  private isInSdk?: boolean;\n  static ideMode: boolean = false;\n  static testMode: boolean = false;\n  static kitInfos = new Map<string, KitInfo>();\n  private static etsLoaderPath: string;\n  private static sdkPath: string;\n  static advancedClassChecks = false;\n\n  private initCounters(): void {\n    for (let i = 0; i < FaultID.LAST_ID; i++) {\n      this.nodeCounters[i] = 0;\n      this.lineCounters[i] = 0;\n    }\n  }\n\n  constructor(\n    private readonly tsTypeChecker: ts.TypeChecker,\n    private readonly compileOptions: ts.CompilerOptions,\n    private readonly incrementalLintInfo?: IncrementalLintInfo,\n    private readonly useRtLogic?: boolean\n  ) {\n    this.tsUtils = new TsUtils(\n      this.tsTypeChecker,\n      InteropTypescriptLinter.testMode,\n      InteropTypescriptLinter.advancedClassChecks,\n      !!this.useRtLogic\n    );\n    this.currentErrorLine = 0;\n    this.currentWarningLine = 0;\n    InteropTypescriptLinter.etsLoaderPath = compileOptions.etsLoaderPath ? compileOptions.etsLoaderPath : '';\n    InteropTypescriptLinter.sdkPath = path.resolve(InteropTypescriptLinter.etsLoaderPath, '../..');\n    this.initCounters();\n  }\n\n  readonly handlersMap = new Map([\n    [ts.SyntaxKind.ImportDeclaration, this.handleImportDeclaration],\n    [ts.SyntaxKind.InterfaceDeclaration, this.handleInterfaceDeclaration],\n    [ts.SyntaxKind.ClassDeclaration, this.handleClassDeclaration],\n    [ts.SyntaxKind.NewExpression, this.handleNewExpression],\n    [ts.SyntaxKind.ObjectLiteralExpression, this.handleObjectLiteralExpression],\n    [ts.SyntaxKind.ArrayLiteralExpression, this.handleArrayLiteralExpression],\n    [ts.SyntaxKind.AsExpression, this.handleAsExpression],\n    [ts.SyntaxKind.ExportDeclaration, this.handleExportDeclaration],\n    [ts.SyntaxKind.ExportAssignment, this.handleExportAssignment]\n  ]);\n\n  private getLineAndCharacterOfNode(node: ts.Node | ts.CommentRange): ts.LineAndCharacter {\n    const startPos = TsUtils.getStartPos(node);\n    const { line, character } = this.sourceFile!.getLineAndCharacterOfPosition(startPos);\n    // TSC counts lines and columns from zero\n    return { line: line + 1, character: character + 1 };\n  }\n\n  incrementCounters(node: ts.Node | ts.CommentRange, faultId: number, autofix?: Autofix[]): void {\n    this.nodeCounters[faultId]++;\n    const { line, character } = this.getLineAndCharacterOfNode(node);\n    if (InteropTypescriptLinter.ideMode) {\n      this.incrementCountersIdeMode(node, faultId, autofix);\n    } else {\n      const faultDescr = faultDesc[faultId];\n      const faultType = LinterConfig.tsSyntaxKindNames[node.kind];\n      Logger.info(\n        `Warning: ${this.sourceFile!.fileName} (${line}, ${character}): ${faultDescr ? faultDescr : faultType}`\n      );\n    }\n    this.lineCounters[faultId]++;\n    switch (faultsAttrs[faultId].severity) {\n      case ProblemSeverity.ERROR: {\n        this.currentErrorLine = line;\n        ++this.totalErrorLines;\n        this.errorLineNumbersString += line + ', ';\n        break;\n      }\n      case ProblemSeverity.WARNING: {\n        if (line === this.currentWarningLine) {\n          break;\n        }\n        this.currentWarningLine = line;\n        ++this.totalWarningLines;\n        this.warningLineNumbersString += line + ', ';\n        break;\n      }\n    }\n  }\n\n  private incrementCountersIdeMode(node: ts.Node | ts.CommentRange, faultId: number, autofix?: Autofix[]): void {\n    if (!InteropTypescriptLinter.ideMode) {\n      return;\n    }\n    const [startOffset, endOffset] = TsUtils.getHighlightRange(node, faultId);\n    const startPos = this.sourceFile!.getLineAndCharacterOfPosition(startOffset);\n    const endPos = this.sourceFile!.getLineAndCharacterOfPosition(endOffset);\n\n    const faultDescr = faultDesc[faultId];\n    const faultType = LinterConfig.tsSyntaxKindNames[node.kind];\n\n    const cookBookMsgNum = faultsAttrs[faultId] ? faultsAttrs[faultId].cookBookRef : 0;\n    const cookBookTg = cookBookTag[cookBookMsgNum];\n    const severity = faultsAttrs[faultId]?.severity ?? ProblemSeverity.ERROR;\n    const isMsgNumValid = cookBookMsgNum > 0;\n    const badNodeInfo: ProblemInfo = {\n      line: startPos.line + 1,\n      column: startPos.character + 1,\n      endLine: endPos.line + 1,\n      endColumn: endPos.character + 1,\n      start: startOffset,\n      end: endOffset,\n      type: faultType,\n      severity: severity,\n      problem: FaultID[faultId],\n      suggest: isMsgNumValid ? cookBookMsg[cookBookMsgNum] : '',\n      rule: isMsgNumValid && cookBookTg !== '' ? cookBookTg : faultDescr ? faultDescr : faultType,\n      ruleTag: cookBookMsgNum,\n      autofix: autofix,\n      autofixTitle: isMsgNumValid && autofix !== undefined ? cookBookRefToFixTitle.get(cookBookMsgNum) : undefined\n    };\n    this.problemsInfos.push(badNodeInfo);\n  }\n\n  private visitSourceFile(sf: ts.SourceFile): void {\n    const callback = (node: ts.Node): void => {\n      this.totalVisitedNodes++;\n\n      const incrementedType = LinterConfig.incrementOnlyTokens.get(node.kind);\n      if (incrementedType !== undefined) {\n        this.incrementCounters(node, incrementedType);\n      } else {\n        const handler = this.handlersMap.get(node.kind);\n        if (handler !== undefined) {\n\n          /*\n           * possibly requested cancellation will be checked in a limited number of handlers\n           * checked nodes are selected as construct nodes, similar to how TSC does\n           */\n          handler.call(this, node);\n        }\n      }\n    };\n    const stopCondition = (node: ts.Node): boolean => {\n      if (!node) {\n        return true;\n      }\n      if (this.incrementalLintInfo?.shouldSkipCheck(node)) {\n        return true;\n      }\n      if (LinterConfig.terminalTokens.has(node.kind)) {\n        return true;\n      }\n      return false;\n    };\n    forEachNodeInSubtree(sf, callback, stopCondition);\n  }\n\n  private handleImportDeclaration(node: ts.Node): void {\n    const importDeclaration = node as ts.ImportDeclaration;\n    this.checkSendableClassorISendable(importDeclaration);\n  }\n\n  private checkSendableClassorISendable(node: ts.ImportDeclaration): void {\n    const currentSourceFile = node.getSourceFile();\n    const contextSpecifier = node.moduleSpecifier;\n    if (!ts.isStringLiteralLike(contextSpecifier)) {\n      return;\n    }\n    const resolvedModule = this.getResolveModule(contextSpecifier.text, currentSourceFile.fileName);\n    const importClause = node.importClause;\n    if (!resolvedModule) {\n      return;\n    }\n    // handle kit\n    const baseFileName = path.basename(resolvedModule.resolvedFileName);\n    if (baseFileName.startsWith(KIT) && baseFileName.endsWith(D_TS)) {\n      if (!InteropTypescriptLinter.etsLoaderPath) {\n        return;\n      }\n      InteropTypescriptLinter.initKitInfos(baseFileName);\n\n      if (!importClause) {\n        return;\n      }\n\n      // skip default import\n      if (importClause.name) {\n        return;\n      }\n\n      if (importClause.namedBindings && ts.isNamedImports(importClause.namedBindings)) {\n        this.checkKitImportClause(importClause.namedBindings, baseFileName);\n      }\n      return;\n    }\n\n    if (\n      resolvedModule?.extension !== ETS && resolvedModule?.extension !== D_ETS ||\n      TsUtils.isInImportWhiteList(resolvedModule)\n    ) {\n      return;\n    }\n\n    if (!importClause) {\n      this.incrementCounters(node, FaultID.NoSideEffectImportEtsToTs);\n      return;\n    }\n    this.checkImportClause(importClause, resolvedModule);\n  }\n\n  private getResolveModule(moduleSpecifier: string, fileName: string): ts.ResolvedModuleFull | undefined {\n    const resolveModuleName = ts.resolveModuleName(moduleSpecifier, fileName, this.compileOptions, ts.sys);\n    return resolveModuleName.resolvedModule;\n  }\n\n  private checkKitImportClause(node: ts.NamedImports | ts.NamedExports, kitFileName: string): void {\n    const length = node.elements.length;\n    for (let i = 0; i < length; i++) {\n      const fileName = InteropTypescriptLinter.getKitModuleFileNames(kitFileName, node, i);\n      if (fileName === '' || fileName.endsWith(D_TS)) {\n        continue;\n      }\n\n      const element = node.elements[i];\n      const decl = this.tsUtils.getDeclarationNode(element.name);\n      if (!decl) {\n        continue;\n      }\n      if (\n        ts.isModuleDeclaration(decl) && fileName !== ARKTS_COLLECTIONS_D_ETS && fileName !== ARKTS_LANG_D_ETS ||\n        !this.tsUtils.isSendableClassOrInterfaceEntity(element.name)\n      ) {\n        this.incrementCounters(element, FaultID.NoTsImportEts);\n      }\n    }\n  }\n\n  private checkImportClause(node: ts.ImportClause, resolvedModule: ts.ResolvedModuleFull): void {\n    const checkAndIncrement = (identifier: ts.Identifier | undefined): void => {\n      if (identifier && !this.tsUtils.isSendableClassOrInterfaceEntity(identifier)) {\n        this.incrementCounters(identifier, FaultID.NoTsImportEts);\n      }\n    };\n    if (node.name) {\n      if (this.allowInSdkImportSendable(resolvedModule)) {\n        return;\n      }\n      checkAndIncrement(node.name);\n    }\n    if (!node.namedBindings) {\n      return;\n    }\n    if (ts.isNamespaceImport(node.namedBindings)) {\n      this.incrementCounters(node.namedBindings, FaultID.NoNameSpaceImportEtsToTs);\n    } else if (ts.isNamedImports(node.namedBindings)) {\n      node.namedBindings.elements.forEach((element: ts.ImportSpecifier) => {\n        checkAndIncrement(element.name);\n      });\n    }\n  }\n\n  private allowInSdkImportSendable(resolvedModule: ts.ResolvedModuleFull): boolean {\n    const resolvedModuleIsInSdk = InteropTypescriptLinter.etsLoaderPath ?\n      path.normalize(resolvedModule.resolvedFileName).startsWith(InteropTypescriptLinter.sdkPath) :\n      false;\n    return (\n      !!this.isInSdk &&\n      resolvedModuleIsInSdk &&\n      path.basename(resolvedModule.resolvedFileName).indexOf('sendable') !== -1\n    );\n  }\n\n  private handleClassDeclaration(node: ts.Node): void {\n    const tsClassDecl = node as ts.ClassDeclaration;\n    if (!tsClassDecl.heritageClauses) {\n      return;\n    }\n\n    for (const hClause of tsClassDecl.heritageClauses) {\n      if (hClause) {\n        this.checkClassOrInterfaceDeclarationHeritageClause(hClause);\n      }\n    }\n  }\n\n  // In ts files, sendable classes and sendable interfaces can not be extended or implemented.\n  private checkClassOrInterfaceDeclarationHeritageClause(hClause: ts.HeritageClause): void {\n    for (const tsTypeExpr of hClause.types) {\n\n      /*\n       * Always resolve type from 'tsTypeExpr' node, not from 'tsTypeExpr.expression' node,\n       * as for the latter, type checker will return incorrect type result for classes in\n       * 'extends' clause. Additionally, reduce reference, as mostly type checker returns\n       * the TypeReference type objects for classes and interfaces.\n       */\n      const tsExprType = TsUtils.reduceReference(this.tsTypeChecker.getTypeAtLocation(tsTypeExpr));\n      const isSendableBaseType = this.tsUtils.isSendableClassOrInterface(tsExprType);\n      if (isSendableBaseType) {\n        this.incrementCounters(tsTypeExpr, FaultID.SendableTypeInheritance);\n      }\n    }\n  }\n\n  private handleInterfaceDeclaration(node: ts.Node): void {\n    const interfaceNode = node as ts.InterfaceDeclaration;\n    const iSymbol = this.tsUtils.trueSymbolAtLocation(interfaceNode.name);\n    const iDecls = iSymbol ? iSymbol.getDeclarations() : null;\n    if (!iDecls) {\n      return;\n    }\n\n    if (!interfaceNode.heritageClauses) {\n      return;\n    }\n\n    for (const hClause of interfaceNode.heritageClauses) {\n      if (hClause) {\n        this.checkClassOrInterfaceDeclarationHeritageClause(hClause);\n      }\n    }\n  }\n\n  private handleNewExpression(node: ts.Node): void {\n    const tsNewExpr = node as ts.NewExpression;\n    this.handleSendableGenericTypes(tsNewExpr);\n  }\n\n  private handleSendableGenericTypes(node: ts.NewExpression): void {\n    const type = this.tsTypeChecker.getTypeAtLocation(node);\n    if (!this.tsUtils.isSendableClassOrInterface(type)) {\n      return;\n    }\n\n    const typeArgs = node.typeArguments;\n    if (!typeArgs || typeArgs.length === 0) {\n      return;\n    }\n\n    for (const arg of typeArgs) {\n      if (!this.tsUtils.isSendableTypeNode(arg)) {\n        this.incrementCounters(arg, FaultID.SendableGenericTypes);\n      }\n    }\n  }\n\n  private handleObjectLiteralExpression(node: ts.Node): void {\n    const objectLiteralExpr = node as ts.ObjectLiteralExpression;\n    const objectLiteralType = this.tsTypeChecker.getContextualType(objectLiteralExpr);\n    if (objectLiteralType && this.tsUtils.typeContainsSendableClassOrInterface(objectLiteralType)) {\n      this.incrementCounters(node, FaultID.SendableObjectInitialization);\n    }\n  }\n\n  private handleArrayLiteralExpression(node: ts.Node): void {\n    const arrayLitNode = node as ts.ArrayLiteralExpression;\n    const arrayLitType = this.tsTypeChecker.getContextualType(arrayLitNode);\n    if (arrayLitType && this.tsUtils.typeContainsSendableClassOrInterface(arrayLitType)) {\n      this.incrementCounters(node, FaultID.SendableObjectInitialization);\n    }\n  }\n\n  private handleAsExpression(node: ts.Node): void {\n    const tsAsExpr = node as ts.AsExpression;\n    const targetType = this.tsTypeChecker.getTypeAtLocation(tsAsExpr.type).getNonNullableType();\n    const exprType = this.tsTypeChecker.getTypeAtLocation(tsAsExpr.expression).getNonNullableType();\n\n    if (\n      !this.tsUtils.isSendableClassOrInterface(exprType) &&\n      !this.tsUtils.isObject(exprType) &&\n      !TsUtils.isAnyType(exprType) &&\n      this.tsUtils.isSendableClassOrInterface(targetType)\n    ) {\n      this.incrementCounters(tsAsExpr, FaultID.SendableAsExpr);\n    }\n  }\n\n  private handleExportDeclaration(node: ts.Node): void {\n    const exportDecl = node as ts.ExportDeclaration;\n    const currentSourceFile = exportDecl.getSourceFile();\n    const contextSpecifier = exportDecl.moduleSpecifier;\n\n    if (contextSpecifier && ts.isStringLiteralLike(contextSpecifier)) {\n      const resolvedModule = this.getResolveModule(contextSpecifier.text, currentSourceFile.fileName);\n\n      if (!resolvedModule) {\n        return;\n      }\n\n      if (this.isKitModule(resolvedModule.resolvedFileName, exportDecl)) {\n        return;\n      }\n\n      if (InteropTypescriptLinter.isEtsFile(resolvedModule.extension)) {\n        this.incrementCounters(contextSpecifier, FaultID.NoTsReExportEts);\n      }\n      return;\n    }\n\n    if (!this.isInSdk) {\n      return;\n    }\n\n    this.handleSdkExport(exportDecl);\n  }\n\n  private isKitModule(resolvedFileName: string, exportDecl: ts.ExportDeclaration): boolean {\n    const baseFileName = path.basename(resolvedFileName);\n    if (baseFileName.startsWith(KIT) && baseFileName.endsWith(D_TS)) {\n      if (!InteropTypescriptLinter.etsLoaderPath) {\n        return true;\n      }\n      InteropTypescriptLinter.initKitInfos(baseFileName);\n      const exportClause = exportDecl.exportClause;\n\n      if (exportClause && ts.isNamedExports(exportClause)) {\n        this.checkKitImportClause(exportClause, baseFileName);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private static isEtsFile(extension: string | undefined): boolean {\n    return extension === ETS || extension === D_ETS;\n  }\n\n  private handleSdkExport(exportDecl: ts.ExportDeclaration): void {\n    if (!exportDecl.exportClause || !ts.isNamedExports(exportDecl.exportClause)) {\n      return;\n    }\n\n    for (const exportSpecifier of exportDecl.exportClause.elements) {\n      if (this.tsUtils.isSendableClassOrInterfaceEntity(exportSpecifier.name)) {\n        this.incrementCounters(exportSpecifier.name, FaultID.SendableTypeExported);\n      }\n    }\n  }\n\n  private handleExportAssignment(node: ts.Node): void {\n    if (!this.isInSdk) {\n      return;\n    }\n\n    // In sdk .d.ts files, sendable classes and sendable interfaces can not be \"default\" exported.\n    const exportAssignment = node as ts.ExportAssignment;\n\n    if (this.tsUtils.isSendableClassOrInterfaceEntity(exportAssignment.expression)) {\n      this.incrementCounters(exportAssignment.expression, FaultID.SendableTypeExported);\n    }\n  }\n\n  private static initKitInfos(fileName: string): void {\n    if (InteropTypescriptLinter.kitInfos.has(fileName)) {\n      return;\n    }\n\n    const JSON_SUFFIX = '.json';\n    const KIT_CONFIGS = '../ets-loader/kit_configs';\n    const KIT_CONFIG_PATH = './build-tools/ets-loader/kit_configs';\n\n    const kitConfigs: string[] = [path.resolve(InteropTypescriptLinter.etsLoaderPath, KIT_CONFIGS)];\n    if (process.env.externalApiPaths) {\n      const externalApiPaths = process.env.externalApiPaths.split(path.delimiter);\n      externalApiPaths.forEach((sdkPath) => {\n        kitConfigs.push(path.resolve(sdkPath, KIT_CONFIG_PATH));\n      });\n    }\n\n    for (const kitConfig of kitConfigs) {\n      const kitModuleConfigJson = path.resolve(kitConfig, './' + fileName.replace(D_TS, JSON_SUFFIX));\n      if (fs.existsSync(kitModuleConfigJson)) {\n        InteropTypescriptLinter.kitInfos.set(fileName, JSON.parse(fs.readFileSync(kitModuleConfigJson, 'utf-8')));\n      }\n    }\n  }\n\n  private static getKitModuleFileNames(\n    fileName: string,\n    node: ts.NamedImports | ts.NamedExports,\n    index: number\n  ): string {\n    if (!InteropTypescriptLinter.kitInfos.has(fileName)) {\n      return '';\n    }\n\n    const kitInfo = InteropTypescriptLinter.kitInfos.get(fileName);\n    if (!kitInfo?.symbols) {\n      return '';\n    }\n\n    const element = node.elements[index];\n    return element.propertyName ?\n      kitInfo.symbols[element.propertyName.text].source :\n      kitInfo.symbols[element.name.text].source;\n  }\n\n  lint(sourceFile: ts.SourceFile): void {\n    this.sourceFile = sourceFile;\n    this.isInSdk = InteropTypescriptLinter.etsLoaderPath ?\n      path.normalize(this.sourceFile.fileName).indexOf(InteropTypescriptLinter.sdkPath) === 0 :\n      false;\n    this.visitSourceFile(this.sourceFile);\n  }\n}\n"],"mappings":"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","ignoreList":[]}