{"version":3,"file":"incrementalLinter.js","names":["ts","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","IncrementalLinterState","constructor","builderProgram","arkTSVersion","Set","programState","getState","oldDiagnostics","arktsLinterDiagnosticsPerFile","Map","changedFiles","collectChangedFilesFromProgramState","isFileChanged","srcFile","resolvedPath","getOldDiagnostics","updateDiagnostics","newDiagnostics","updateProgramStateArkTSVersion","emitBuildInfo","buildInfoWriteFile","state","arrayFrom","fileInfos","keys","changedFilesSet","changedFile","fileInfo","affectsGlobalScope","referencedMap","seenPaths","queue","length","path","pop","add","push","BuilderState","getReferencedByPaths","iterator","result","iterResult","next","done","exports"],"sources":["../../../sdk/linter_1_1/incrementalLinter.ts"],"sourcesContent":["/*\n * Copyright (c) 2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as ts from 'typescript';\n\nexport class IncrementalLinterState {\n  // @ts-ignore\n  private readonly changedFiles: ts.Set<ts.Path> = new ts.Set<ts.Path>();\n  // @ts-ignore\n  private readonly programState: ts.ReusableBuilderProgramState;\n  private readonly oldDiagnostics:\n  // @ts-ignore\n    | ts.ESMap<ts.Path, readonly ts.ReusableDiagnostic[] | readonly ts.Diagnostic[]>\n    | undefined;\n\n  constructor(builderProgram: ts.BuilderProgram, arkTSVersion?: string) {\n    // @ts-ignore\n    this.programState = builderProgram.getState();\n    this.oldDiagnostics = this.programState.arktsLinterDiagnosticsPerFile;\n    this.programState.arktsLinterDiagnosticsPerFile = new Map();\n    this.changedFiles = IncrementalLinterState.collectChangedFilesFromProgramState(this.programState, arkTSVersion);\n  }\n\n  isFileChanged(srcFile: ts.SourceFile): boolean {\n    // @ts-ignore\n    return this.changedFiles.has(srcFile.resolvedPath);\n  }\n\n  getOldDiagnostics(srcFile: ts.SourceFile): ts.Diagnostic[] {\n    // @ts-ignore\n    return (this.oldDiagnostics?.get(srcFile.resolvedPath) as ts.Diagnostic[]) ?? [];\n  }\n\n  updateDiagnostics(srcFile: ts.SourceFile, newDiagnostics: ts.Diagnostic[]): void {\n    // @ts-ignore\n    this.programState.arktsLinterDiagnosticsPerFile?.set(srcFile.resolvedPath, newDiagnostics);\n  }\n\n  updateProgramStateArkTSVersion(arkTSVersion?: string): void {\n    this.programState.arkTSVersion = arkTSVersion;\n  }\n\n  static emitBuildInfo(buildInfoWriteFile: ts.WriteFileCallback, builderProgram: ts.BuilderProgram): void {\n    // @ts-ignore\n    builderProgram.emitBuildInfo(buildInfoWriteFile);\n  }\n\n  private static collectChangedFilesFromProgramState(\n    // @ts-ignore\n    state: ts.ReusableBuilderProgramState,\n    arkTSVersion?: string\n  ): ts.Set<ts.Path> {\n\n    /*\n     * If old arkTSVersion from last run is not same current arkTSVersion from ets_loader,\n     * then process all files in project.\n     */\n    if (state.arkTSVersion !== arkTSVersion) {\n      // @ts-ignore\n      return new ts.Set<ts.Path>(IncrementalLinterState.arrayFrom(state.fileInfos.keys()));\n    }\n\n    // @ts-ignore\n    const changedFiles = new ts.Set<ts.Path>(state.changedFilesSet);\n\n    /*\n     * If any source file that affects global scope has been changed,\n     * then process all files in project.\n     */\n    for (const changedFile of IncrementalLinterState.arrayFrom(changedFiles.keys())) {\n      const fileInfo = state.fileInfos.get(changedFile);\n      if (fileInfo?.affectsGlobalScope) {\n        // @ts-ignore\n        return new ts.Set<ts.Path>(IncrementalLinterState.arrayFrom(state.fileInfos.keys()));\n      }\n    }\n\n    if (!state.referencedMap) {\n      return changedFiles;\n    }\n\n    // @ts-ignore\n    const seenPaths = new ts.Set<ts.Path>();\n    const queue = IncrementalLinterState.arrayFrom(changedFiles.keys());\n    while (queue.length) {\n      const path = queue.pop()!;\n      if (!seenPaths.has(path)) {\n        seenPaths.add(path);\n\n        // Collect all files that import this file\n        // @ts-ignore\n        queue.push(...ts.BuilderState.getReferencedByPaths(state, path));\n      }\n    }\n    return seenPaths;\n  }\n\n  private static arrayFrom(iterator: Iterator<ts.Path>): ts.Path[] {\n    const result: ts.Path[] = [];\n    for (let iterResult = iterator.next(); !iterResult.done; iterResult = iterator.next()) {\n      result.push(iterResult.value);\n    }\n    return result;\n  }\n}\n"],"mappings":"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","ignoreList":[]}